 complex destructor found
  --> 1654653399040a61.FlowToken:81:8
   |
81 |         destroy() {
82 |             if self.balance > 0.0 {
83 |                 FlowToken.totalSupply = FlowToken.totalSupply - self.balance
84 |             }
85 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
  --> ead892083b3e2c6c.FlowUtilityToken:81:8
   |
81 |         destroy() {
82 |             FlowUtilityToken.totalSupply = FlowUtilityToken.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> ead892083b3e2c6c.DapperUtilityCoin:81:8
   |
81 |         destroy() {
82 |             DapperUtilityCoin.totalSupply = DapperUtilityCoin.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 0b2a3299cc857e29.PackNFT:128:8
    |
128 |         destroy() {
129 |             let p <- PackNFT.packs.remove(key: self.id) ?? panic("no such pack")
130 |             PackNFT.totalSupply = PackNFT.totalSupply - (1 as UInt64)
131 | 
132 |             emit Burned(id: self.id)
133 |             destroy p
134 |         }
    |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 0b2a3299cc857e29.TopShot:686:8
    |
686 |         destroy() {
687 |             emit MomentDestroyed(id: self.id)
688 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8d0e87b65159ae63.FlowStakingCollection:155:8
    |
155 |         destroy() {
156 |             let nodeIDs = self.getNodeIDs()
157 |             let delegatorIDs = self.getDelegatorIDs()
158 | 
159 |             for nodeID in nodeIDs {
160 |                 self.closeStake(nodeID: nodeID, delegatorID: nil)
161 |             }
162 | 
163 |             for delegatorID in delegatorIDs {
164 |                 self.closeStake(nodeID: delegatorID.delegatorNodeID, delegatorID: delegatorID.delegatorID)
165 |             }
166 | 
167 |             destroy self.nodeStakers
168 |             destroy self.nodeDelegators
169 |         }
    |         ^ kinds: OtherComplexOperation, LoopStatement, 
 complex destructor found
   --> 8624b52f9ddcd04a.FlowClusterQC:275:8
    |
275 |         destroy () {
276 |             FlowClusterQC.voterClaimed[self.nodeID] = nil
277 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
   --> 8624b52f9ddcd04a.FlowIDTableStaking:222:8
    |
222 |         destroy() {
223 |             let flowTokenRef = FlowIDTableStaking.account.borrow<&FlowToken.Vault>(from: /storage/flowTokenVault)!
224 |             FlowIDTableStaking.totalTokensStakedByNodeType[self.role] = FlowIDTableStaking.totalTokensStakedByNodeType[self.role]! - self.tokensStaked.balance
225 |             flowTokenRef.deposit(from: <-self.tokensStaked)
226 |             flowTokenRef.deposit(from: <-self.tokensCommitted)
227 |             flowTokenRef.deposit(from: <-self.tokensUnstaking)
228 |             flowTokenRef.deposit(from: <-self.tokensUnstaked)
229 |             flowTokenRef.deposit(from: <-self.tokensRewarded)
230 | 
231 |             // Return all of the delegators' funds
232 |             for delegator in self.delegators.keys {
233 |                 let delRecord = self.borrowDelegatorRecord(delegator)
234 |                 flowTokenRef.deposit(from: <-delRecord.tokensCommitted.withdraw(amount: delRecord.tokensCommitted.balance))
235 |                 flowTokenRef.deposit(from: <-delRecord.tokensStaked.withdraw(amount: delRecord.tokensStaked.balance))
236 |                 flowTokenRef.deposit(from: <-delRecord.tokensUnstaked.withdraw(amount: delRecord.tokensUnstaked.balance))
237 |                 flowTokenRef.deposit(from: <-delRecord.tokensRewarded.withdraw(amount: delRecord.tokensRewarded.balance))
238 |                 flowTokenRef.deposit(from: <-delRecord.tokensUnstaking.withdraw(amount: delRecord.tokensUnstaking.balance))
239 |             }
240 | 
241 |             destroy self.delegators
242 |         }
    |         ^ kinds: OtherComplexOperation, LoopStatement, 
 complex destructor found
   --> 8624b52f9ddcd04a.FlowDKG:122:8
    |
122 |         destroy () {
123 |             FlowDKG.nodeClaimed[self.nodeID] = false
124 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
   --> 01d63aa89238a559.Flowiykyk:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             Flowiykyk.totalSupply = Flowiykyk.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 53f389d96fb4ce5e.SloppyStakes:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             SloppyStakes.totalSupply = SloppyStakes.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
  --> 8528d8dd8a586f0d.test:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> c58af1fb084bca0b.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cea0c362c4ceb422.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2478516afff0984e.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3573a1b3f3910419.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d8f4a6515dcabe43.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d114186ee26b04c6.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d3de94c8914fc06a.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 21ed482619b1cad4.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 37b92d1580b5c0b5.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 280df619a6107051.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c7407d5d7b6f0ea7.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> da3e2af72eee7aef.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c01fe8b7ee0a9891.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> d0715e3ddbfd3e60.USDToken:80:8
   |
80 |         destroy() {
81 |             USDToken.totalSupply = USDToken.totalSupply - self.balance
82 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 2ac77abfd534b4fd.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3c931f8c4c30be9c.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 319d3bddcdefd615.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3357b77bbecb12b9.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 34ba81b8b761306e.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2503d24827cf18d8.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3de89cae940f3e0a.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> de6213b08c5f1c02.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d0dd3865a69b30b1.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2096cb04c18e4a42.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cfdb40401cf134b4.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2bbcf99d0d0b346b.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3f90b3217be44e47.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 36c2ae37588a4023.Collectible:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> cfdd90d4a00f7b5b.TeleportedTetherToken:95:4
   |
95 |     destroy() {
96 |       TeleportedTetherToken.totalSupply = TeleportedTetherToken.totalSupply - self.balance
97 |     }
   |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> c6c77b9f5c7a378f.FlowSwapPair:108:4
    |
108 |     destroy() {
109 |       FlowSwapPair.totalSupply = FlowSwapPair.totalSupply - self.balance
110 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 7cd115b0e4e74900.NEPHELE:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 031cb70f0c923068.FILA:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> f4264ac8f3256818.Evolution:347:8
    |
347 |         destroy() {
348 |             emit CollectibleDestroyed(id: self.id)
349 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 0c4a39107850f89b.SegaMascots:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 0c4a39107850f89b.GameSouls:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4c47bdc309dc025f.SPNFT:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2a0eccae942667be.FlovatarDAO:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             FlovatarDAO.totalSupply = FlovatarDAO.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
  --> 2debac69a029ee02.Flover:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 3c5959b568896393.FUSD:84:8
   |
84 |         destroy() {
85 |             FUSD.totalSupply = FUSD.totalSupply - self.balance
86 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 7120ab3fbf74ea9e.NCTRDAO:83:8
   |
83 |         destroy() {
84 |             if (self.balance > 0.0) {
85 |                 emit TokensBurned(amount: self.balance)
86 |                 NCTRDAO.totalSupply = NCTRDAO.totalSupply - self.balance
87 |             }
88 |         }
   |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> e8aeee7a48e71d78.MadbopNFTs:223:8
    |
223 |         destroy(){
224 |             emit NFTDestroyed(id: self.id)
225 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> d796ff17107bbff6.Versus:84:2
   |
84 | 		destroy(){
85 | 			log("Destroy versus")
86 | 			destroy self.uniqueAuction
87 | 			destroy self.editionAuctions
88 | 			emit DropDestroyed(dropId: self.dropID)
89 | 		}
   | 		^ kinds: LoggingCall, EventEmission, 
 complex destructor found
   --> d796ff17107bbff6.Auction:363:8
    |
363 |         destroy() {
364 |             log("destroy auction")
365 |             // send the NFT back to auction owner
366 |             if self.NFT != nil {
367 |                 self.sendNFT(self.ownerCollectionCap)
368 |             }
369 |             
370 |             // if there's a bidder...
371 |             if let vaultCap = self.recipientVaultCap {
372 |                 // ...send the bid tokens back to the bidder
373 |                 self.sendBidTokens(vaultCap)
374 |             }
375 | 
376 |             destroy self.NFT
377 |             destroy self.bidVault
378 |         }
    |         ^ kinds: LoggingCall, IfStatement, OtherComplexOperation, 
 complex destructor found
   --> d796ff17107bbff6.Auction:531:8
    |
531 |         destroy() {
532 |             log("destroy auction collection")
533 |             // destroy the empty resources
534 |             destroy self.auctionItems
535 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> c38aea683c0c4d38.ZelosAccountingToken:98:8
    |
 98 |         destroy() {
 99 |             ZelosAccountingToken.totalSupply = ZelosAccountingToken.totalSupply - self.balance
100 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> c38aea683c0c4d38.Eternal:397:8
    |
397 |         destroy() {
398 |             emit MomentDestroyed(id: self.id)
399 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c8c340cebd11f690.DarkCountryMarket:195:8
    |
195 |         destroy() {
196 |             // Whether the sale completed or not, publicize that it is being withdrawn.
197 |             emit SaleOfferFinished(itemID: self.itemID)
198 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c8c340cebd11f690.SdmToken:103:8
    |
103 |         destroy() {
104 |             SdmToken.totalSupply = SdmToken.totalSupply - self.balance
105 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 20187093790b9aef.YBees:366:8
    |
366 |         destroy() {
367 |             emit ItemDestroyed(id: self.id)
368 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.MintStoreItem:492:8
    |
492 |         destroy() {
493 |             emit ItemDestroyed(id: self.id)
494 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.Gamisodes:504:8
    |
504 |         destroy() {
505 |             emit ItemDestroyed(id: self.id)
506 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.Pickem:362:8
    |
362 |         destroy() {
363 |             emit ItemDestroyed(id: self.id)
364 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.LOSTiNTurismo:365:8
    |
365 |         destroy() {
366 |             emit ItemDestroyed(id: self.id)
367 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.OpenLockerInc:502:8
    |
502 |         destroy() {
503 |             emit ItemDestroyed(id: self.id)
504 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.Lufthaus:390:8
    |
390 |         destroy() {
391 |             emit ItemDestroyed(id: self.id)
392 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.OpenLockerIncBoneYardHuskyzClub:365:8
    |
365 |         destroy() {
366 |             emit ItemDestroyed(id: self.id)
367 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 20187093790b9aef.YoungBoysBern:495:8
    |
495 |         destroy() {
496 |             emit ItemDestroyed(id: self.id)
497 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 56c57a1d04b82fa8.DevryCoin:99:4
    |
 99 |     destroy() {
100 |       DevryCoin.totalSupply = DevryCoin.totalSupply - self.balance
101 |       if(self.balance > 0.0) {
102 |         emit TokensBurned(amount: self.balance)
103 |       }
104 |     }
    |     ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> a49cc0ee46c54bfb.NFTSales:28:8
   |
28 |         destroy() {
29 |             // Don't allow destruction if not empty
30 |             assert(self.collection.getIDs().length == 0, message: "OpenedPack's card collection is not empty")
31 |             assert(self.vault.balance == 0.0, message: "OpenedPack's shrd vault is not empty")
32 |             destroy self.collection
33 |             destroy self.vault
34 |         }
   |         ^ kinds: AssertOrCondition, 
 complex destructor found
  --> a49cc0ee46c54bfb.MotoGPPack:96:8
   |
96 |         destroy(){
97 |             emit Burn(id: self.id)
98 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> a49cc0ee46c54bfb.MotoGPNFTStorefront:330:8
    |
330 |         destroy () {
331 |             // If the offer has not been accepted, we regard it as completed here.
332 |             // Otherwise we regard it as completed in accept().
333 |             // This is because we destroy the offer in Storefront.removeSaleOffer()
334 |             // or Storefront.cleanup() .
335 |             // If we change this destructor, revisit those functions.
336 |             
337 |             if !self.details.accepted {
338 |               log("Destroying sale offer")
339 |                 emit SaleOfferCompleted(
340 |                     saleOfferResourceID: self.uuid,
341 |                     storefrontResourceID: self.details.storefrontID,
342 |                     accepted: self.details.accepted,
343 |                     price: self.details.salePrice,
344 |                     ftVaultType: self.details.salePaymentVaultType,
345 |                     nftType: self.details.nftType,
346 |                     nftID: self.details.nftID
347 |                 )
348 |             }
349 |         }
    |         ^ kinds: IfStatement, LoggingCall, EventEmission, 
 complex destructor found
   --> a49cc0ee46c54bfb.MotoGPNFTStorefront:524:8
    |
524 |         destroy () {
525 |             destroy self.saleOffers
526 | 
527 |             // Let event consumers know that this storefront will no longer exist
528 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
529 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> a49cc0ee46c54bfb.NFTSalesCapped:29:8
   |
29 |         destroy() {
30 |             // Don't allow destruction if not empty
31 |             assert(self.collection.getIDs().length == 0, message: "OpenedPack's card collection is not empty")
32 |             assert(self.vault.balance == 0.0, message: "OpenedPack's shrd vault is not empty")
33 |             destroy self.collection
34 |             destroy self.vault
35 |         }
   |         ^ kinds: AssertOrCondition, 
 complex destructor found
  --> a49cc0ee46c54bfb.MotoGPCard:86:8
   |
86 |         destroy(){
87 |             MotoGPCard.totalSupply = MotoGPCard.totalSupply - (1 as UInt64)
88 |             emit Burn(id: self.id)
89 |         }
   |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 87f3f233f34b0733.FusdUsdtSwapPair:102:4
    |
102 |     destroy() {
103 |       FusdUsdtSwapPair.totalSupply = FusdUsdtSwapPair.totalSupply - self.balance
104 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 64f83c60989ce555.ChainmonstersMarketplace:112:8
    |
112 |         destroy() {
113 |             // Whether the sale completed or not, publicize that it is being withdrawn.
114 |             emit SaleOfferFinished(itemID: self.saleItemID)
115 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.GiglabsShopifyDemo_NFT:564:8
    |
564 |         destroy() {
565 |             GiglabsShopifyDemo_NFT.totalSupply = GiglabsShopifyDemo_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.BreakingT_NFT:564:8
    |
564 |         destroy() {
565 |             BreakingT_NFT.totalSupply = BreakingT_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.UFC_NFT:564:8
    |
564 |         destroy() {
565 |             UFC_NFT.totalSupply = UFC_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.AmericanAirlines_NFT:564:8
    |
564 |         destroy() {
565 |             AmericanAirlines_NFT.totalSupply = AmericanAirlines_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.Atheletes_Unlimited_NFT:564:8
    |
564 |         destroy() {
565 |             Atheletes_Unlimited_NFT.totalSupply = Atheletes_Unlimited_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.DGD_NFT:564:8
    |
564 |         destroy() {
565 |             DGD_NFT.totalSupply = DGD_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.Canes_Vault_NFT:564:8
    |
564 |         destroy() {
565 |             Canes_Vault_NFT.totalSupply = Canes_Vault_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.NFL_NFT:564:8
    |
564 |         destroy() {
565 |             NFL_NFT.totalSupply = NFL_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.GL_BridgeTest_NFT:564:8
    |
564 |         destroy() {
565 |             GL_BridgeTest_NFT.totalSupply = GL_BridgeTest_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.CNN_NFT:563:8
    |
563 |         destroy() {
564 |             CNN_NFT.totalSupply = CNN_NFT.totalSupply - (1 as UInt64)
565 |             emit NFTDestroyed(id: self.id)
566 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.Andbox_NFT:564:8
    |
564 |         destroy() {
565 |             Andbox_NFT.totalSupply = Andbox_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.AtlantaNft_NFT:564:8
    |
564 |         destroy() {
565 |             AtlantaNft_NFT.totalSupply = AtlantaNft_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.Art_NFT:564:8
    |
564 |         destroy() {
565 |             Art_NFT.totalSupply = Art_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.The_Next_Cartel_NFT:564:8
    |
564 |         destroy() {
565 |             The_Next_Cartel_NFT.totalSupply = The_Next_Cartel_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.RaceDay_NFT:564:8
    |
564 |         destroy() {
565 |             RaceDay_NFT.totalSupply = RaceDay_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.RareRooms_NFT:564:8
    |
564 |         destroy() {
565 |             RareRooms_NFT.totalSupply = RareRooms_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.Costacos_NFT:564:8
    |
564 |         destroy() {
565 |             Costacos_NFT.totalSupply = Costacos_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 329feb3ab062d289.BlockleteGames_NFT:564:8
    |
564 |         destroy() {
565 |             BlockleteGames_NFT.totalSupply = BlockleteGames_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 23dddd854fcc8c6f.KOTD:623:8
    |
623 |         destroy() {
624 |             emit CollectibleDestroyed(id: self.id)
625 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0f9df91c9121c460.BloctoTokenStaking:94:8
    |
 94 |         destroy() {
 95 |             let bloctoTokenRef = BloctoTokenStaking.account.borrow<&BloctoToken.Vault>(from: BloctoToken.TokenStoragePath)!
 96 |             BloctoTokenStaking.totalTokensStaked = BloctoTokenStaking.totalTokensStaked - self.tokensStaked.balance
 97 |             bloctoTokenRef.deposit(from: <-self.tokensStaked)
 98 |             bloctoTokenRef.deposit(from: <-self.tokensCommitted)
 99 |             bloctoTokenRef.deposit(from: <-self.tokensUnstaked)
100 |             bloctoTokenRef.deposit(from: <-self.tokensRewarded)
101 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
  --> 0f9df91c9121c460.BloctoToken:94:8
   |
94 |         destroy() {
95 |             BloctoToken.totalSupply = BloctoToken.totalSupply - self.balance
96 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 9beeaabd033e0053.PigCoin:99:8
    |
 99 |         destroy() {
100 |             PigCoin.totalSupply = PigCoin.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> a44cca3d0db03cfd.SubsArt:208:8
    |
208 |         destroy() {
209 |             SubsArt.totalSupply = SubsArt.totalSupply - UInt64(1)
210 |             emit ArtNFTDestroyed(id: self.id)
211 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> ce3935ac21d0d8ad.LegaciCollectible:194:8
    |
194 |         destroy() {
195 |             emit LegaciCollectibleDestroyed(id: self.id)
196 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Kitty_LowPoly:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Panda_Snow:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Bear_AI:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_CyberYak:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Geiko:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Day_After_Day:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Tanuki:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Eagle_Variations:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f0dc833f0350f2f8.MondoPixo_Horse_AI:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 39bd8fa7414207cb.RohamsWieners:116:8
    |
116 |         destroy() {
117 |             if (self.balance > 0.0) {
118 |                 emit TokensBurned(amount: self.balance)
119 |                 RohamsWieners.totalSupply = RohamsWieners.totalSupply - self.balance
120 |             }
121 |         }
    |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
  --> a38d9dda1d06fdea.EnemyMetal:77:8
   |
77 |         destroy() {
78 |             emit Burn(id: self.id)
79 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4eb8a10cb9f87357.NFTStorefront:301:8
    |
301 |         destroy () {
302 |             // If the listing has not been purchased, we regard it as completed here.
303 |             // Otherwise we regard it as completed in purchase().
304 |             // This is because we destroy the listing in Storefront.removeListing()
305 |             // or Storefront.cleanup() .
306 |             // If we change this destructor, revisit those functions.
307 |             if !self.details.purchased {
308 |                 emit ListingCompleted(
309 |                     listingResourceID: self.uuid,
310 |                     storefrontResourceID: self.details.storefrontID,
311 |                     purchased: self.details.purchased,
312 |                     nftType: self.details.nftType,
313 |                     nftID: self.details.nftID
314 |                 )
315 |             }
316 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4eb8a10cb9f87357.NFTStorefront:479:8
    |
479 |         destroy () {
480 |             destroy self.listings
481 | 
482 |             // Let event consumers know that this storefront will no longer exist
483 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
484 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4eb8a10cb9f87357.NFTStorefrontV2:425:8
    |
425 |         destroy () {
426 |             // If the listing has not been purchased, we regard it as completed here.
427 |             // Otherwise we regard it as completed in purchase().
428 |             // This is because we destroy the listing in Storefront.removeListing()
429 |             // or Storefront.cleanup() .
430 |             // If we change this destructor, revisit those functions.
431 |             if !self.details.purchased {
432 |                 emit ListingCompleted(
433 |                     listingResourceID: self.uuid,
434 |                     storefrontResourceID: self.details.storefrontID,
435 |                     purchased: self.details.purchased,
436 |                     nftType: self.details.nftType,
437 |                     nftUUID: self.details.nftUUID,
438 |                     nftID: self.details.nftID,
439 |                     salePaymentVaultType: self.details.salePaymentVaultType,
440 |                     salePrice: self.details.salePrice,
441 |                     customID: self.details.customID,
442 |                     commissionAmount: self.details.commissionAmount,
443 |                     commissionReceiver: nil,
444 |                     expiry: self.details.expiry
445 |                 )
446 |             }
447 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4eb8a10cb9f87357.NFTStorefrontV2:790:8
    |
790 |         destroy () {
791 |             destroy self.listings
792 | 
793 |             // Let event consumers know that this storefront will no longer exist
794 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
795 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f5b0eb433389ac3f.AuctionV2:496:8
    |
496 |         destroy() {
497 |             log("destroy auction")
498 |                        
499 |             // if there's a bidder, therefore minumum one bid
500 |             if let vaultCap = self.recipientVaultCap {
501 |                 // ...send the bid tokens back to the bidder
502 |                 self.sendBidTokens(vaultCap)
503 |             }
504 | 
505 |             self.burnNFT()
506 | 
507 |             destroy self.NFT
508 |             destroy self.bidVault
509 |         }
    |         ^ kinds: LoggingCall, IfStatement, OtherComplexOperation, 
 complex destructor found
   --> f5b0eb433389ac3f.AuctionV2:689:8
    |
689 |         destroy() {
690 |             log("destroy auction collection")
691 |             // destroy the empty resources
692 |             destroy self.auctionItems
693 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> f5b0eb433389ac3f.Edition:100:8
    |
100 |         destroy() {
101 |             log("destroy edition item")            
102 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> f5b0eb433389ac3f.Edition:222:8
    |
222 |         destroy() {
223 |             log("destroy edition collection")
224 |             // destroy the empty resources
225 |             destroy self.editionItems
226 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> f5b0eb433389ac3f.OpenEditionV3:282:8
    |
282 |         destroy() {
283 |             log("destroy open editions")          
284 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> f5b0eb433389ac3f.OpenEditionV3:446:8
    |
446 |         destroy() {
447 |             log("destroy open edition collection")
448 |             // destroy the empty resources
449 |             destroy self.openEditionsItems
450 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
  --> 9bdfb2b1f8ad23a9.Okami:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d861c27080174c45.MNC:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 321d8fcde05f6e8c.Seussibles:49:4
   |
49 |     destroy() {
50 |       emit TibleDestroyed(id: self.id)
51 |     }
   |     ^ kinds: EventEmission, 
 complex destructor found
   --> 1d007eed492fdbbe.OlympicPin:355:8
    |
355 |         destroy() {
356 |             emit PieceDestroyed(id: self.id)
357 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 011b6f1425389550.NWayUtilityCoin:95:8
   |
95 |         destroy() {
96 |             NWayUtilityCoin.totalSupply = NWayUtilityCoin.totalSupply - self.balance
97 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.TNP:111:8
    |
111 |         destroy() {
112 |             TNP.totalSupply = TNP.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.MRFRIENDLY:111:8
    |
111 |         destroy() {
112 |             MRFRIENDLY.totalSupply = MRFRIENDLY.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.EBISU:111:8
    |
111 |         destroy() {
112 |             EBISU.totalSupply = EBISU.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.JOSHIN:111:8
    |
111 |         destroy() {
112 |             JOSHIN.totalSupply = JOSHIN.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.MEGAMI:111:8
    |
111 |         destroy() {
112 |             MEGAMI.totalSupply = MEGAMI.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.BYPRODUCT:111:8
    |
111 |         destroy() {
112 |             BYPRODUCT.totalSupply = BYPRODUCT.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.MARK:111:8
    |
111 |         destroy() {
112 |             MARK.totalSupply = MARK.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.Karat:99:8
    |
 99 |         destroy() {
100 |             Karat.totalSupply = Karat.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.MEDI:111:8
    |
111 |         destroy() {
112 |             MEDI.totalSupply = MEDI.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.WE_PIN:111:8
    |
111 |         destroy() {
112 |             WE_PIN.totalSupply = WE_PIN.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.TOM:111:8
    |
111 |         destroy() {
112 |             TOM.totalSupply = TOM.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.EDGE:111:8
    |
111 |         destroy() {
112 |             EDGE.totalSupply = EDGE.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.Sorachi:111:8
    |
111 |         destroy() {
112 |             Sorachi.totalSupply = Sorachi.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.IAT:111:8
    |
111 |         destroy() {
112 |             IAT.totalSupply = IAT.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.PEYE:111:8
    |
111 |         destroy() {
112 |             PEYE.totalSupply = PEYE.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.KaratNFTMarket:131:8
    |
131 |         destroy() {
132 |             // Whether the sale completed or not, publicize that it is being withdrawn.
133 |             emit SaleOfferFinished(itemID: self.itemID)
134 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.ACCO_SOLEIL:111:8
    |
111 |         destroy() {
112 |             ACCO_SOLEIL.totalSupply = ACCO_SOLEIL.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.Story:111:8
    |
111 |         destroy() {
112 |             Story.totalSupply = Story.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 82ed1b9cba5bb1b3.Karatv2:99:8
    |
 99 |         destroy() {
100 |             Karatv2.totalSupply = Karatv2.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 8f4f599546e2d7eb.WE_PIN:111:8
    |
111 |         destroy() {
112 |             WE_PIN.totalSupply = WE_PIN.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 8f4f599546e2d7eb.MEDI:111:8
    |
111 |         destroy() {
112 |             MEDI.totalSupply = MEDI.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 427ceada271aa0b1.NFTStorefront:301:8
    |
301 |         destroy () {
302 |             // If the listing has not been purchased, we regard it as completed here.
303 |             // Otherwise we regard it as completed in purchase().
304 |             // This is because we destroy the listing in Storefront.removeListing()
305 |             // or Storefront.cleanup() .
306 |             // If we change this destructor, revisit those functions.
307 |             if !self.details.purchased {
308 |                 emit ListingCompleted(
309 |                     listingResourceID: self.uuid,
310 |                     storefrontResourceID: self.details.storefrontID,
311 |                     purchased: self.details.purchased,
312 |                     nftType: self.details.nftType,
313 |                     nftID: self.details.nftID
314 |                 )
315 |             }
316 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 427ceada271aa0b1.NFTStorefront:479:8
    |
479 |         destroy () {
480 |             destroy self.listings
481 | 
482 |             // Let event consumers know that this storefront will no longer exist
483 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
484 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d5dab99b4e7301ce.PublishedNFTDAO:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             PublishedNFTDAO.totalSupply = PublishedNFTDAO.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> fc91de5e6566cc7c.MaterialNFT:140:8
    |
140 |         destroy() {
141 |             emit MaterialDestroyed(id: self.id)
142 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> fc91de5e6566cc7c.ItemNFT:188:8
    |
188 |         destroy() {
189 |             emit ItemDestroyed(id: self.id)
190 |             //destroy self.items
191 |             destroy self.garment
192 |             destroy self.material
193 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> fc91de5e6566cc7c.FBRC:89:8
   |
89 |         destroy() {
90 |             FBRC.totalSupply = FBRC.totalSupply - self.balance
91 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> fc91de5e6566cc7c.GarmentNFT:145:8
    |
145 |         destroy() {
146 |             emit GarmentDestroyed(id: self.id)
147 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> fcb06a5ae5b21a2d.BltUsdtSwapPair:108:4
    |
108 |     destroy() {
109 |       BltUsdtSwapPair.totalSupply = BltUsdtSwapPair.totalSupply - self.balance
110 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 98c9c2e548b84d31.ContributionPoint:141:8
    |
141 |         destroy() {
142 |             ContributionPoint.totalSupply = ContributionPoint.totalSupply - self.balance
143 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 86185fba578bc773.FanTopToken:142:8
    |
142 |         destroy() {
143 |             emit FanTopToken.TokenDestroyed(
144 |                 id: self.id,
145 |                 refId: self.refId,
146 |                 serialNumber: self.data.serialNumber,
147 |                 itemId: self.data.itemId,
148 |                 itemVersion: self.data.itemVersion
149 |             )
150 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 86185fba578bc773.FanTopPermissionV2a:276:8
    |
276 |         destroy() {
277 |             for role in self.resources.keys {
278 |                 if FanTopPermissionV2a.hasPermission(self.address, role: role) {
279 |                     FanTopPermissionV2a.removePermission(self.address, role: role)
280 |                 }
281 |             }
282 |             destroy self.resources
283 |         }
    |         ^ kinds: LoopStatement, IfStatement, OtherComplexOperation, 
 complex destructor found
   --> 5b82f21c0edf76e3.StarlyCardBid:160:8
    |
160 |         destroy () {
161 |             if self.bidVault.balance > 0.0 {
162 |                 // return back to the bidder
163 |                 self.bidderFungibleReceiver.borrow()!.deposit(from: <- self.bidVault)
164 |             } else {
165 |                 destroy self.bidVault
166 |             }
167 |         }        
    |         ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
  --> 5b82f21c0edf76e3.StarlyCard:35:8
   |
35 |         destroy () {
36 |             emit Burned(id: self.id, starlyID: self.starlyID)
37 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5b82f21c0edf76e3.StarlyCardBidV3:219:8
    |
219 |         destroy () {
220 |             if self.bidVault.balance > 0.0 {
221 |                 // return back to the bidder
222 |                 self.bidderFungibleReceiver.borrow()!.deposit(from: <- self.bidVault)
223 |             } else {
224 |                 destroy self.bidVault
225 |             }
226 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
   --> 85b8bbf926dcddfa.NFTStoreFront:324:8
    |
324 |         destroy () {
325 |             // If the listing has not been purchased, we regard it as completed here.
326 |             // Otherwise we regard it as completed in purchase().
327 |             // This is because we destroy the listing in Storefront.removeListing()
328 |             // or Storefront.cleanup() .
329 |             // If we change this destructor, revisit those functions.
330 |             if !self.details.purchased {
331 |                 emit ListingRemoved(
332 |                     listingResourceID: self.uuid,
333 |                     storefrontResourceID: self.details.storefrontID,
334 |                 )
335 |             }
336 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 85b8bbf926dcddfa.NFTStoreFront:517:8
    |
517 |         destroy () {
518 |             destroy self.listings
519 | 
520 |             // Let event consumers know that this storefront will no longer exist
521 |             emit StorefrontDestroyed(
522 |                 storefrontResourceID: self.uuid,
523 |                 timestamp: getCurrentBlock().timestamp
524 |             )
525 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 85b8bbf926dcddfa.NowggNFT:78:8
   |
78 |         destroy() {
79 |             emit NftDestroyed(id: self.id)
80 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 63158e8244021989.CarbonHive:479:8
    |
479 |         destroy() {
480 |             destroy self.content
481 |             emit ImpactDestroyed(id: self.id)
482 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 75eaf55ba62052d1.Citiespeople:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 75eaf55ba62052d1.broball:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 75eaf55ba62052d1.Munish:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 75eaf55ba62052d1.Citiesinpeople:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7d7e0919e1ee275e.DuckiesNFT:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 05660dbe1ce88ef3.EmeraldVerse:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 05660dbe1ce88ef3.Matrix:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 05660dbe1ce88ef3.Flowverse:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 02fede2029955586.land:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> a57e7d52c85d0daf.Melos:99:8
    |
 99 |         destroy() {
100 |             Melos.totalSupply = Melos.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 6d008a788fc27265.Crave:623:8
    |
623 |         destroy() {
624 |             emit CollectibleDestroyed(id: self.id)
625 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 86b4a0010a71cfc3.Beam:658:8
    |
658 |         destroy() {
659 |             emit CollectibleDestroyed(id: self.id)
660 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8de96244f54db422.SportsIconCollectible:312:8
    |
312 |         destroy() {
313 |             emit Burn(id: self.uuid)
314 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 20efecfbe0490722.NaturalExcellent:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 20efecfbe0490722.Test:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> e703f7fee6400754.Everbloom:203:2
    |
203 | 		destroy() {
204 | 			emit PrintNFTDestroyed(nftID: self.id)
205 | 		}
    | 		^ kinds: EventEmission, 
 complex destructor found
   --> e703f7fee6400754.Everbloom2:236:2
    |
236 | 		destroy() {
237 | 			emit PrintNFTDestroyed(nftID: self.id)
238 | 		}
    | 		^ kinds: EventEmission, 
 complex destructor found
   --> 3b73da28c2a82eef.Melos:99:8
    |
 99 |         destroy() {
100 |             Melos.totalSupply = Melos.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> cd946ef9b13804c6.DisruptArtAuctionFlow:354:8
    |
354 |         destroy() {
355 |             // send the NFT back to auction owner
356 |             self.sendNFT(self.ownerCollectionCap)
357 |             
358 |             // if there's a bidder...
359 |             if let vaultCap = self.recipientVaultCap {
360 |                 // ...send the bid tokens back to the bidder
361 |                 self.sendBidTokens(vaultCap, sale:false)
362 |             }
363 | 
364 |             destroy self.NFT
365 |             destroy self.bidVault
366 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> cd946ef9b13804c6.DisruptArtAuction:353:8
    |
353 |         destroy() {
354 |             // send the NFT back to auction owner
355 |             self.sendNFT(self.ownerCollectionCap)
356 |             
357 |             // if there's a bidder...
358 |             if let vaultCap = self.recipientVaultCap {
359 |                 // ...send the bid tokens back to the bidder
360 |                 self.sendBidTokens(vaultCap, sale:false)
361 |             }
362 | 
363 |             destroy self.NFT
364 |             destroy self.bidVault
365 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 0d9bc5af3fc0c2e3.TuneGO:359:8
    |
359 |         destroy() {
360 |             emit CollectibleDestroyed(id: self.id)
361 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ff5393e7c38b1512.Melos:99:8
    |
 99 |         destroy() {
100 |             Melos.totalSupply = Melos.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 5634aefcb76e7d8c.Melos:99:8
    |
 99 |         destroy() {
100 |             Melos.totalSupply = Melos.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> a0cbe021821c0965.TheFabricantMysteryBox_FF1:133:8
    |
133 |         destroy() {
134 |             emit FabricantDestroyed(id: self.id)
135 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> e56ce3226f196645.Gweela:83:8
   |
83 |         destroy() {
84 |             if (self.balance > 0.0) {
85 |                 emit TokensBurned(amount: self.balance)
86 |                 Gweela.totalSupply = Gweela.totalSupply - self.balance
87 |             }
88 |         }
   |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 9969d64233d69723.ProShop_1:118:8
    |
118 |         destroy() {
119 |             destroy self.gearsNFTs
120 |             ProShop_1.totalSupply = ProShop_1.totalSupply - 1
121 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ed398881d9bf40fb.FazeUtilityCoin:101:8
    |
101 |         destroy() {
102 |             FazeUtilityCoin.totalSupply = FazeUtilityCoin.totalSupply - self.balance
103 |             if(self.balance > 0.0) {
104 |                 emit TokensBurned(amount: self.balance)
105 |             }
106 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 34427e169ec56cfb.AMPNFT:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> ae3baa0d314e546b.Digiyo:303:8
    |
303 |         destroy() {
304 |             emit InstanceDestroyed(id: self.id)
305 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7f785e9ddaf68333.MafiaGops:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8234007b36f8113c.monsoonBuyToken:104:8
    |
104 |         destroy() {
105 |             monsoonBuyToken.totalSupply = monsoonBuyToken.totalSupply - self.balance
106 |             if(self.balance > 0.0) {
107 |                 emit TokensBurned(amount: self.balance)
108 |             }
109 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 6f01a4b0046c1f87.TrartContractNFT:77:8
   |
77 |         destroy() {
78 |             TrartContractNFT.totalSupply = TrartContractNFT.totalSupply - (1 as UInt64)
79 |             emit Burn(id: self.id)
80 |         }
   |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 4eded0de73020ca5.FazeUtilityCoin:106:8
    |
106 |         destroy() {
107 |             FazeUtilityCoin.totalSupply = FazeUtilityCoin.totalSupply - self.balance
108 |             if(self.balance > 0.0) {
109 |                 emit TokensBurned(amount: self.balance)
110 |             }
111 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> b8d7b67126d2bb8b.is21921:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 233eb012d34b0070.Flowns:382:4
    |
382 |     destroy(){
383 |         log("Destroy Root domains")
384 |         destroy self.domainVault
385 |         emit RootDomainDestroyed(id: self.id)
386 |     }
    |     ^ kinds: LoggingCall, EventEmission, 
 complex destructor found
  --> 35e58b1f980f289a.photo:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4f7ff543c936072b.OneShots:83:4
   |
83 |     destroy() {
84 |       emit TibleDestroyed(id: self.id)
85 |     }
   |     ^ kinds: EventEmission, 
 complex destructor found
   --> 01ab36aaf654a13e.RaribleOpenBid:161:8
    |
161 |         destroy() {
162 |             if !self.details.purchased {
163 |                 emit BidCompleted(
164 |                     bidId: self.details.bidId,
165 |                     purchased: self.details.purchased,
166 |                 )
167 |             }
168 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 01ab36aaf654a13e.RaribleOpenBid:246:8
    |
246 |         destroy() {
247 |             destroy self.bids
248 |             emit OpenBidDestroyed(OpenBidResourceId: self.uuid)
249 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 01ab36aaf654a13e.RaribleNFT:70:8
   |
70 |         destroy() {
71 |             emit Destroy(id: self.id)
72 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> eee6bdee2b2bdfc8.BasketballsMarket:136:8
    |
136 |         destroy() {
137 |             // Whether the sale completed or not, publicize that it is being withdrawn.
138 |             emit SaleOfferFinished(itemID: self.saleItemID)
139 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> eee6bdee2b2bdfc8.NFTStorefrontV2:409:8
    |
409 |         destroy () {
410 |             // If the listing has not been purchased, we regard it as completed here.
411 |             // Otherwise we regard it as completed in purchase().
412 |             // This is because we destroy the listing in Storefront.removeListing()
413 |             // or Storefront.cleanup() .
414 |             // If we change this destructor, revisit those functions.
415 |             if !self.details.purchased {
416 |                 emit ListingCompleted(
417 |                     listingResourceID: self.uuid,
418 |                     storefrontResourceID: self.details.storefrontID,
419 |                     purchased: self.details.purchased,
420 |                     nftType: self.details.nftType,
421 |                     nftUUID: self.details.nftUUID,
422 |                     nftID: self.details.nftID,
423 |                     salePaymentVaultType: self.details.salePaymentVaultType,
424 |                     salePrice: self.details.salePrice,
425 |                     customID: self.details.customID,
426 |                     commissionAmount: self.details.commissionAmount,
427 |                     commissionReceiver: nil,
428 |                     expiry: self.details.expiry
429 |                 )
430 |             }
431 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> eee6bdee2b2bdfc8.NFTStorefrontV2:731:8
    |
731 |         destroy () {
732 |             destroy self.listings
733 | 
734 |             // Let event consumers know that this storefront will no longer exist
735 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
736 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_e21afaf0_3575_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_be6eb144_3897_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_1431:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_714524cb_6baa_11ed_b7ff_5c80b6845fed:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_f2d0b548_37f4_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_958732ce_6bac_11ed_ad29_5c80b6845fed:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1157:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1219:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_8977f2e6_3592_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1c50a26c_35a1_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_51ed4086_35a8_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_dff6c8c8_35a0_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_9a9e8274_388f_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_1447:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_3f362de8_3b18_11ed_ab58_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_a727ad80_37ff_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_6b4dccdc_35b0_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_1727:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_eff7429a_34db_11ed_a3b5_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_c35d12de_356a_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_6446a11c_3889_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_969f295a_35a4_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1152:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_f338d288_3806_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_18a50aa4_35a6_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_e68f3450_359f_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_4f7ba514_359d_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_efb2f088_3574_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_500b4444_3b1a_11ed_ab58_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_7e2ca8b6_3577_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_c58f27a4_37fe_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_4c276a7a_3b19_11ed_ab58_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_a4b3cf7a_357a_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1517:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_0d72ba00_3579_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1715:67:8
   |
67 |         destroy() {
68 |             emit Destroy(id: self.id)
69 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_1w9eu9we9wudj9wsurf2wug9gu9wgfu9w:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_b64bf4c8_38a5_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_1438:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_57ca746e_35b8_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_jidsjdishfsihbisbnsivisjijijisv9isjvishvihu888:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_40fa20fa_35b2_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_49d475f0_6978_11ed_bcda_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_961f2688_3568_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_96706be0_3894_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_4e78fbac_35bc_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_750c1a24_3891_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_8af8427e_37f9_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_178fd3b2_3568_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_9bd19c9a_3e56_11ed_bb81_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_2833f8b8_359c_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_337b969a_3894_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_3e21538c_389e_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_e74d9300_3568_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_87d15c48_35b5_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_1w9eu9we9wudj9wsurf9wug9gu9wgfu9w:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_jidsjdishfsihbisbsdnsivisjijijisv9isjvishvihu888:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_edada1be_37fb_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_25c1d604_388a_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_e62d2f24_3899_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_68519ade_37f6_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_cf27553e_3579_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.hexi_jdisdsidjsijdisjgishgisshgihgshgishgi:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_73d10fb0_35bd_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_bf893c62_3f0d_11ed_b6e7_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_33c0b7c8_37dd_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_d2d5e604_35b6_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_15d5a888_3597_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_062d47cc_3800_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_0ebef5a4_356a_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_832f5cdc_35ae_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_008bfb9c_3887_11ed_8d35_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_205bc608_37f8_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_jidsjdishfsihbisbnsivisjijijisv9isjvishvih:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_d32ed188_37cd_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_c06edbfe_34d7_11ed_a3b5_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_a41a70f8_3801_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_04ae90b4_35a7_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_ffd411f6_37fc_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_0f901d0a_3574_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_2e7c42c6_37d0_11ed_9978_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_405b3f38_3b27_11ed_ab58_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 635a9971e6bdc54a.Hexi_Coll_ac05ea5c_35bf_11ed_9411_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> d3df824bf81910a4.CryptoPiggoV2:157:4
    |
157 |     destroy() {
158 |       emit Burned(id: self.id, address: self.owner?.address)
159 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> d3df824bf81910a4.CryptoPiggoPotion:133:4
    |
133 |     destroy() {
134 |       emit Burned(id: self.id, address: self.owner?.address)
135 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.PIXOMONK:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.Atlantis:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.ALONE:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.Noah2050:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.DeliriumChronicles:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.Blockchain_Oracle:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8b988d0ce5d25a8c.FUTURISTICDream:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 66ad29c7d7465437.DooverseItems:123:4
    |
123 |     destroy() {
124 |       emit Burned(id: self.id, address: self.owner?.address)
125 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 66ad29c7d7465437.DooverseAdminNFTStorefront:588:4
    |
588 |     destroy () {
589 |       // Let event consumers know that this storefront will no longer exist.
590 |       destroy self.listings
591 |       emit StorefrontDestroyed(storefrontResourceID: self.uuid)
592 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 09b8c32ce889db36.BlueBeltNFTs:56:8
   |
56 |         destroy(){
57 | 	        emit TokensBurned(id: self.id)
58 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 0023f0c947e751ed.BadBitchCrew:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> fef48806337aabf1.TicalUniverse:358:8
    |
358 |         destroy() {
359 |             emit CollectibleDestroyed(id: self.id)
360 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d4ad4740ee426334.Moments:757:8
    |
757 |         destroy() {
758 |             emit MomentDestroyed(momentID: self.id)
759 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3642161059eefb9c.NftlyToken:101:8
    |
101 |         destroy() {
102 |             NftlyToken.totalSupply = NftlyToken.totalSupply - self.balance
103 |             if(self.balance > 0.0) {
104 |                 emit TokensBurned(amount: self.balance)
105 |             }
106 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 497153c597783bc3.DieselNFT:141:8
    |
141 |         destroy() {
142 |             emit DieselDestroyed(id: self.id)
143 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> f6f198ffca826ddc.pUSD:97:8
   |
97 |         destroy() {
98 |             pUSD.totalSupply = pUSD.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 4ea047c3e73ca460.BallerzFC:110:8
    |
110 |         destroy() {
111 |             emit TokensBurned(amount: self.balance)
112 |             BallerzFC.totalSupply = BallerzFC.totalSupply - self.balance
113 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> e2e1689b53e92a82.AniqueCredit:100:8
    |
100 |         destroy() {
101 |             AniqueCredit.totalSupply = AniqueCredit.totalSupply - self.balance
102 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> e2e1689b53e92a82.AttackOnTitanLegacy:334:8
    |
334 |         destroy() {
335 |             emit CollectibleDestroyed(collectibleID: self.id)
336 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 921ea449dffec68a.FlovatarDustCollectibleAccessory:135:8
    |
135 |         destroy() {
136 |             emit Destroyed(id: self.id, templateId: self.templateId)
137 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 921ea449dffec68a.FlovatarDustToken:105:8
    |
105 |         destroy() {
106 |             if(self.balance >= 0.0){
107 |                 emit TokensBurned(amount: self.balance)
108 |             }
109 |             FlovatarDustToken.totalSupply = FlovatarDustToken.totalSupply - self.balance
110 |         }
    |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 921ea449dffec68a.FlovatarComponent:128:8
    |
128 |         destroy() {
129 |             emit Destroyed(id: self.id, templateId: self.templateId)
130 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 921ea449dffec68a.FlovatarDustCollectible:163:8
    |
163 |         destroy() {
164 |             destroy self.accessories
165 |             emit Destroyed(id: self.id)
166 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 877538e6851faa5d.TestingCCC:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> f6cb854714273458.Peakon:100:8
    |
100 |         destroy() {
101 |             Peakon.totalSupply = Peakon.totalSupply - self.balance
102 |             if(self.balance > 0.0) {
103 |                 emit TokensBurned(amount: self.balance)
104 |             }
105 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 429a19abea586a3e.MiamiNFT:149:8
    |
149 |         destroy() {
150 |             emit MiamiDestroyed(id: self.id)
151 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> dfc74d9d561374c0.TraitPacksVouchers:75:8
   |
75 |         destroy() {
76 |             emit Burn(id: self.id)
77 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> dfc74d9d561374c0.GoatedGoatsVouchers:75:8
   |
75 |         destroy() {
76 |             emit Burn(id: self.id)
77 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> f448b8731913195c.ListenUSD:103:8
    |
103 |         destroy() {
104 |             ListenUSD.totalSupply = ListenUSD.totalSupply - self.balance
105 |             if(self.balance > 0.0) {
106 |                 emit TokensBurned(amount: self.balance)
107 |             }
108 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 348fe2042c8a70d8.MyToken:84:8
   |
84 |         destroy() {
85 |             MyToken.totalSupply = MyToken.totalSupply - self.balance
86 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> b19436aae4d94622.FiatToken:231:8
    |
231 |         destroy() {
232 |             pre {
233 |                 self.balance == 0.0: "Cannot destroy USDC Vault with non-zero balance"
234 |             }
235 |             emit DestroyVault(resourceId: self.uuid)
236 |         }
    |         ^ kinds: EventEmission, AssertOrCondition, 
 complex destructor found
   --> e4cf4bdc1751c65d.PackNFT:128:7
    |
128 |        destroy() {
129 |            let p <- PackNFT.packs.remove(key: self.id) ?? panic("no such pack")
130 |            PackNFT.totalSupply = PackNFT.totalSupply - (1 as UInt64)
131 | 
132 |            emit Burned(id: self.id)
133 |            destroy p
134 |        }
    |        ^ kinds: OtherComplexOperation, TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e4cf4bdc1751c65d.AllDay:573:8
    |
573 |         destroy() {
574 |             emit MomentNFTBurned(id: self.id)
575 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 12450e4bb3b7666e.Genies:556:8
    |
556 |         destroy() {
557 |             emit NFTBurned(id: self.id)
558 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 12450e4bb3b7666e.GeniesAirdrop:78:2
   |
78 | 		destroy() {
79 | 			self.giftNFTs = {}
80 | 			self.ownerships = {}
81 | 		}
   | 		^ kinds: OtherComplexOperation, 
 complex destructor found
  --> 097bafa4e0b48eef.NameVoucher:45:2
   |
45 | 		destroy() {
46 | 			emit Destroyed(id: self.id, address: self.owner?.address, minCharLength: self.minCharLength)
47 | 		}
   | 		^ kinds: EventEmission, 
 complex destructor found
   --> 097bafa4e0b48eef.FindThoughts:115:2
    |
115 | 		destroy(){
116 | 			let address = self.owner?.address
117 | 			let medias : [String] = []
118 | 			for m in self.medias {
119 | 				medias.append(m.file.uri())
120 | 			}
121 | 			
122 | 			var name : String? = nil 
123 | 			if address != nil {
124 | 				name = FIND.reverseLookup(address!)
125 | 			}
126 | 			emit Deleted(id: self.id, creator: self.creator, creatorName: FIND.reverseLookup(self.creator), header: self.header, message: self.body, medias: medias, tags: self.tags)
127 | 		}
    | 		^ kinds: OtherComplexOperation, LoopStatement, IfStatement, EventEmission, 
 complex destructor found
  --> 4bbff461fa8f6192.FantastecPackNFT:83:8
   |
83 |         destroy() {
84 |             FantastecPackNFT.totalSupply = FantastecPackNFT.totalSupply - (1 as UInt64)
85 |             let pack <- FantastecPackNFT.packs.remove(key: self.id)
86 |                 ?? panic("cannot find pack with ID ".concat(self.id.toString()))
87 |             destroy pack
88 |             emit Burned(id: self.id)
89 |         }
   |         ^ kinds: TotalSupplyDecrement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 2ffa91f235de20e5.TenantService:579:8
    |
579 |         destroy() {
580 |             emit ArchetypeDestroyed(self.id)
581 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2ffa91f235de20e5.TenantService:770:8
    |
770 |         destroy() {
771 |             emit ArtifactDestroyed(self.id)
772 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2ffa91f235de20e5.TenantService:922:8
    |
922 |         destroy() {
923 |             emit SetDestroyed(self.id)
924 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 2ffa91f235de20e5.TenantService:1086:8
     |
1086 |         destroy() {
1087 |             emit PrintDestroyed(self.id)
1088 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 2ffa91f235de20e5.TenantService:1254:8
     |
1254 |         destroy() {
1255 |             emit FaucetDestroyed(self.id)
1256 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 2ffa91f235de20e5.TenantService:1416:8
     |
1416 |         destroy() {
1417 |             emit NFTDestroyed(self.id)
1418 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2817a7313c740232.TenantService:579:8
    |
579 |         destroy() {
580 |             emit ArchetypeDestroyed(self.id)
581 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2817a7313c740232.TenantService:770:8
    |
770 |         destroy() {
771 |             emit ArtifactDestroyed(self.id)
772 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2817a7313c740232.TenantService:922:8
    |
922 |         destroy() {
923 |             emit SetDestroyed(self.id)
924 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 2817a7313c740232.TenantService:1086:8
     |
1086 |         destroy() {
1087 |             emit PrintDestroyed(self.id)
1088 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 2817a7313c740232.TenantService:1254:8
     |
1254 |         destroy() {
1255 |             emit FaucetDestroyed(self.id)
1256 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 2817a7313c740232.TenantService:1416:8
     |
1416 |         destroy() {
1417 |             emit NFTDestroyed(self.id)
1418 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5a8fb12692f5a446.CheezeVouchers:141:8
    |
141 |         destroy(){
142 |             CheezeVouchers.vouchersAvailable[self.listingId] = UInt64(
143 |                 self.nfts.length
144 |             )
145 |             CheezeVouchers.storedNFTs[self.listingId] <-! self.nfts
146 |             emit ListingCreated(listingId: self.listingId)
147 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> 57a39d2a90d86094.MINTNFTINCNonFungibleToken:51:5
   |
51 |      destroy() {
52 |       emit NFTDestroyed(id: self.id)
53 |     }
   |     ^^^^^^^^^^^^^ kinds: EventEmission, 
 complex destructor found
   --> abda6627c70c7f52.GeniaceAuction:505:8
    |
505 |         destroy() {
506 |             log("destroy auction")
507 |             // send the NFT back to auction owner
508 |             if self.NFT != nil {
509 |                 self.sendNFT(self.ownerCollectionCap)
510 |             }
511 |             
512 |             // if there's a bidder...
513 |             if let vaultCap = self.recipientVaultCap {
514 |                 // ...send the bid tokens back to the bidder
515 |                 self.sendBidTokens(vaultCap)
516 |             }
517 | 
518 |             destroy self.NFT
519 |             destroy self.bidVault
520 |         }
    |         ^ kinds: LoggingCall, IfStatement, OtherComplexOperation, 
 complex destructor found
   --> abda6627c70c7f52.GeniaceAuction:705:8
    |
705 |         destroy() {
706 |             log("destroy auction collection")
707 |             // destroy the empty resources
708 |             destroy self.auctionItems
709 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> abda6627c70c7f52.GeniaceMarketplace:291:8
    |
291 |         destroy () {
292 |             // If the offer has not been accepted, we regard it as completed here.
293 |             // Otherwise we regard it as completed in accept().
294 |             // This is because we destroy the offer in Storefront.removeSaleOffer()
295 |             // or Storefront.cleanup() .
296 |             // If we change this destructor, revisit those functions.
297 |             
298 |             if !self.details.accepted {
299 |               log("Destroying sale offer")
300 |                 emit SaleOfferCompleted(
301 |                     saleOfferResourceID: self.uuid,
302 |                     storefrontResourceID: self.details.storefrontID,
303 |                     accepted: self.details.accepted
304 |                 )
305 |             }
306 |         }
    |         ^ kinds: IfStatement, LoggingCall, EventEmission, 
 complex destructor found
   --> abda6627c70c7f52.GeniaceMarketplace:468:8
    |
468 |         destroy () {
469 |             destroy self.saleOffers
470 | 
471 |             // Let event consumers know that this storefront will no longer exist
472 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
473 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> abda6627c70c7f52.Geni:99:8
    |
 99 |         destroy() {
100 |             Geni.totalSupply = Geni.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 91960a2ca966a13e.VictoryCollectibleSaleOffer:188:8
    |
188 |         destroy() {
189 |             // Whether the sale completed or not, publicize that it is being withdrawn.
190 |             emit SaleOfferFinished(seller: self.seller, bundleID: self.bundleID)
191 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 81f8bca69c9107cf.VictoryCollectibleSaleOffer:188:8
    |
188 |         destroy() {
189 |             // Whether the sale completed or not, publicize that it is being withdrawn.
190 |             emit SaleOfferFinished(seller: self.seller, bundleID: self.bundleID)
191 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 81f8bca69c9107cf.VictoryARCollectibleSaleOffer:188:8
    |
188 |         destroy() {
189 |             // Whether the sale completed or not, publicize that it is being withdrawn.
190 |             emit SaleOfferFinished(seller: self.seller, bundleID: self.bundleID)
191 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9c3597f762beec78.Lilium:107:8
    |
107 |         destroy() {
108 |             Lilium.totalSupply = Lilium.totalSupply - self.balance
109 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 0bef462a908719a8.FrontRowStorefront:420:4
    |
420 |     destroy () {
421 |       destroy self.saleOffers
422 | 
423 |       // Let event consumers know that this storefront will no longer exist
424 |       emit StorefrontDestroyed(storefrontResourceId: self.uuid)
425 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 256599e1b091be12.Metaverse:152:8
    |
152 |         destroy() {
153 |             emit NFTBurned(id: self.id)
154 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 256599e1b091be12.Metaverse:263:8
    |
263 |         destroy() {
264 |             emit NFTsBurned(ids: self.ownedNFTs.keys)
265 |             destroy self.ownedNFTs
266 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 256599e1b091be12.OzoneToken:103:8
    |
103 |         destroy() {
104 |             OzoneToken.totalSupply = OzoneToken.totalSupply - self.balance
105 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> d756450f386fb4ac.OzoneToken:96:8
   |
96 |         destroy() {
97 |             OzoneToken.totalSupply = OzoneToken.totalSupply - self.balance
98 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> d756450f386fb4ac.MetaverseMarket:225:8
    |
225 |         destroy() {
226 |             emit NFTBurned(id: self.id)
227 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d756450f386fb4ac.MetaverseMarket:339:8
    |
339 |         destroy() {
340 |             emit NFTsBurned(ids: self.ownedNFTs.keys)
341 |             destroy self.ownedNFTs
342 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> e72e480925b39e17.BNU:44:8
   |
44 |         destroy() {
45 |             BNU.totalSupply = BNU.totalSupply - self.balance
46 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 0988eb1b3fce78cd.Lumo:118:8
    |
118 |         destroy() {
119 |             Lumo.totalSupply = Lumo.totalSupply - self.balance
120 |             if(self.balance > 0.0) {
121 |                 emit TokensBurned(amount: self.balance)
122 |             }
123 |         } 
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> ae508a21ec3017f9.BNU:44:8
   |
44 |         destroy() {
45 |             BNU.totalSupply = BNU.totalSupply - self.balance
46 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> ae508a21ec3017f9.ByteNextMedalNFT:50:8
   |
50 |         destroy() {
51 |             ByteNextMedalNFT.mintedNfts[self.id] = false;
52 |             ByteNextMedalNFT.totalSupply = ByteNextMedalNFT.totalSupply - 1;
53 |             emit Destroy(id: self.id)
54 |         }
   |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 142fa6570b62fd97.StarlyToken:81:8
   |
81 |         destroy() {
82 |             StarlyToken.totalSupply = StarlyToken.totalSupply - self.balance
83 |             if (self.balance > 0.0) {
84 |                 // Emit an event that shows that the token was burned
85 |                 emit TokensBurned(amount: self.balance)
86 |             }
87 |         }
   |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> 050b286b60012753.REVV:103:4
    |
103 |     destroy() {
104 |       if self.balance > 0.0 {
105 |         REVV.depositToEscrow(from: <- create Vault(balance: self.balance))
106 |       }
107 |     }
    |     ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
   --> 4c577a03bc1a82e0.ZayTraderV2:390:8
    |
390 |         destroy() {
391 |             assert(self.fungibleAssets.length == 0, message: "Can not destroy trade bundle with ft resources within")
392 |             assert(self.nftAssets.length == 0, message: "Can not destroy trade bundle with nft resources within")
393 |             destroy self.fungibleAssets
394 |             destroy self.nftAssets
395 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 4c577a03bc1a82e0.ZayTraderV2:700:8
    |
700 |         destroy () {
701 |             // If the trade has not been executed and we are destroying it
702 |             // we must notify that this trade is no longer valid. If the trade
703 |             // has already been executed, the executed flag would be true
704 |             // and we do not need to emit this twice
705 |             if !self.details.executed {
706 |                 emit TradeCancelled(
707 |                     tradeOfferResourceID: self.uuid,
708 |                     tradeCollectionResourceID: self.details.tradeCollectionID
709 |                 )
710 |             }
711 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4c577a03bc1a82e0.ZayTraderV2:975:8
    |
975 |         destroy () {
976 |             destroy self.tradeOffers
977 | 
978 |             // Let event consumers know that this storefront will no longer exist
979 |             emit TradeCollectionDestroyed(tradeCollectionResourceID: self.uuid)
980 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> b3bd693ed892de58.art:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 667a16294a089ef8.SomePlaceCollectible:373:8
    |
373 |         destroy() {
374 |             emit Burn(id: self.uuid)
375 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> c95c755182d16aa8.NBATopShot:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 889bf5cd22e15e17.VipWaifusForWeebs:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 18d7e8fd44629257.Awoken:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 06803a5715bf3aed.VFXFREEK:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> c0051a07095635ab.Elvn:82:8
   |
82 |         destroy() {
83 |             Elvn.totalSupply = Elvn.totalSupply - self.balance
84 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 8b935cd43003d4b2.MetayaUtilityCoin:112:8
    |
112 |         destroy() {
113 |             MetayaUtilityCoin.totalSupply = MetayaUtilityCoin.totalSupply - self.balance
114 |             if(self.balance > 0.0) {
115 |                 emit TokensBurned(amount: self.balance)
116 |             }
117 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 856bd81e73e6752b.PonsEscrowContract:59:2
   |
59 | 		destroy () {
60 | 			if self .flowVault .balance != 0.0 {
61 | 				panic ("Non-empty EscrowResource cannot be destroyed") }
62 | 			if self .ponsNfts .length != 0 {
63 | 				panic ("Non-empty EscrowResource cannot be destroyed") }
64 | 			destroy self .flowVault
65 | 			destroy self .ponsNfts } }
   | 		^^^^^^^^^^^^^^^^^^^^^^^^^ kinds: IfStatement, PanicCall, 
 complex destructor found
   --> 856bd81e73e6752b.PonsEscrowContract:165:2
    |
165 | 		destroy () {
166 | 			// Check that the Escrow's resources have already been released
167 | 			if ! self .isReleased () {
168 | 				panic ("The Escrow must be consummated or terminated before it can be destroyed") }
169 | 			destroy self .heldResource } }
    | 		^^^^^^^^^^^^^^^^^^^^^^^^^^^^^ kinds: IfStatement, PanicCall, 
 complex destructor found
   --> 856bd81e73e6752b.PonsNftContract_v1:267:2
    |
267 | 		destroy () {
268 | 			// Discourage the manipulation of Pons collections for purposes other than storage of Pons NFTs
269 | 			if self .owner ?.address != PonsNftContract_v1 .account .address {
270 | 				panic ("Pons Collections cannot be destroyed") }
271 | 
272 | 			destroy self .ponsCertification
273 | 			destroy self .ownedNFTs } }
    | 		^^^^^^^^^^^^^^^^^^^^^^^^^^ kinds: IfStatement, PanicCall, 
 complex destructor found
   --> d01e482eb680ec9f.SHRD:123:8
    |
123 |         destroy() {
124 |             SHRD.totalSupply = SHRD.totalSupply - self.balance
125 |             if self.balance > 0.0 {
126 |                 emit TokensBurned(amount: self.balance)
127 |             }
128 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> d01e482eb680ec9f.REVV:103:4
    |
103 |     destroy() {
104 |       if self.balance > 0.0 {
105 |         REVV.depositToEscrow(from: <- create Vault(balance: self.balance))
106 |       }
107 |     }
    |     ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
  --> cc838e3f0213008f.Epix:73:8
   |
73 |         destroy() {
74 |             emit Burn(id: self.id)
75 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> cc838e3f0213008f.EpixV2:283:8
    |
283 |         destroy() {
284 |             if(self.data.traits!=nil){
285 | 
286 |                for trait in self.data.traits!{
287 |                    for index,trait2 in EpixV2.traitsPerCharacter{
288 |                        if(trait2.characterName==self.data.metadataOfTraits["characterName"]! && trait2.traitName==trait.name && trait2.traitValue==trait.value){
289 |                           EpixV2.traitsPerCharacter[index].decrementTotalSupply()
290 |                           if(EpixV2.traitsPerCharacter[index].totalSupply==0){
291 |                              EpixV2.traitsPerCharacter.remove(at: index)
292 |                           }
293 |                        }
294 |                    }
295 |                   
296 |                    for index, trait2 in EpixV2.traitsPerTribe{
297 |                        if(trait2.tribeName==self.data.metadataOfTraits["tribeName"]! && trait2.traitName==trait.name && trait2.traitValue==trait.value){
298 |                           EpixV2.traitsPerTribe[index].decrementTotalSupply()
299 |                           if(EpixV2.traitsPerTribe[index].totalSupply==0){
300 |                              EpixV2.traitsPerTribe.remove(at: index)
301 |                           }
302 |                        }
303 |                      
304 |                    }
305 |                }
306 |             }
307 |             
308 |             for index,characterCounter in EpixV2.totalSupplyOfCertainCharacterNfts{
309 |                 for key in characterCounter.keys{
310 |                    if key == self.data.metadataOfTraits["characterName"]!{
311 |                       EpixV2.totalSupplyOfCertainCharacterNfts[index][key] = EpixV2.totalSupplyOfCertainCharacterNfts[index][key]! - 1
312 |                    }
313 |                 }
314 |             }
315 |                
316 |             emit Burn(id: self.id)
317 |         }
    |         ^ kinds: IfStatement, LoopStatement, OtherComplexOperation, EventEmission, 
 complex destructor found
  --> f20df769e658c257.MatrixWorldAssetsNFT:56:8
   |
56 |         destroy() {
57 |             emit Destroy(id: self.id)
58 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5c0992b465832a94.TKNZ:468:8
    |
468 |         destroy() {
469 |             emit NFTDestroyed(id: self.id)
470 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 5c0992b465832a94.TKNZToken:83:8
   |
83 |         destroy() {
84 |             TKNZToken.totalSupply = TKNZToken.totalSupply - self.balance
85 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 67af7ecf76556cd3.ABD:427:8
    |
427 |         destroy() {
428 |             emit MomentDestroyed(id: self.id)
429 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 88b4b1531847c1bc.Leon:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 88b4b1531847c1bc.MoonsbyLeon:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 88b4b1531847c1bc.LeonOVO:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 54317f5ad2f47ad3.NBA_NFT:564:8
    |
564 |         destroy() {
565 |             NBA_NFT.totalSupply = NBA_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> cda0b95fd3331a7a.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cda0b95fd3331a7a.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cda0b95fd3331a7a.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> cda0b95fd3331a7a.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> cda0b95fd3331a7a.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> cda0b95fd3331a7a.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> fc354c9bb513e702.ListenUSD:103:8
    |
103 |         destroy() {
104 |             ListenUSD.totalSupply = ListenUSD.totalSupply - self.balance
105 |             if(self.balance > 0.0) {
106 |                 emit TokensBurned(amount: self.balance)
107 |             }
108 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 376af0a85d1f6f57.Doppelganger:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7d6c8bea25eda63a.NightlyCatMusic:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5c57f79c6694797f.FlowtyRentals:562:8
    |
562 |         destroy() {         
563 |             RoyaltiesLedger.remove(self.uuid)
564 | 
565 |             emit ListingDestroyed(
566 |                 flowtyStorefrontAddress: self.ownerFungibleTokenReceiver.address,
567 |                 flowtyStorefrontID: self.details.flowtyStorefrontID,
568 |                 listingResourceID: self.uuid,
569 |                 nftID: self.details.nftID,
570 |                 nftType: self.details.nftType.identifier
571 |             )
572 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 5c57f79c6694797f.FlowtyRentals:874:8
    |
874 |         destroy() {
875 |             pre {
876 |                 self.details.settled || self.details.returned: "rental must be returned or settled to be destroyed"
877 |                 self.depositedFungibleTokens?.balance == 0.0: "deposit balance is not 0"
878 |             }          
879 |             
880 |             if self.depositedFungibleTokens != nil {
881 |                 let deposit <- self.depositedFungibleTokens <- nil
882 |                 destroy deposit
883 |             }  
884 |             
885 |             destroy self.depositedFungibleTokens
886 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, AssertOrCondition, 
 complex destructor found
    --> 5c57f79c6694797f.FlowtyRentals:1017:8
     |
1017 |         destroy () {
1018 |             destroy self.rentals
1019 | 
1020 |             // Let event consumers know that this marketplace will no longer exist
1021 |             emit FlowtyRentalsMarketplaceDestroyed(flowtyRentalsMarketplaceResourceID: self.uuid)
1022 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 5c57f79c6694797f.FlowtyRentals:1165:8
     |
1165 |         destroy () {
1166 |             destroy self.listings
1167 | 
1168 |             // Let event consumers know that this storefront will no longer exist
1169 |             emit FlowtyRentalsStorefrontDestroyed(flowtyRentalsStorefrontResourceID: self.uuid)
1170 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5c57f79c6694797f.Flowty:615:8
    |
615 |         destroy () {
616 |             // We regard the listing as completed here.
617 |             emit ListingCompleted(
618 |                 listingResourceID: self.uuid,
619 |                 flowtyStorefrontID: self.details.flowtyStorefrontID,
620 |                 funded: self.details.funded,
621 |                 nftID: self.details.nftID,
622 |                 nftType: self.details.nftType.identifier,
623 |                 flowtyStorefrontAddress: self.nftPublicCollectionCapability.address
624 |             )
625 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 5c57f79c6694797f.Flowty:1003:8
     |
1003 |         destroy() {
1004 |             // send the NFT back to the owner
1005 |             if self.NFT != nil {
1006 |                 let NFT <- self.NFT <- nil
1007 |                 self.ownerNFTCollection.borrow()!.deposit(token: <-NFT!)
1008 |             }
1009 |             destroy self.NFT
1010 | 
1011 |             if self.royaltyVault != nil {
1012 |                 let royaltyVault <- self.royaltyVault <- nil
1013 |                 self.lenderFungibleTokenReceiver.borrow()!.deposit(from: <-royaltyVault!)
1014 |             }
1015 |             destroy self.royaltyVault
1016 |         }
     |         ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
    --> 5c57f79c6694797f.Flowty:1181:8
     |
1181 |         destroy () {
1182 |             destroy self.fundings
1183 | 
1184 |             // Let event consumers know that this marketplace will no longer exist
1185 |             emit FlowtyMarketplaceDestroyed(flowtyStorefrontResourceID: self.uuid)
1186 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 5c57f79c6694797f.Flowty:1382:8
     |
1382 |         destroy () {
1383 |             destroy self.listings
1384 | 
1385 |             // Let event consumers know that this storefront will no longer exist
1386 |             emit FlowtyStorefrontDestroyed(flowtyStorefrontResourceID: self.uuid)
1387 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5c57f79c6694797f.CoatCheck:162:8
    |
162 |         destroy () {
163 |             pre {
164 |                 self.redeemed : "not redeemed"
165 |             }
166 |         
167 |             destroy self.fungibleTokenVaults
168 |             destroy self.nonFungibleTokens
169 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 5c57f79c6694797f.CoatCheck:243:8
    |
243 |         destroy () {
244 |             emit ValetDestroyed(resourceID: self.uuid)
245 |             destroy self.tickets
246 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> e2ea57542b7b89c4.Smiles:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5643fd47a29770e7.EmeraldCity:110:8
    |
110 |         destroy() {
111 |             emit TokensBurned(amount: self.balance)
112 |             EmeraldCity.totalSupply = EmeraldCity.totalSupply - self.balance
113 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 09e03b1f871b3513.TheFabricantMarketplace:294:8
    |
294 |         destroy () {
295 |             destroy self.listings
296 | 
297 |             emit ListingsDestroyed(listingsResourceID: self.uuid)
298 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 09e03b1f871b3513.TheFabricantMarketplace:613:8
    |
613 |         destroy () {
614 |             destroy self.offers
615 | 
616 |             emit OffersDestroyed(offersResourceID: self.uuid)
617 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 09e03b1f871b3513.TheFabricantS1GarmentNFT:160:8
    |
160 |         destroy() {
161 |             emit GarmentDestroyed(id: self.id)
162 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 09e03b1f871b3513.TheFabricantS1ItemNFT:285:8
    |
285 |         destroy() {
286 |             emit ItemDestroyed(id: self.id)
287 |             //destroy self.items
288 |             destroy self.garment
289 |             destroy self.material
290 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 09e03b1f871b3513.TheFabricantS1MaterialNFT:160:8
    |
160 |         destroy() {
161 |             emit MaterialDestroyed(id: self.id)
162 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 276a7cc9316712af.IrNFT:1293:8
     |
1293 |         destroy() {
1294 |             emit NFTBurned(id: self.id)
1295 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d21537544d9123d.MomentablesAuction:383:8
    |
383 |         destroy() {
384 |             log("destroy auction")
385 |             // send the NFT back to auction owner
386 |             if self.NFT != nil {
387 |                 self.sendNFT(self.ownerCollectionCap)
388 |             }
389 |             
390 |             // if there's a bidder...
391 |             if let vaultCap = self.recipientVaultCap {
392 |                 // ...send the bid tokens back to the bidder
393 |                 self.sendBidTokens(vaultCap)
394 |             }
395 | 
396 |             destroy self.NFT
397 |             destroy self.bidVault
398 |         }
    |         ^ kinds: LoggingCall, IfStatement, OtherComplexOperation, 
 complex destructor found
   --> 9d21537544d9123d.MomentablesAuction:594:8
    |
594 |         destroy() {
595 |             log("destroy auction collection")
596 |             // destroy the empty resources
597 |             destroy self.auctionItems
598 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> 736de6f27d825c02.PEYE:111:8
    |
111 |         destroy() {
112 |             PEYE.totalSupply = PEYE.totalSupply - self.balance
113 |             if(self.balance > 0.0) {
114 |                 emit TokensBurned(amount: self.balance)
115 |             }
116 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 6292b23b3eb3f999.Elvn:82:8
   |
82 |         destroy() {
83 |             Elvn.totalSupply = Elvn.totalSupply - self.balance
84 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 42382c0e0b0c25b6.SOUNDToken:67:8
   |
67 |         destroy() {
68 |             SOUNDToken.totalSupply = SOUNDToken.totalSupply - self.balance
69 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 7849250fbd83edb6.SOUNDToken:67:8
   |
67 |         destroy() {
68 |             SOUNDToken.totalSupply = SOUNDToken.totalSupply - self.balance
69 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 328670be4971a064.DropchaseCoin:79:8
   |
79 |         destroy() {
80 |             DropchaseCoin.totalSupply = DropchaseCoin.totalSupply - self.balance
81 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 24efe89a9efa3c6f.IconsToken:93:8
   |
93 |         destroy() {
94 |             IconsToken.totalSupply = IconsToken.totalSupply - self.balance
95 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 76a9b420a331b9f0.StarlyTokenStaking:152:8
    |
152 |         destroy() {
153 |             let principalAmount = self.principalVault.balance
154 |             destroy self.principalVault
155 |             if (principalAmount > 0.0) {
156 |                 StarlyTokenStaking.totalPrincipalStaked = StarlyTokenStaking.totalPrincipalStaked - principalAmount
157 |                 emit TokensBurned(id: self.id, principal: principalAmount)
158 |             }
159 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, EventEmission, 
 complex destructor found
   --> 9c6f94adf47904b5.UsdcUsdtSwapPair:102:4
    |
102 |     destroy() {
103 |       UsdcUsdtSwapPair.totalSupply = UsdcUsdtSwapPair.totalSupply - self.balance
104 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> b323aa32b0cfd8e4.DAZNMoments:71:8
   |
71 |         destroy() {
72 |             emit NFTDestroyed(nftId: self.id)
73 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1e075b24abe6eca6.NFTContract:259:8
    |
259 |         destroy(){
260 |             emit NFTDestroyed(id: self.id)
261 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 663db837cea7424f.ColdStorage:88:4
   |
88 |     destroy (){
89 |       pre {
90 |         self.pendingVault.balance == 0.0 as UFix64
91 |       }
92 |       destroy self.pendingVault
93 |     }
   |     ^ kinds: AssertOrCondition, 
 complex destructor found
   --> a95b021cf8a30d80.BarterYardPackNFT:135:8
    |
135 |         destroy() {
136 |           emit Burn(id: self.id)
137 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5e284fb7cff23a3f.RevvFlowSwapPair:108:4
    |
108 |     destroy() {
109 |       RevvFlowSwapPair.totalSupply = RevvFlowSwapPair.totalSupply - self.balance
110 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> a5fb2d66f8ad8a04.WLD:81:8
   |
81 |         destroy() {
82 |             WLD.totalSupply = WLD.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 7ba45bdcac17806a.AnchainNFTTrader:261:4
    |
261 |     destroy () {
262 |       // If the trade has not been executed, we regard it as completed here.
263 |       // Otherwise we regard it as completed in execute().
264 |       // This is because we destroy the trade in Trader.removeTrade()
265 |       // or Trader.cleanup() .
266 |       // If we change this destructor, revisit those functions.
267 |       if !self.details.executed {
268 |         emit TradeCompleted(
269 |           tradeResourceID: self.uuid,
270 |           traderResourceID: self.details.traderID,
271 |           executed: self.details.executed,
272 |           nftType: self.details.nftType,
273 |           nftID: self.details.nftID
274 |         )
275 |       }
276 |     }
    |     ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 7ba45bdcac17806a.AnchainNFTTrader:443:4
    |
443 |     destroy () {
444 |       destroy self.trades
445 | 
446 |       // Let event consumers know that this trader will no longer exist
447 |       emit TraderDestroyed(traderResourceID: self.uuid)
448 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> f2af175e411dfff8.XvsX:155:4
    |
155 |     destroy() {
156 |       emit Burned(id: self.id, address: self.owner?.address)
157 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> f2af175e411dfff8.MetaPanda:209:4
    |
209 |     destroy() {
210 |       emit Burned(id: self.id, address: self.owner?.address)
211 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> f2af175e411dfff8.MetaPandaAirdropNFT:178:4
    |
178 |     destroy() {
179 |       emit Burned(id: self.id, address: self.owner?.address)
180 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 75c4cd8fd6df393d.Stunk:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 75c4cd8fd6df393d.StaffCore:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 75c4cd8fd6df393d.Awoken:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 62b3063fbe672fc8.ZeedzDrops:259:8
    |
259 |         destroy () {
260 |             emit ProductRemoved(
261 |                 productID: self.uuid,
262 |             )
263 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e3f47235f41979be.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e3f47235f41979be.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e3f47235f41979be.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> e3f47235f41979be.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> e3f47235f41979be.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> e3f47235f41979be.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 28abb9f291cadaf2.BarterYardClubWerewolf:457:8
    |
457 |         destroy() {
458 |           BarterYardClubWerewolf.burnNFT()
459 |           emit Burn(id: self.id)
460 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> af589e532490afe6.SpaceBase:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 24de869c5e40b2eb.ARTIFACTV2:202:4
    |
202 |     destroy() {
203 |       ARTIFACTV2.totalSupply = ARTIFACTV2.totalSupply - 1
204 |       emit NFTDestroyed(nftId: self.id)
205 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 24de869c5e40b2eb.ARTIFACTPackV3:276:4
    |
276 |     destroy() {
277 |       ARTIFACTPackV3.totalSupply = ARTIFACTPackV3.totalSupply - 1
278 |       emit NFTDestroyed(nftId: self.id)
279 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 24de869c5e40b2eb.ARTIFACTPackV2:272:4
    |
272 |     destroy() {
273 |       ARTIFACTPackV2.totalSupply = ARTIFACTPackV2.totalSupply - 1
274 |       emit NFTDestroyed(nftId: self.id)
275 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 24de869c5e40b2eb.ARTIFACTPack:204:4
    |
204 |     destroy() {
205 |       ARTIFACTPack.totalSupply = ARTIFACTPack.totalSupply - 1
206 |       emit NFTDestroyed(nftId: self.id)
207 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 24de869c5e40b2eb.ARTIFACT:177:4
    |
177 |     destroy() {
178 |       ARTIFACT.totalSupply = ARTIFACT.totalSupply - 1
179 |       emit NFTDestroyed(nftId: self.id)
180 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2068315349bdfce5.GoatedGoatsManager:371:8
    |
371 |         destroy() {
372 |             assert(self.goat.length == 0, message: "Cannot destroy with goat.")
373 |             assert(self.unequippedTraits.length == 0, message: "Can notdestroy with traits.")
374 |             destroy self.goat
375 |             destroy self.unequippedTraits
376 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 2068315349bdfce5.GoatedGoatsTrait:178:8
    |
178 |         destroy() {
179 |             emit Burn(id: self.id)
180 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2068315349bdfce5.GoatedGoatsTraitPack:108:8
    |
108 |         destroy() {
109 |             emit Burn(id: self.id)
110 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2068315349bdfce5.GoatedGoats:227:8
    |
227 |         destroy() {
228 |             assert(self.traits.length == 0, message: "Can not destroy Goat that has equipped traits.")
229 |             destroy self.traits
230 |             emit Burn(id: self.id)
231 |         }
    |         ^ kinds: AssertOrCondition, EventEmission, 
 complex destructor found
  --> 85f4c53e9a2cdeee.SocialToken:91:8
   |
91 |         destroy () {
92 |             SocialToken.totalSupply = SocialToken.totalSupply - self.balance
93 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 14c2f30a9e2e923f.AtlantaHawks_NFT:564:8
    |
564 |         destroy() {
565 |             AtlantaHawks_NFT.totalSupply = AtlantaHawks_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> ecc3e989544708a0.StoreFront:183:4
    |
183 |     destroy() {
184 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
185 |       emit NFTDestroyed(nftId: self.id)
186 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> ecc3e989544708a0.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> ecc3e989544708a0.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> ecc3e989544708a0.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ecc3e989544708a0.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9775f809d4927419.wrappedboredape:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9775f809d4927419.MatrixLandDomains:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 481914259cb9174e.Aggretsuko:49:4
   |
49 |     destroy() {
50 |       emit TibleDestroyed(id: self.id)
51 |     }
   |     ^ kinds: EventEmission, 
 complex destructor found
   --> 2d4c3caffbeab845.FLOAT:260:8
    |
260 |         destroy() {
261 |             // If the FLOATEvent owner decided to unlink their public reference
262 |             // for some reason (heavily recommend against it), their records
263 |             // of who owns the FLOAT is going to be messed up. But that is their
264 |             // fault. We shouldn't let that prevent the user from deleting the FLOAT.
265 |             if let floatEvent: &FLOATEvent{FLOATEventPublic} = self.getEventMetadata() {
266 |                 floatEvent.updateFLOATHome(id: self.id, serial: self.serial, owner: nil)
267 |             }
268 |             emit FLOATDestroyed(
269 |                 id: self.id, 
270 |                 eventHost: self.eventHost, 
271 |                 eventId: self.eventId, 
272 |                 eventImage: self.eventImage,
273 |                 serial: self.serial
274 |             )
275 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 2d4c3caffbeab845.FLOAT:827:8
    |
827 |         destroy() {
828 |             emit FLOATEventDestroyed(eventId: self.eventId, host: self.host, name: self.name)
829 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 14af75b8c487333c.LeofyMarketPlace:403:8
    |
403 |         destroy() {
404 |             if self.NFT != nil {
405 |                 self.sendNFT(self.ownerCollectionCap)
406 |             }
407 | 
408 |             // if there's a bidder...
409 |             if let vaultCap = self.recipientVaultCap {
410 |                 // ...send the bid tokens back to the bidder
411 |                 self.sendBidTokens(vaultCap)
412 |             }
413 |             
414 |             destroy self.bidVault;
415 |             destroy self.NFT;
416 |         }  
    |         ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
   --> 14af75b8c487333c.LeofyMarketPlace:556:8
    |
556 |         destroy() {
557 |             log("destroy auction collection")
558 |             // destroy the empty resources
559 |             destroy self.marketplaceItems
560 |         }
    |         ^ kinds: LoggingCall, 
 complex destructor found
   --> 14af75b8c487333c.LeofyCoin:99:8
    |
 99 |         destroy() {
100 |             LeofyCoin.totalSupply = LeofyCoin.totalSupply - self.balance
101 |             if(self.balance > 0.0) {
102 |                 emit TokensBurned(amount: self.balance)
103 |             }
104 |         }
    |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
   --> b76cf52e51369cd6.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> b76cf52e51369cd6.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> b76cf52e51369cd6.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> b76cf52e51369cd6.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> b76cf52e51369cd6.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> b76cf52e51369cd6.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> e2a89587100c6096.Ashes:46:8
   |
46 |         destroy() {
47 |             emit AshDestroyed(id: self.id)
48 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> e2a89587100c6096.AshesV2:96:8
   |
96 |         destroy() {
97 |             emit AshDestroyed(id: self.uuid)
98 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> ccf47e1c6ad2d2bd.NFTStoreFree:181:8
    |
181 |         destroy () {
182 |             // If we change this destructor, revisit those functions.
183 |             if !self.details.purchased {
184 |                 emit ListingCompleted(
185 |                     listingResourceID: self.uuid,
186 |                     storefrontResourceID: self.details.storefrontID,
187 |                     purchased: self.details.purchased,
188 |                     nftType: self.details.nftType,
189 |                     nftID: self.details.nftID
190 |                 )
191 |             }
192 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ccf47e1c6ad2d2bd.NFTStoreFree:321:8
    |
321 |         destroy () {
322 |             destroy self.listings
323 | 
324 |             // Let event consumers know that this storefront will no longer exist
325 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
326 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7bf07d719dcb8480.brasil:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             brasil.totalSupply = brasil.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 807c3d470888cc48.Patch:169:4
    |
169 |     destroy() {
170 |       emit Burn(id: self.id)
171 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 807c3d470888cc48.Backpack:241:4
    |
241 |     destroy() {
242 |       destroy self.patches
243 |       emit Burn(id: self.id)
244 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> b56aa3ab87a06926.MastersOfMMA:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 34dbcbc97ccf37b7.EffortToken:88:8
   |
88 |         destroy() {
89 |             EffortToken.totalSupply = EffortToken.totalSupply - self.balance
90 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 34dbcbc97ccf37b7.SilverlightCoin:86:8
   |
86 |         destroy() {
87 |             SilverlightCoin.totalSupply = SilverlightCoin.totalSupply - self.balance
88 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceDAI:101:8
    |
101 |         destroy() {
102 |             ceDAI.totalSupply = ceDAI.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceWETH:101:8
    |
101 |         destroy() {
102 |             ceWETH.totalSupply = ceWETH.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceFTM:101:8
    |
101 |         destroy() {
102 |             ceFTM.totalSupply = ceFTM.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.RLY:101:8
    |
101 |         destroy() {
102 |             RLY.totalSupply = RLY.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceWBTC:101:8
    |
101 |         destroy() {
102 |             ceWBTC.totalSupply = ceWBTC.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceBUSD:101:8
    |
101 |         destroy() {
102 |             ceBUSD.totalSupply = ceBUSD.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceAVAX:101:8
    |
101 |         destroy() {
102 |             ceAVAX.totalSupply = ceAVAX.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceMATIC:101:8
    |
101 |         destroy() {
102 |             ceMATIC.totalSupply = ceMATIC.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceBNB:101:8
    |
101 |         destroy() {
102 |             ceBNB.totalSupply = ceBNB.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 231cc0dbbcffc4b7.ceUSDT:101:8
    |
101 |         destroy() {
102 |             ceUSDT.totalSupply = ceUSDT.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 4e1a246d0753fe0e.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4e1a246d0753fe0e.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4e1a246d0753fe0e.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 4e1a246d0753fe0e.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantPrimalRave:838:8
    |
838 |         destroy() {
839 |             emit ItemDestroyed(
840 |                 uuid: self.uuid,
841 |                 id: self.id,
842 |                 name: TheFabricantPrimalRave.nftMetadata[self.nftMetadataId]!.name,
843 |                 description: TheFabricantPrimalRave.nftMetadata[self.nftMetadataId]!.description,
844 |                 collection: TheFabricantPrimalRave.nftMetadata[self.nftMetadataId]!.collection
845 |             )
846 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.CAT_EnterTheEvolution:911:8
    |
911 |         destroy() {
912 |             emit ItemDestroyed(
913 |                 uuid: self.uuid,
914 |                 id: self.id,
915 |                 name: CAT_EnterTheEvolution.nftMetadata[self.nftMetadataId]!.name,
916 |                 description: CAT_EnterTheEvolution.nftMetadata[self.nftMetadataId]!.description,
917 |                 collection: CAT_EnterTheEvolution.nftMetadata[self.nftMetadataId]!.collection
918 |             )
919 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantS2GarmentNFT:166:8
    |
166 |         destroy() {
167 |             emit GarmentDestroyed(id: self.id)
168 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantKapers:926:8
    |
926 |         destroy() {
927 |             emit ItemDestroyed(
928 |                 uuid: self.uuid,
929 |                 id: self.id,
930 |                 name: TheFabricantKapers.nftMetadata[self.nftMetadataId]!.name,
931 |                 description: TheFabricantKapers.nftMetadata[self.nftMetadataId]!.description,
932 |                 collection: TheFabricantKapers.nftMetadata[self.nftMetadataId]!.collection
933 |             )
934 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantXXories:779:8
    |
779 |         destroy() {
780 |             emit ItemDestroyed(
781 |                 uuid: self.uuid,
782 |                 id: self.id,
783 |                 name: TheFabricantXXories.nftMetadata[self.nftMetadataId]!.name,
784 |                 description: TheFabricantXXories.nftMetadata[self.nftMetadataId]!.description,
785 |                 collection: TheFabricantXXories.nftMetadata[self.nftMetadataId]!.collection
786 |             )
787 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.HighsnobietyNotInParis:757:8
    |
757 |         destroy() {
758 |             emit ItemDestroyed(
759 |                 uuid: self.uuid,
760 |                 id: self.id,
761 |                 name: HighsnobietyNotInParis.nftMetadata[self.nftMetadataId]!.name,
762 |                 description: HighsnobietyNotInParis.nftMetadata[self.nftMetadataId]!.description,
763 |                 collection: HighsnobietyNotInParis.nftMetadata[self.nftMetadataId]!.collection
764 |             )
765 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantS2MaterialNFT:167:8
    |
167 |         destroy() {
168 |             emit MaterialDestroyed(id: self.id)
169 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantAccessPass:559:8
    |
559 |         destroy() {
560 |             let promotions = self.promotionsCap.borrow() ?? panic("The promotion this TheFabricantAccessPass came from has been deleted!")
561 |             let promotion = promotions.getPromotionRef(id: self.promotionId) ?? panic("No promotion with id exists")
562 |             promotion.accountDeletedTheFabricantAccessPass(serial: self.serial)
563 | 
564 |             emit TheFabricantAccessPassDestroyed(
565 |                 id: self.id,
566 |                 campaignName: self.campaignName,
567 |                 variant: self.variant,
568 |                 description: self.description,
569 |                 file: self.file,
570 |                 dateReceived: self.dateReceived,
571 |                 promotionId: self.promotionId,
572 |                 promotionHost: self.promotionHost,
573 |                 metadataId: self.metadataId,
574 |                 originalRecipient: self.originalRecipient,
575 |                 serial: self.serial,
576 |                 noOfAccessUnits: self.accessUnits,
577 |                 extraMetadata: self.extraMetadata
578 |             )
579 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
    --> 7752ea736384322f.TheFabricantAccessPass:1429:8
     |
1429 |         destroy() {
1430 |             pre {
1431 |                 self.currentHolders.keys.length == 0:
1432 |                     "You cannot delete this promotion because some TheFabricantAccessPass's still exist from this promo."
1433 |             }
1434 |             emit PromotionDestroyed(
1435 |                 id: self.id, 
1436 |                 host: self.host, 
1437 |                 campaignName: self.campaignName
1438 |                 )
1439 |         }
     |         ^ kinds: EventEmission, AssertOrCondition, 
 complex destructor found
   --> 7752ea736384322f.Weekday:759:8
    |
759 |         destroy() {
760 |             emit ItemDestroyed(
761 |                 uuid: self.uuid,
762 |                 id: self.id,
763 |                 name: Weekday.nftMetadata[self.nftMetadataId]!.name,
764 |                 description: Weekday.nftMetadata[self.nftMetadataId]!.description,
765 |                 collection: Weekday.nftMetadata[self.nftMetadataId]!.collection
766 |             )
767 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7752ea736384322f.TheFabricantS2ItemNFT:288:8
    |
288 |         destroy() {
289 |             emit ItemDestroyed(id: self.id)
290 |             //destroy self.items
291 |             destroy self.garment
292 |             destroy self.material
293 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 15b236723f4b88ee.NextName:658:8
    |
658 |         destroy() {
659 |             emit CollectibleDestroyed(id: self.id)
660 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 475755d2c9dccc3a.TeleportedSportiumToken:95:4
   |
95 |     destroy() {
96 |       TeleportedSportiumToken.totalSupply = TeleportedSportiumToken.totalSupply - self.balance
97 |     }
   |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 6efab66df92c37e4.StarlyUsdtSwapPair:108:4
    |
108 |     destroy() {
109 |       StarlyUsdtSwapPair.totalSupply = StarlyUsdtSwapPair.totalSupply - self.balance
110 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 03c8261a06cb1b42.SportsIconNFTStorefront:318:8
    |
318 |         destroy () {
319 |             // If the listing has not been purchased, we regard it as completed here.
320 |             // Otherwise we regard it as completed in purchase().
321 |             // This is because we destroy the listing in Storefront.removeListing()
322 |             // or Storefront.cleanup() .
323 |             // If we change this destructor, revisit those functions.
324 |             if !self.details.purchased {
325 |                 emit ListingCompleted(
326 |                     storefrontAddress: self.owner?.address,
327 |                     listingResourceID: self.uuid,
328 |                     storefrontResourceID: self.details.storefrontID,
329 |                     nftType: self.details.nftType,
330 |                     nftID: self.details.nftID,
331 |                     ftVaultType: self.details.salePaymentVaultType,
332 |                     priceTransacted: 0.0,
333 |                     purchased: self.details.purchased
334 |                 )
335 |             }
336 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 03c8261a06cb1b42.SportsIconNFTStorefront:510:8
    |
510 |         destroy () {
511 |             destroy self.listings
512 | 
513 |             // Let event consumers know that this storefront will no longer exist
514 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
515 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 39eeb4ee6f30fc3f.AAOpenBid:223:8
    |
223 |         destroy () {
224 |             // If the listing has not been purchased, we regard it as completed here.
225 |             // Otherwise we regard it as completed in purchase().
226 |             // This is because we destroy the listing in OpenBid.removeBid()
227 |             // or OpenBid.cleanup() .
228 |             // If we change this destructor, revisit those functions.
229 |             if !self.details.purchased {
230 |                 emit BidCompleted(
231 |                     bidResourceID: self.uuid,
232 |                     openBidResourceID: self.details.openBidID,
233 |                     purchased: self.details.purchased,
234 |                     nftType: self.details.nftType,
235 |                     nftID: self.details.nftID,
236 |                     payments: nil
237 |                 )
238 |             }
239 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 39eeb4ee6f30fc3f.AAOpenBid:390:8
    |
390 |         destroy () {
391 |             destroy self.bids
392 | 
393 |             // Let event consumers know that this openBid will no longer exist
394 |             emit OpenBidDestroyed(openBidResourceID: self.uuid)
395 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7c11edb826692404.Ticket:37:8
   |
37 |         destroy() {
38 |             emit TicketDestroyed(id: self.id)
39 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d76476d86c51f925.ELC:81:8
   |
81 |         destroy() {
82 |             ELC.totalSupply = ELC.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ecbda466e7f191c7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> fa82796435e15832.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> a3af87250ac5ca5e.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ee2f049f0ba04f0e.StarlyTokenVesting:241:8
    |
241 |         destroy() {
242 |             let vestedAmount = self.vestedVault.balance
243 |             destroy self.vestedVault
244 |             destroy self.vestingSchedule
245 |             if (vestedAmount > 0.0) {
246 |                 StarlyTokenVesting.totalVested = StarlyTokenVesting.totalVested - vestedAmount
247 |                 emit TokensBurned(id: self.id, amount: vestedAmount)
248 |             }
249 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, EventEmission, 
 complex destructor found
   --> 60e1db11f37ac469.SprtUsdtSwapPair:108:4
    |
108 |     destroy() {
109 |       SprtUsdtSwapPair.totalSupply = SprtUsdtSwapPair.totalSupply - self.balance
110 |     }
    |     ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> c357c8d061353f5f.XGStudio:604:8
    |
604 |         destroy() {
605 |             emit NFTDestroyed(id: self.id)
606 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.GroundNFTStorefront:301:8
    |
301 |         destroy () {
302 |             // If the listing has not been purchased, we regard it as completed here.
303 |             // Otherwise we regard it as completed in purchase().
304 |             // This is because we destroy the listing in Storefront.removeListing()
305 |             // or Storefront.cleanup() .
306 |             // If we change this destructor, revisit those functions.
307 |             if !self.details.purchased {
308 |                 emit ListingCompleted(
309 |                     listingResourceID: self.uuid,
310 |                     storefrontResourceID: self.details.storefrontID,
311 |                     purchased: self.details.purchased,
312 |                     nftType: self.details.nftType,
313 |                     nftID: self.details.nftID
314 |                 )
315 |             }
316 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.GroundNFTStorefront:479:8
    |
479 |         destroy () {
480 |             destroy self.listings
481 | 
482 |             // Let event consumers know that this storefront will no longer exist
483 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
484 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.BoastNFTStorefront:301:8
    |
301 |         destroy () {
302 |             // If the listing has not been purchased, we regard it as completed here.
303 |             // Otherwise we regard it as completed in purchase().
304 |             // This is because we destroy the listing in Storefront.removeListing()
305 |             // or Storefront.cleanup() .
306 |             // If we change this destructor, revisit those functions.
307 |             if !self.details.purchased {
308 |                 emit ListingCompleted(
309 |                     listingResourceID: self.uuid,
310 |                     storefrontResourceID: self.details.storefrontID,
311 |                     purchased: self.details.purchased,
312 |                     nftType: self.details.nftType,
313 |                     nftID: self.details.nftID
314 |                 )
315 |             }
316 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.BoastNFTStorefront:479:8
    |
479 |         destroy () {
480 |             destroy self.listings
481 | 
482 |             // Let event consumers know that this storefront will no longer exist
483 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
484 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.SyllablesNFTStorefront:301:8
    |
301 |         destroy () {
302 |             // If the listing has not been purchased, we regard it as completed here.
303 |             // Otherwise we regard it as completed in purchase().
304 |             // This is because we destroy the listing in Storefront.removeListing()
305 |             // or Storefront.cleanup() .
306 |             // If we change this destructor, revisit those functions.
307 |             if !self.details.purchased {
308 |                 emit ListingCompleted(
309 |                     listingResourceID: self.uuid,
310 |                     storefrontResourceID: self.details.storefrontID,
311 |                     purchased: self.details.purchased,
312 |                     nftType: self.details.nftType,
313 |                     nftID: self.details.nftID
314 |                 )
315 |             }
316 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.SyllablesNFTStorefront:479:8
    |
479 |         destroy () {
480 |             destroy self.listings
481 | 
482 |             // Let event consumers know that this storefront will no longer exist
483 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
484 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.PublishedNFTStorefront:312:8
    |
312 |         destroy () {
313 |             // If the listing has not been purchased, we regard it as completed here.
314 |             // Otherwise we regard it as completed in purchase().
315 |             // This is because we destroy the listing in Storefront.removeListing()
316 |             // or Storefront.cleanup() .
317 |             // If we change this destructor, revisit those functions.
318 |             if !self.details.purchased {
319 |                 emit ListingCompleted(
320 |                     listingResourceID: self.uuid,
321 |                     storefrontResourceID: self.details.storefrontID,
322 |                     purchased: self.details.purchased
323 |                 )
324 |             }
325 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 52cbea4e6f616b8e.PublishedNFTStorefront:499:8
    |
499 |         destroy () {
500 |             destroy self.listings
501 | 
502 |             // Let event consumers know that this storefront will no longer exist
503 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
504 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8d559d0fcf51d5e5.BounceToken:80:8
   |
80 |         destroy() {
81 |             BounceToken.totalSupply = BounceToken.totalSupply - self.balance
82 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 4e277be3d96ae6a0.OfferStorefront:177:8
    |
177 |         destroy () {
178 |             // If the listing has not been purchased, we regard it as completed here.
179 |             // Otherwise we regard it as completed in purchase().
180 |             // This is because we destroy the listing in Storefront.removeListing()
181 |             // or Storefront.cleanup() .
182 |             // If we change this destructor, revisit those functions.
183 |             if !self.details.purchased {
184 |                 emit ListingCompleted(
185 |                     listingResourceID: self.uuid,
186 |                     storefrontResourceID: self.details.storefrontID,
187 |                     purchased: self.details.purchased,
188 |                     nftType: self.details.nftType,
189 |                     nftID: self.details.nftID
190 |                 )
191 |             }
192 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4e277be3d96ae6a0.OfferStorefront:349:8
    |
349 |         destroy () {
350 |             destroy self.listings
351 | 
352 |             // Let event consumers know that this storefront will no longer exist
353 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
354 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f83abcbed7cd096e.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 0f280aa19943aa44.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> a0fb8a06bfc1ccc0.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 09c49abce2a7385c.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> cc96d987317f0342.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 1b84309506091660.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 18dfb199185e7ab9.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 07e50490c06f68d7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> b8ea91944fd51c43.DapperOffersV2:215:8
    |
215 |         destroy() {
216 |             destroy self.offers
217 |             // Let event consumers know that this storefront exists.
218 |             emit DapperOfferDestroyed(DapperOfferResourceId: self.uuid)
219 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> b8ea91944fd51c43.OffersV2:297:8
    |
297 |         destroy() {
298 |             if !self.details.purchased {
299 |                 emit OfferCompleted(
300 |                     purchased: self.details.purchased,
301 |                     acceptingAddress: nil,
302 |                     offerAddress: self.nftReceiverCapability.address,
303 |                     offerId: self.details.offerId,
304 |                     nftType: self.details.nftType,
305 |                     offerAmount: self.details.offerAmount,
306 |                     royalties: self.getRoyaltyInfo(),
307 |                     offerType: self.details.offerParamsString["_type"] ?? "unknown",
308 |                     offerParamsString: self.details.offerParamsString,
309 |                     offerParamsUFix64: self.details.offerParamsUFix64,
310 |                     offerParamsUInt64: self.details.offerParamsUInt64,
311 |                     paymentVaultType: self.details.paymentVaultType,
312 |                     nftId: nil,
313 |                 )
314 |             }
315 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> b8ea91944fd51c43.Offers:226:8
    |
226 |         destroy() {
227 |             if !self.details.purchased {
228 |                 emit OfferCompleted(
229 |                     offerId: self.details.offerId,
230 |                     nftType: self.details.nftType,
231 |                     nftId: self.details.nftId,
232 |                     purchased: self.details.purchased,
233 |                     acceptingAddress: nil,
234 |                 )
235 |             }
236 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> b8ea91944fd51c43.DapperOffers:205:8
    |
205 |         destroy() {
206 |             destroy self.offers
207 |             // Let event consumers know that this storefront exists.
208 |             emit DapperOfferDestroyed(DapperOfferResourceId: self.uuid)
209 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0757a7b95ca0dc36.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ed1d8abac13b92ed.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 9b089efc1c5c2314.Last_of_the_Killer_Birds:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9b089efc1c5c2314.Bl0x:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 850fd81a421217d8.PopsyclAuction:366:8
    |
366 |         destroy() {
367 |             // send the NFT back to auction owner
368 |             self.sendNFT(self.ownerCollectionCap)
369 |             
370 |             // if there's a bidder...
371 |             if let vaultCap = self.recipientVaultCap {
372 |                 // ...send the bid tokens back to the bidder
373 |                 self.sendBidTokens(vaultCap, sale:false)
374 |             }
375 | 
376 |             destroy self.NFT
377 |             destroy self.bidVault
378 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 189a92e45e8d0d98.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> e6a764a39f5cdf67.BleacherReport_NFT:564:8
    |
564 |         destroy() {
565 |             BleacherReport_NFT.totalSupply = BleacherReport_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2c9de937c319468d.Cimelio_NFT:564:8
    |
564 |         destroy() {
565 |             Cimelio_NFT.totalSupply = Cimelio_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f3ee684cd0259fed.Fuchibola_NFT:564:8
    |
564 |         destroy() {
565 |             Fuchibola_NFT.totalSupply = Fuchibola_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 396646f110afb2e6.RogueBunnies_NFT:564:8
    |
564 |         destroy() {
565 |             RogueBunnies_NFT.totalSupply = RogueBunnies_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 4731ed515d114818.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> e3ad6030cbaff1c2.DimensionXComics:41:8
   |
41 |         destroy () {
42 |             DimensionXComics.totalBurned = DimensionXComics.totalBurned + UInt64(1)
43 |             emit Burn(id: self.id)
44 |         }
   |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> e3ad6030cbaff1c2.DimensionX:62:8
   |
62 |         destroy () {
63 |             DimensionX.totalBurned = DimensionX.totalBurned + UInt64(1)
64 |             switch self.type {
65 |                 case NFTType.custom:
66 |                     DimensionX.customBurned = DimensionX.customBurned + UInt64(1)
67 |                     emit Burn(id: self.id, type: UInt8(0))
68 |                 case NFTType.genesis:
69 |                     DimensionX.genesisBurned = DimensionX.genesisBurned + UInt64(1)
70 |                     emit Burn(id: self.id, type: UInt8(1))
71 |                 
72 |                 case NFTType.common:
73 |                     DimensionX.commonBurned = DimensionX.commonBurned + UInt64(1)
74 |                     emit Burn(id: self.id, type: UInt8(2))
75 |                 
76 |             }
77 |             
78 |         }
   |         ^ kinds: OtherComplexOperation, 
 complex destructor found
   --> e3ad6030cbaff1c2.ThulToken:104:8
    |
104 |         destroy() {
105 |             ThulToken.totalSupply = ThulToken.totalSupply - self.balance
106 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 8ebcbfd516b1da27.MFLPlayer:183:8
    |
183 |         destroy() {
184 |             emit Destroyed(id: self.id)
185 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8ebcbfd516b1da27.MFLPack:118:8
    |
118 |         destroy() {
119 |             emit Destroyed(id: self.id)
120 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8ebcbfd516b1da27.MFLClub:166:8
    |
166 |         destroy() {
167 |             emit SquadDestroyed(id: self.id)
168 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8ebcbfd516b1da27.MFLClub:369:8
    |
369 |         destroy() {
370 |             destroy self.squads
371 |             emit ClubDestroyed(id: self.id)
372 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 80af1db15aa6535a.SNKRHUDNFT:232:4
    |
232 |     destroy() {
233 |       emit NFTDestroyed(
234 |         id: self.id,
235 |       )
236 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> f277dc0b9b4637ec.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> b1fa4f50ba42aae8.BeautyGirls:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 95953955605e7df7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 47cbd3edd044cb5d.ArleeScene:164:8
    |
164 |         destroy(){
165 |             destroy self.ownedNFTs
166 | 
167 |             // remove all IDs owned in the contract upon destruction
168 |             if self.owner != nil {
169 |                 ArleeScene.ownedScenes.remove(key: self.owner!.address)
170 |             }
171 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
   --> 47cbd3edd044cb5d.ArleePartner:142:8
    |
142 |         destroy(){
143 |             destroy self.ownedNFTs
144 | 
145 |             // remove all IDs owned in the contract upon destruction
146 |             if self.owner != nil {
147 |                 ArleePartner.ownedArleePartnerNFTs.remove(key: self.owner!.address)
148 |             }
149 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, 
 complex destructor found
   --> a039bd7d55a96c0c.DriverzNFT:254:4
    |
254 |     destroy() {
255 |       emit NFTDestroyed(
256 |         id: self.id,
257 |       )
258 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> e2aa7db2cb9e7bf6.Interior_design:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> e5bed5a80f19fe63.LuckyClub:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4fca070077a2ef68.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 91dcc0285d080cae.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 708d5fa361ef9fa0.Ape_planet:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> d45e2bd9a3d5003b.Bobblz_NFT:564:8
    |
564 |         destroy() {
565 |             Bobblz_NFT.totalSupply = Bobblz_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 59e3d094592231a7.Birdieland_NFT:564:8
    |
564 |         destroy() {
565 |             Birdieland_NFT.totalSupply = Birdieland_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 9829c926abe95d7c.AToken:81:8
   |
81 |         destroy() {
82 |             AToken.totalSupply = AToken.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 29fcd0b5e444242a.StakedStarlyCard:90:8
   |
90 |         destroy () {
91 |             let starlyID = self.starlyCard.starlyID
92 |             let collectionRef = getAccount(self.beneficiary).getCapability(StarlyCard.CollectionPublicPath)!.borrow<&{NonFungibleToken.CollectionPublic}>()!
93 |             collectionRef.deposit(token: <-self.starlyCard)
94 |             emit StakeBurned(id: self.id, starlyID: starlyID)
95 |         }
   |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 6b30456955b0e03a.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> c4e3c5ce733286be.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 9aac537297fc148e.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> dcba28015c3d148d.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> a1c3e7f033037b08.TheToken:54:8
   |
54 |         destroy() {
55 |             TheToken.totalSupply = TheToken.totalSupply - self.balance
56 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 9ecc490efa554970.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> d527bd7a74847cc7.DugoutDawgzNFT:183:4
    |
183 |     destroy() {
184 |       emit NFTDestroyed(
185 |         id: self.id,
186 |       )
187 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 054851c2c30fd38e.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 9a1d4dfcbee35c02.MECASKULL:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> c2ec871ff14fce17.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> e192c61808e75c6a.QuitoForestMetaverseFC:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             QuitoForestMetaverseFC.totalSupply = QuitoForestMetaverseFC.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
  --> 42f9e5c353a04ed4.Melancholic_faces:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 48686b4057b434a7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 217aaf058a07815c.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 63a04645fc4aff08.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 9a85651eda6a9df4.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> d1315c64ed12fbaf.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> a28c34640ed10ea0.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 70a4862637ccbdc5.Kids:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 70a4862637ccbdc5.Smerch:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 04dbeb7031a40955.TestPizza:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d8595dcbfd57fdd2.Cap:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> b02edfdd1972728f.LemonToken:104:8
    |
104 |         destroy() {
105 |             LemonToken.totalSupply = LemonToken.totalSupply - self.balance
106 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 8529aaf64c168952.MonoCat:119:8
    |
119 |         destroy() {
120 |             emit Destroy(id: self.id)
121 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8529aaf64c168952.MonoCatMysteryBox:118:8
    |
118 |         destroy() {
119 |             emit Destroy(id: self.id)
120 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8529aaf64c168952.MonoSilver:61:8
   |
61 |         destroy() {
62 |             emit Destroy(id: self.id)
63 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8529aaf64c168952.MonoGold:61:8
   |
61 |         destroy() {
62 |             emit Destroy(id: self.id)
63 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2162bbe13ade251e.MatrixMarketOpenOffer:176:8
    |
176 |         destroy() {
177 |             if !self.details.purchased {
178 |                 emit OfferCompleted(
179 |                     bidId: self.details.bidId,
180 |                     purchased: self.details.purchased,
181 |                 )
182 |             }
183 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 2162bbe13ade251e.MatrixMarketOpenOffer:264:8
    |
264 |         destroy() {
265 |             destroy self.bids
266 |             emit OpenOfferDestroyed(OpenOfferResourceId: self.uuid)
267 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 2162bbe13ade251e.MatrixMarket:68:8
   |
68 |         destroy() {
69 |             emit Destroy(id: self.id)
70 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4bb6f708f210fa0e.YANGYAN:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6155398610a02093.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 4a2857faecc347c9.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> fd7bf4187484b62c.Foodscaper:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> fa2bd7594c6e449f.NFTS:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 39b144ab4d348e2b.Mist:762:8
    |
762 |         destroy() {
763 |             pre {
764 |                 self.collection.getIDs().length == 0: "collection is not empty, please withdraw all NFTs before delete Raffle"
765 |             }
766 | 
767 |             destroy self.collection
768 |             emit RaffleDestroyed(raffleID: self.raffleID, name: self.name, host: self.host)
769 |         }
    |         ^ kinds: EventEmission, AssertOrCondition, 
 complex destructor found
   --> 39b144ab4d348e2b.Cloud:532:8
    |
532 |         destroy() {
533 |             pre {
534 |                 self.dropVault.balance == 0.0: "dropVault is not empty, please withdraw all funds before delete DROP"
535 |             }
536 | 
537 |             destroy self.dropVault
538 |             emit DropDestroyed(dropID: self.dropID, name: self.name, host: self.host)
539 |         }
    |         ^ kinds: EventEmission, AssertOrCondition, 
 complex destructor found
   --> 36e1f437284b244f.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 76f191d12d229eb7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 3d88aca43e7f64c9.Bouncing_Cat:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9c5e9832b05c15fd.girl:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9c5e9832b05c15fd.beautiful:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> eddf5518f6ef61fe.GreatArtist:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8a7aec8c3c3d53dd.Driink:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8c8989db8aa4fbf4.Hexi_Coll_1108:67:8
   |
67 |         destroy() {
68 |             emit Destroy(id: self.id)
69 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4391d2e713b7b180.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 4391d2e713b7b180.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 4391d2e713b7b180.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4391d2e713b7b180.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4391d2e713b7b180.StoreFront:186:4
    |
186 |     destroy() {
187 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
188 |       emit NFTDestroyed(nftId: self.id)
189 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e3e282271a7c714e.sFlowToken:111:8
    |
111 |         destroy() {
112 |             sFlowToken.totalSupply = sFlowToken.totalSupply - self.balance
113 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 4b4daf0c06bdada6.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> be5a1c2686362a69.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 754c1187102a4b94.SakutaroPoemReplica:71:8
   |
71 |         destroy() {
72 |             emit Destroy(id: self.id)
73 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 754c1187102a4b94.SakutaroPoem:122:8
    |
122 |         destroy() {
123 |             emit Destroy(id: self.id)
124 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 3b16cb9f5c036412.ByteNextMedalNFT:50:8
   |
50 |         destroy() {
51 |             ByteNextMedalNFT.mintedNfts[self.id] = false;
52 |             ByteNextMedalNFT.totalSupply = ByteNextMedalNFT.totalSupply - 1;
53 |             emit Destroy(id: self.id)
54 |         }
   |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 7960dc9ac1429491.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7960dc9ac1429491.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7960dc9ac1429491.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 7960dc9ac1429491.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 7960dc9ac1429491.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 7960dc9ac1429491.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> e46c2c24053641e2.SakutaroPoemReplica:71:8
   |
71 |         destroy() {
72 |             emit Destroy(id: self.id)
73 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> e46c2c24053641e2.SakutaroPoem:122:8
    |
122 |         destroy() {
123 |             emit Destroy(id: self.id)
124 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> a5eb7b15ca67b79f.GlobalCryptocurrencyResearchGroup:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d35d5049dc5cc72d.Grand_Architect_Modules:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d35d5049dc5cc72d.Fine_Art_of_the_High_Arts:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d43c1cf092fa3d7d.L1M0o:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d1bed10609bcd5a4.boboli0001:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> b3a5865f9730344d.Insider:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5a0c531f9a64f3ce.NFTStorefront:291:8
    |
291 |         destroy () {
292 |             // If the listing has not been purchased, we regard it as completed here.
293 |             // Otherwise we regard it as completed in purchase().
294 |             // This is because we destroy the listing in Storefront.removeListing()
295 |             // or Storefront.cleanup() .
296 |             // If we change this destructor, revisit those functions.
297 |             if !self.details.purchased {
298 |                 emit ListingCompleted(
299 |                     listingResourceID: self.uuid,
300 |                     storefrontResourceID: self.details.storefrontID,
301 |                     purchased: self.details.purchased
302 |                 )
303 |             }
304 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 5a0c531f9a64f3ce.NFTStorefront:465:8
    |
465 |         destroy () {
466 |             destroy self.listings
467 | 
468 |             // Let event consumers know that this storefront will no longer exist
469 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
470 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 5a0c531f9a64f3ce.FlowToken:80:8
   |
80 |         destroy() {
81 |             FlowToken.totalSupply = FlowToken.totalSupply - self.balance
82 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 8f9231920da9af6d.AFLNFT:104:8
    |
104 |         destroy(){
105 |             let nftData = &AFLNFT.allNFTs[self.id]! as &NFTData
106 |             let templateId = nftData.templateId as UInt64
107 |             let mintNumber = nftData.mintNumber as UInt64
108 |             let templateRef = &AFLNFT.allTemplates[templateId]! as &Template
109 |             // templateRef.decrementIssuedSupply()
110 |             // AFLNFT.totalSupply = AFLNFT.totalSupply - 1
111 |             // AFLNFT.allNFTs[self.id] = nil
112 |             emit NFTDestroyed(id: self.id)
113 |             emit NFTBurnt(nftId: self.id, templateId: templateId, mintNumber: mintNumber)
114 |             AFLBurnRegistry.burn(templateId: templateId)
115 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> afb8473247d9354c.FlowNia:71:8
   |
71 |         destroy() {
72 |             emit Destroy(id: self.id)
73 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 945299ff8e720459.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> f173fdf0d9bed490.ExampleNFT:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> a94e4ea84e98a880.breakingttest_NFT:347:8
    |
347 |         destroy() {
348 |             breakingttest_NFT.totalSupply = breakingttest_NFT.totalSupply - (1 as UInt64)
349 |             emit NFTDestroyed(id: self.id)
350 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> cee3d6cc34301ad1.FriendsOfFlow_NFT:564:8
    |
564 |         destroy() {
565 |             FriendsOfFlow_NFT.totalSupply = FriendsOfFlow_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 46df8842a6404dde.SunToken:200:8
    |
200 |         destroy() {
201 |             SunToken.totalSupply = SunToken.totalSupply - self.balance
202 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 549427df67d8199c.giglabsdemostore_NFT:347:8
    |
347 |         destroy() {
348 |             giglabsdemostore_NFT.totalSupply = giglabsdemostore_NFT.totalSupply - (1 as UInt64)
349 |             emit NFTDestroyed(id: self.id)
350 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 11178a1f8ef83876.KickbackToken:58:8
   |
58 |         destroy() {
59 |             if self.balance > 0.0 {
60 |                 KickbackToken.totalSupply = KickbackToken.totalSupply - self.balance
61 |             }
62 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
  --> 10c01891a67e9d28.GrandmallworldNFT:94:8
   |
94 |         destroy() {
95 |             emit Destroy(id: self.id)
96 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 10c01891a67e9d28.OfferStorefront:177:8
    |
177 |         destroy () {
178 |             // If the listing has not been purchased, we regard it as completed here.
179 |             // Otherwise we regard it as completed in purchase().
180 |             // This is because we destroy the listing in Storefront.removeListing()
181 |             // or Storefront.cleanup() .
182 |             // If we change this destructor, revisit those functions.
183 |             if !self.details.purchased {
184 |                 emit ListingCompleted(
185 |                     listingResourceID: self.uuid,
186 |                     storefrontResourceID: self.details.storefrontID,
187 |                     purchased: self.details.purchased,
188 |                     nftType: self.details.nftType,
189 |                     nftID: self.details.nftID
190 |                 )
191 |             }
192 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 10c01891a67e9d28.OfferStorefront:349:8
    |
349 |         destroy () {
350 |             destroy self.listings
351 | 
352 |             // Let event consumers know that this storefront will no longer exist
353 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
354 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6d8b72cb87032d3a.giglabsdemostore_NFT:347:8
    |
347 |         destroy() {
348 |             giglabsdemostore_NFT.totalSupply = giglabsdemostore_NFT.totalSupply - (1 as UInt64)
349 |             emit NFTDestroyed(id: self.id)
350 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> a8d493db1bb4df56.KrikeyAINFT:52:8
   |
52 |         destroy() {
53 |           emit BurnAsset(id: self.id, assetId: self.data.assetId)
54 |           destroy self.items
55 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> a8d493db1bb4df56.KrikeyAINFT:342:8
    |
342 |         destroy() {
343 |             destroy self.ownedNFTs
344 |             self.ownedAssets = {}
345 |             if (self.owner?.address != nil) {
346 |                 emit CollectionDeleted(from: self.owner?.address!)
347 |             }
348 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, EventEmission, 
 complex destructor found
   --> a8d493db1bb4df56.SolarpupsMarket:294:8
    |
294 |         destroy() {
295 |             assert(self.locked == (0 as UInt64), message: "cannot destroy market item due to locked items")
296 |             destroy self.nftOffering
297 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
  --> a8d493db1bb4df56.SolarpupsNFT:51:8
   |
51 |         destroy() {
52 |           emit BurnAsset(id: self.id, assetId: self.data.assetId)
53 |           destroy self.items
54 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> a8d493db1bb4df56.SolarpupsNFT:339:8
    |
339 |         destroy() {
340 |             destroy self.ownedNFTs
341 |             self.ownedAssets = {}
342 |             if (self.owner?.address != nil) {
343 |                 emit CollectionDeleted(from: self.owner?.address!)
344 |             }
345 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, EventEmission, 
 complex destructor found
   --> 35d0426a34c25dad.Geeft:101:4
    |
101 |     destroy() {
102 |       pre {
103 |         self.storedNFTs.keys.length == 0: "There are still NFTs left in this Geeft."
104 |         self.storedTokens.length == 0: "There are still tokens left in this Geeft."
105 |       }
106 |       destroy self.storedNFTs
107 |       destroy self.storedTokens
108 |     }
    |     ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 47fa18bd1d39e427.Geeft:103:4
    |
103 |     destroy() {
104 |       pre {
105 |         self.storedNFTs.keys.length == 0: "There are still NFTs left in this Geeft."
106 |         self.storedTokens.length == 0: "There are still tokens left in this Geeft."
107 |       }
108 |       destroy self.storedNFTs
109 |       destroy self.storedTokens
110 |     }
    |     ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 3cbd2ff7c027b9cf.NFTStorefrontV2:407:8
    |
407 |         destroy () {
408 |             // If the listing has not been purchased, we regard it as completed here.
409 |             // Otherwise we regard it as completed in purchase().
410 |             // This is because we destroy the listing in Storefront.removeListing()
411 |             // or Storefront.cleanup() .
412 |             // If we change this destructor, revisit those functions.
413 |             if !self.details.purchased {
414 |                 emit ListingCompleted(
415 |                     listingResourceID: self.uuid,
416 |                     storefrontResourceID: self.details.storefrontID,
417 |                     purchased: self.details.purchased,
418 |                     nftType: self.details.nftType,
419 |                     nftUUID: self.details.nftUUID,
420 |                     nftID: self.details.nftID,
421 |                     salePaymentVaultType: self.details.salePaymentVaultType,
422 |                     salePrice: self.details.salePrice,
423 |                     customID: self.details.customID,
424 |                     commissionAmount: self.details.commissionAmount,
425 |                     commissionReceiver: nil,
426 |                     expiry: self.details.expiry
427 |                 )
428 |             }
429 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3cbd2ff7c027b9cf.NFTStorefrontV2:720:8
    |
720 |         destroy () {
721 |             destroy self.listings
722 | 
723 |             // Let event consumers know that this storefront will no longer exist
724 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
725 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3cbd2ff7c027b9cf.NFTStorefront:301:8
    |
301 |         destroy () {
302 |             // If the listing has not been purchased, we regard it as completed here.
303 |             // Otherwise we regard it as completed in purchase().
304 |             // This is because we destroy the listing in Storefront.removeListing()
305 |             // or Storefront.cleanup() .
306 |             // If we change this destructor, revisit those functions.
307 |             if !self.details.purchased {
308 |                 emit ListingCompleted(
309 |                     listingResourceID: self.uuid,
310 |                     storefrontResourceID: self.details.storefrontID,
311 |                     purchased: self.details.purchased,
312 |                     nftType: self.details.nftType,
313 |                     nftID: self.details.nftID
314 |                 )
315 |             }
316 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3cbd2ff7c027b9cf.NFTStorefront:479:8
    |
479 |         destroy () {
480 |             destroy self.listings
481 | 
482 |             // Let event consumers know that this storefront will no longer exist
483 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
484 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 6a65f9506001247a.SkyLabsMintPotion:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9eafd89fa6abb1d3.Asoba:156:4
    |
156 |     destroy() {
157 |       emit Burned(id: self.id, address: self.owner?.address)
158 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 30cf5dcf6ea8d379.AeraNFT:47:2
   |
47 | 		destroy (){
48 | 			emit Burned(id: self.id, from: self.owner?.address, playId: self.play.id, edition: self.edition)
49 | 		}
   | 		^ kinds: EventEmission, 
 complex destructor found
   --> 30cf5dcf6ea8d379.AeraRewards:201:2
    |
201 | 		destroy() {
202 | 			let reward = self.getReward()
203 | 
204 | 			emit Burned(id:self.id, reward_template_id: reward.reward_template_id, edition: self.edition)
205 | 			AeraRewards.rewardTemplates[reward.reward_template_id]!.burn()
206 | 
207 | 			AeraRewards.totalSupply = AeraRewards.totalSupply - 1
208 | 		}
    | 		^ kinds: OtherComplexOperation, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 30cf5dcf6ea8d379.AeraPanels:200:2
    |
200 | 		destroy() {
201 | 			let panel = self.getPanel()
202 | 
203 | 
204 | 			AeraPanels.totalSupply = AeraPanels.totalSupply - 1
205 | 		}
    | 		^ kinds: OtherComplexOperation, TotalSupplyDecrement, 
 complex destructor found
  --> 766b859539a6679b.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 766b859539a6679b.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 766b859539a6679b.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 766b859539a6679b.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 766b859539a6679b.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 6ef4681fa14c9594.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 6ef4681fa14c9594.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 6ef4681fa14c9594.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 6ef4681fa14c9594.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 6ef4681fa14c9594.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7fc3221e42a934b1.Creox:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7fc3221e42a934b1.Claymons:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> dfb13511ea695f67.mangguo:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 279480af92d30d55.Gampel:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 1c861f69a134b01c.BigMac:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 1c861f69a134b01c.INCREDIBLES:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f929c17055352fac.RICKY:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7aa50819f64dbb10.littlebear:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 449bc7e781a73143.monoly:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 6cedbc243778714c.Fuuul:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> ce4c02539d1fabe8.FlowverseSocks:107:8
    |
107 |         destroy() {
108 |             emit Destroy(id: self.id)
109 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 91b4cc10b2aa0e75.AllDaySeasonal:184:8
    |
184 |         destroy() {
185 |             AllDaySeasonal.totalSupply = AllDaySeasonal.totalSupply - 1
186 |             emit Burned(id: self.id)
187 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 6ed5aaee41c93941.LCubeNFT:82:3
   |
82 |    destroy() {
83 |       emit Destroy(id: self.id)
84 |    }
   |    ^ kinds: EventEmission, 
 complex destructor found
  --> 473d6a2c37eab5be.LostAndFound:45:8
   |
45 |         destroy() {
46 |             pre {
47 |                 self.item == nil: "cannot destroy with non-null item"
48 |             }
49 | 
50 |             destroy self.item
51 |         }
   |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 473d6a2c37eab5be.LostAndFound:163:8
    |
163 |         destroy () {
164 |             pre {
165 |                 self.redeemed: "Ticket has not been redeemed"
166 |                 self.item == nil: "can only destroy if not holding any item"
167 |             }
168 | 
169 |             LostAndFound.storageFees.remove(key: self.uuid)
170 |             destroy <-self.item
171 |         }
    |         ^ kinds: OtherComplexOperation, AssertOrCondition, 
 complex destructor found
   --> 473d6a2c37eab5be.LostAndFound:234:8
    |
234 |         destroy () {
235 |             destroy <-self.tickets
236 |             LostAndFound.storageFees.remove(key: self.uuid)
237 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
   --> 473d6a2c37eab5be.LostAndFound:360:8
    |
360 |         destroy () {
361 |             destroy <- self.bins
362 |             LostAndFound.storageFees.remove(key: self.uuid)
363 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
   --> 473d6a2c37eab5be.LostAndFound:578:8
    |
578 |         destroy() {
579 |             self.flowTokenRepayment.borrow()!.deposit(from: <-self.flowTokenVault)
580 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
  --> 473d6a2c37eab5be.FeeEstimator:29:8
   |
29 |         destroy() {
30 |             pre {
31 |                 self.item == nil: "cannot destroy with non-null item"
32 |             }
33 | 
34 |             destroy self.item
35 |         }
   |         ^ kinds: AssertOrCondition, 
 complex destructor found
  --> 13f44940b1824ca1.Mahjong:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f4d71d3853ce1cf7.metaversetattooconvention:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 42b6b7ef86f4db73.DefLeppard:49:4
   |
49 |     destroy() {
50 |       emit TibleDestroyed(id: self.id)
51 |     }
   |     ^ kinds: EventEmission, 
 complex destructor found
   --> c6945445cdbefec9.TuneGONFT:451:8
    |
451 |         destroy() {
452 |             emit Destroyed(id: self.id)
453 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> ff4ef0c249dd2278.theworld:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 3bd8decfd1579886.VerseDog:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 34615c820242600b.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 34615c820242600b.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 34615c820242600b.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 34615c820242600b.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 34615c820242600b.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 34615c820242600b.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> 385d4b9d9344e7db.AFLNFT:81:8
   |
81 |         destroy(){
82 |             emit NFTDestroyed(id: self.id)
83 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> b788dc41bdd22f44.TestingNFT:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 49c87748d032820a.breakingt_NFT:347:8
    |
347 |         destroy() {
348 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
349 |             emit NFTDestroyed(id: self.id)
350 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> f5f7db710acb59d3.VioletVerse:84:8
   |
84 |         destroy() {
85 |             VioletVerse.totalSupply = VioletVerse.totalSupply - self.balance
86 |             if (self.balance > 0.0) {
87 |                 // Emit an event that shows that the token was burned
88 |                 emit TokensBurned(amount: self.balance)
89 |             }
90 |         }
   |         ^ kinds: TotalSupplyDecrement, IfStatement, EventEmission, 
 complex destructor found
  --> 6620787562b17d86.DalmatianNation:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4e80c5cd60bb5b6d.WorldofDiamonds:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9b8012b9ff7a7bf6.ContractAniq0905:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> c03153728dc8d5b6.Sultonahoy:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 41a62dab8cc3f4c6.PlayTodayNFT:154:8
    |
154 |         destroy() {
155 |             emit Destroy(id: self.id)
156 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 41a62dab8cc3f4c6.NFTStorefrontV2:407:8
    |
407 |         destroy () {
408 |             // If the listing has not been purchased, we regard it as completed here.
409 |             // Otherwise we regard it as completed in purchase().
410 |             // This is because we destroy the listing in Storefront.removeListing()
411 |             // or Storefront.cleanup() .
412 |             // If we change this destructor, revisit those functions.
413 |             if !self.details.purchased {
414 |                 emit ListingCompleted(
415 |                     listingResourceID: self.uuid,
416 |                     storefrontResourceID: self.details.storefrontID,
417 |                     purchased: self.details.purchased,
418 |                     nftType: self.details.nftType,
419 |                     nftUUID: self.details.nftUUID,
420 |                     nftID: self.details.nftID,
421 |                     salePaymentVaultType: self.details.salePaymentVaultType,
422 |                     salePrice: self.details.salePrice,
423 |                     customID: self.details.customID,
424 |                     commissionAmount: self.details.commissionAmount,
425 |                     commissionReceiver: nil,
426 |                     expiry: self.details.expiry
427 |                 )
428 |             }
429 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 41a62dab8cc3f4c6.NFTStorefrontV2:719:8
    |
719 |         destroy () {
720 |             destroy self.listings
721 | 
722 |             // Let event consumers know that this storefront will no longer exist
723 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
724 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 41a62dab8cc3f4c6.PlayTodayBadgeNFT:137:8
    |
137 |         destroy() {
138 |             emit Destroy(id: self.id)
139 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9ba799c0d8e54957.FlowAbstract:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 319a6218135ce608.Bl0x2:60:8
   |
60 |         destroy() {
61 |             emit Destroy(id: self.id)
62 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 75e475055784c8f2.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 5df7a97b50f07e76.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f3f3bb525ef4bdac.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> f3f3bb525ef4bdac.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> f3f3bb525ef4bdac.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> f3f3bb525ef4bdac.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f3f3bb525ef4bdac.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c42087ae991d38ed.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> c42087ae991d38ed.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c42087ae991d38ed.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> c42087ae991d38ed.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> c42087ae991d38ed.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
  --> 026fad499cb84918.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 026fad499cb84918.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 026fad499cb84918.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 026fad499cb84918.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 026fad499cb84918.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 9ffa085e9b92f847.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 9ffa085e9b92f847.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 9ffa085e9b92f847.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 9ffa085e9b92f847.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9ffa085e9b92f847.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 3084a96e617d3b0a.Elvn:82:8
   |
82 |         destroy() {
83 |             Elvn.totalSupply = Elvn.totalSupply - self.balance
84 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> d451b39aec488f34.SprtNFTStorefront:309:8
    |
309 |         destroy () {
310 |             // If the listing has not been purchased, we regard it as completed here.
311 |             // Otherwise we regard it as completed in purchase().
312 |             // This is because we destroy the listing in Storefront.removeListing()
313 |             // or Storefront.cleanup() .
314 |             // If we change this destructor, revisit those functions.
315 |             if !self.details.purchased {
316 |                 emit ListingCompleted(
317 |                     listingResourceID: self.uuid,
318 |                     storefrontAddress: SprtNFTStorefront.addressMap[self.details.storefrontID],
319 |                     storefrontResourceID: self.details.storefrontID,
320 |                     purchased: self.details.purchased,
321 |                     nftType: self.details.nftType,
322 |                     nftID: self.details.nftID,
323 |                     price: nil
324 |                 )
325 |             }
326 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> d451b39aec488f34.SprtNFTStorefront:535:8
    |
535 |         destroy () {
536 |             destroy self.listings
537 | 
538 |             // Let event consumers know that this storefront will no longer exist
539 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
540 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4aebdb04c5aa2d70.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c8f66833867e3aa0.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 23bff791d033beb9.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 019764abc46ccf93.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f9596fa6254e3543.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f4bc82b0b0d6de31.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 9b2636655d5973bb.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 9b2636655d5973bb.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 9b2636655d5973bb.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 9b2636655d5973bb.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9b2636655d5973bb.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 49b11dc77af6eab1.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 88da58e477261635.Foo:149:8
    |
149 |         destroy() {
150 |             Foo.totalSupply = Foo.totalSupply - (1 as UInt64)
151 | 
152 |             emit Burned(id: self.id)
153 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1d5c91964e4ddb03.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 239b58ac62e07614.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e67bb8be2df7f9eb.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1b66422fe2be7793.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 487fdd63ae2c1128.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 613b9410bedc3819.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8e55bf2f5aefeab3.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 8e55bf2f5aefeab3.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8e55bf2f5aefeab3.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 8e55bf2f5aefeab3.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 8e55bf2f5aefeab3.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8d0020ae5389e2e8.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 70211713fe9b7afb.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> cc75ecf274c3c9a9.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f887ece39166906e.TiresStorefront:312:8
    |
312 |         destroy () {
313 |             // If the listing has not been purchased, we regard it as completed here.
314 |             // Otherwise we regard it as completed in purchase().
315 |             // This is because we destroy the listing in Storefront.removeListing()
316 |             // or Storefront.cleanup() .
317 |             // If we change this destructor, revisit those functions.
318 |             if !self.details.purchased {
319 |                 emit ListingCompleted(
320 |                     listingResourceID: self.uuid,
321 |                     storefrontResourceID: self.details.storefrontID,
322 |                     purchased: self.details.purchased
323 |                 )
324 |             }
325 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f887ece39166906e.TiresStorefront:499:8
    |
499 |         destroy () {
500 |             destroy self.listings
501 | 
502 |             // Let event consumers know that this storefront will no longer exist
503 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
504 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f887ece39166906e.DriverzInsuranceStorefront:188:8
    |
188 |         destroy () {
189 |             if !self.details.purchased {
190 | 
191 |                 emit ListingCompleted(
192 |                     listingResourceID: self.uuid,
193 |                     storefrontResourceID: self.details.storefrontID,
194 |                     purchased: self.details.purchased,
195 |                     nftType: self.details.nftType,
196 |                     nftID: self.details.nftID
197 |                 )
198 |             }
199 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f887ece39166906e.DriverzInsuranceStorefront:371:8
    |
371 |         destroy () {
372 |             destroy self.listings
373 | 
374 |             // Let event consumers know that this storefront will no longer exist
375 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
376 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f887ece39166906e.DriverzNFT:254:4
    |
254 |     destroy() {
255 |       emit NFTDestroyed(
256 |         id: self.id,
257 |       )
258 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> f887ece39166906e.DriverzNFTStorefront:261:8
    |
261 |         destroy () {
262 |             // If the listing has not been purchased, we regard it as completed here.
263 |             // Otherwise we regard it as completed in purchase().
264 |             // This is because we destroy the listing in Storefront.removeListing()
265 |             // or Storefront.cleanup() .
266 |             // If we change this destructor, revisit those functions.
267 |             if !self.details.purchased {
268 | 
269 |                 emit ListingCompleted(
270 |                     listingResourceID: self.uuid,
271 |                     storefrontResourceID: self.details.storefrontID,
272 |                     purchased: self.details.purchased,
273 |                     nftType: self.details.nftType,
274 |                     nftID: self.details.nftID
275 |                 )
276 |             }
277 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f887ece39166906e.DriverzNFTStorefront:446:8
    |
446 |         destroy () {
447 |             destroy self.listings
448 | 
449 |             // Let event consumers know that this storefront will no longer exist
450 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
451 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> f887ece39166906e.VroomToken:53:8
   |
53 |         destroy() {
54 |             if(self.balance >= 0.0){
55 |                 emit TokensBurned(amount: self.balance)
56 |             }
57 |             VroomToken.totalSupply = VroomToken.totalSupply - self.balance
58 |         }
   |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> f887ece39166906e.CarClubDropStorefront:188:8
    |
188 |         destroy () {
189 |             if !self.details.purchased {
190 | 
191 |                 emit ListingCompleted(
192 |                     listingResourceID: self.uuid,
193 |                     storefrontResourceID: self.details.storefrontID,
194 |                     purchased: self.details.purchased,
195 |                     nftType: self.details.nftType,
196 |                     nftID: self.details.nftID
197 |                 )
198 |             }
199 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f887ece39166906e.CarClubDropStorefront:371:8
    |
371 |         destroy () {
372 |             destroy self.listings
373 | 
374 |             // Let event consumers know that this storefront will no longer exist
375 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
376 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 61fc4b873e58733b.TrmAssetV2_2:307:8
    |
307 |         destroy() {
308 |             emit AssetDestroyed(id: self.id)
309 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 61fc4b873e58733b.TrmAssetV2_1:305:8
    |
305 |         destroy() {
306 |             emit AssetDestroyed(id: self.id)
307 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 61fc4b873e58733b.TrmRentV2_2:131:8
    |
131 |         destroy() {
132 |             emit RentDestroyed(id: self.id)
133 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 61fc4b873e58733b.TrmRentV2_1:129:8
    |
129 |         destroy() {
130 |             emit RentDestroyed(id: self.id)
131 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> be3d1e213c7435a3.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2422a6d5f7d57d51.TrmRentV2_1:129:8
    |
129 |         destroy() {
130 |             emit RentDestroyed(id: self.id)
131 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2422a6d5f7d57d51.TrmAssetV2_1:305:8
    |
305 |         destroy() {
306 |             emit AssetDestroyed(id: self.id)
307 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 411c37906d6497a9.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ce6a9fa9d3d64987.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> bdfcee3f2f4910a0.commercetown_NFT:564:8
    |
564 |         destroy() {
565 |             commercetown_NFT.totalSupply = commercetown_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 71ba58c217d503e8.commercetown_NFT:464:8
    |
464 |         destroy() {
465 |             commercetown_NFT.totalSupply = commercetown_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2cd46a8e473dcd58.commercetown_NFT:464:8
    |
464 |         destroy() {
465 |             commercetown_NFT.totalSupply = commercetown_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 9cad6c4930d9210e.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 9cad6c4930d9210e.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 9cad6c4930d9210e.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 9cad6c4930d9210e.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 9cad6c4930d9210e.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 3b4958421716d857.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 3b4958421716d857.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 3b4958421716d857.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 3b4958421716d857.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3b4958421716d857.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9212a87501a8a6a2.FlowversePass:399:8
    |
399 |         destroy() {
400 |             emit NFTDestroyed(nftID: self.id)
401 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9212a87501a8a6a2.FlowverseTreasures:406:8
    |
406 |         destroy() {
407 |             emit NFTDestroyed(nftID: self.id)
408 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> df797a9582e0200f.NFTStorefrontV2:407:8
    |
407 |         destroy () {
408 |             // If the listing has not been purchased, we regard it as completed here.
409 |             // Otherwise we regard it as completed in purchase().
410 |             // This is because we destroy the listing in Storefront.removeListing()
411 |             // or Storefront.cleanup() .
412 |             // If we change this destructor, revisit those functions.
413 |             if !self.details.purchased {
414 |                 emit ListingCompleted(
415 |                     listingResourceID: self.uuid,
416 |                     storefrontResourceID: self.details.storefrontID,
417 |                     purchased: self.details.purchased,
418 |                     nftType: self.details.nftType,
419 |                     nftUUID: self.details.nftUUID,
420 |                     nftID: self.details.nftID,
421 |                     salePaymentVaultType: self.details.salePaymentVaultType,
422 |                     salePrice: self.details.salePrice,
423 |                     customID: self.details.customID,
424 |                     commissionAmount: self.details.commissionAmount,
425 |                     commissionReceiver: nil,
426 |                     expiry: self.details.expiry
427 |                 )
428 |             }
429 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> df797a9582e0200f.NFTStorefrontV2:719:8
    |
719 |         destroy () {
720 |             destroy self.listings
721 | 
722 |             // Let event consumers know that this storefront will no longer exist
723 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
724 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> df797a9582e0200f.PlayTodayBadgeNFT:138:8
    |
138 |         destroy() {
139 |             emit Destroy(id: self.id)
140 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> df797a9582e0200f.PlayTodayNFTV2:159:8
    |
159 |         destroy() {
160 |             emit Destroy(id: self.id)
161 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> df797a9582e0200f.PlayTodayRound:138:8
    |
138 |         destroy() {
139 |             emit Destroy(id: self.id)
140 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> df797a9582e0200f.PlayTodayNFT:154:8
    |
154 |         destroy() {
155 |             emit Destroy(id: self.id)
156 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> df797a9582e0200f.PlayTodayRND:81:8
   |
81 |         destroy() {
82 |             PlayTodayRND.totalSupply = PlayTodayRND.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 71c0932910e71ec9.BB_ART21:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 26f1e1ba5831e15b.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 26f1e1ba5831e15b.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 26f1e1ba5831e15b.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 26f1e1ba5831e15b.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 26f1e1ba5831e15b.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 370f6aa12c616fde.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> bb239c46bbe5f637.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 3d645ebf701448e3.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 3d645ebf701448e3.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 3d645ebf701448e3.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 3d645ebf701448e3.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3d645ebf701448e3.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 51dfd687bfd739ef.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 51dfd687bfd739ef.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 51dfd687bfd739ef.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 51dfd687bfd739ef.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 51dfd687bfd739ef.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 80137c29862fcc3c.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 80137c29862fcc3c.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 80137c29862fcc3c.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 80137c29862fcc3c.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 80137c29862fcc3c.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> af2b0e33f2066faf.commercetown_NFT:464:8
    |
464 |         destroy() {
465 |             commercetown_NFT.totalSupply = commercetown_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d0df0c6c2a7e64d4.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d0df0c6c2a7e64d4.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> d0df0c6c2a7e64d4.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> d0df0c6c2a7e64d4.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> d0df0c6c2a7e64d4.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 3d64c6a2e67ec8e5.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 3d64c6a2e67ec8e5.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 3d64c6a2e67ec8e5.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 3d64c6a2e67ec8e5.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3d64c6a2e67ec8e5.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> feae2ef5f3023538.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c6dd2d870017bd2c.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c6dd2d870017bd2c.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> c6dd2d870017bd2c.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> c6dd2d870017bd2c.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> c6dd2d870017bd2c.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 5d86672472f41929.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 5d86672472f41929.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 5d86672472f41929.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 5d86672472f41929.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 5d86672472f41929.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 9aac0b904ec7527a.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 9aac0b904ec7527a.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 9aac0b904ec7527a.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 9aac0b904ec7527a.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 9aac0b904ec7527a.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 4896765138da45a0.Echelon:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 8bfee6d347f1d22e.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 8bfee6d347f1d22e.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 8bfee6d347f1d22e.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8bfee6d347f1d22e.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 8bfee6d347f1d22e.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 117396d8a72ad372.TreasureChestFUSDReward:141:8
    |
141 |         destroy() {
142 |             pre {
143 |                 self.rewards.length == 0: "Can't destroy: rewards are left in the inbox"
144 |             }
145 |             destroy self.rewards
146 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
  --> 8bfe9127ca2ef937.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 8bfe9127ca2ef937.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 8bfe9127ca2ef937.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 8bfe9127ca2ef937.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8bfe9127ca2ef937.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8b71cf19186edbbc.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 9f2bdd5fe786a45f.ContractAniq0926:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> b08304318c921f76.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 562e314aee4cdb05.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 0e1cdb50cf50688f.TestContract002:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> e7574e81dc87ac82.ArtNFT:56:8
   |
56 |         destroy(){
57 | 	        emit TokensBurned(id: self.id)
58 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4b2ce47c209dfbe2.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d39f24dc6a5887d8.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 27ece19eff91bab0.NBATopShotArena:301:8
    |
301 |         destroy() {
302 |             NBATopShotArena.totalSupply = NBATopShotArena.totalSupply - (1 as UInt64)
303 | 
304 |             // Update the burn count for the NFT's edition
305 |             let edition = self.getEdition()
306 | 
307 |             edition.incrementBurned()
308 | 
309 |             NBATopShotArena.editions[edition.id] = edition
310 | 
311 |             emit Burned(id: self.id)
312 |         }
    |         ^ kinds: TotalSupplyDecrement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 27ece19eff91bab0.AthleteStudio:308:8
    |
308 |         destroy() {
309 |             AthleteStudio.totalSupply = AthleteStudio.totalSupply - (1 as UInt64)
310 | 
311 |             emit Burned(id: self.id)
312 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f8a2721bb9975ea5.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c976f8540a686118.appstoretest8_NFT:464:8
    |
464 |         destroy() {
465 |             appstoretest8_NFT.totalSupply = appstoretest8_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b15301e4b9e15edf.appstoretest8_NFT:564:8
    |
564 |         destroy() {
565 |             appstoretest8_NFT.totalSupply = appstoretest8_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c1ab5a6d28035620.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c1ab5a6d28035620.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> c1ab5a6d28035620.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> c1ab5a6d28035620.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> c1ab5a6d28035620.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 76e86e0220510d31.OGs:240:8
    |
240 |         destroy() {
241 |             let item = OGs.getItemRef(itemId: self.itemId)
242 |             item.incrementNumDestroyed()
243 |             emit Destroyed(id: self.id, itemId: self.itemId, serialNumber: self.serialNumber)
244 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> f0b72103209dc63c.EndeavorATL_NFT:564:8
    |
564 |         destroy() {
565 |             EndeavorATL_NFT.totalSupply = EndeavorATL_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 75c9caf2947751b1.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 17cc59245da48c0f.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8dbaa389c9ca501c.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 0e155286c594e8fa.ArturTestOrg:623:8
    |
623 |         destroy() {
624 |             emit CollectibleDestroyed(id: self.id)
625 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7106a8e94c5021aa.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e39fcc35948a1377.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> db981bdfc16a64a7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 95ffd339d8797654.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 95ffd339d8797654.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 95ffd339d8797654.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 95ffd339d8797654.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 95ffd339d8797654.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 7dedcd9790639e94.breakingt_NFT:464:8
    |
464 |         destroy() {
465 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
466 |             emit NFTDestroyed(id: self.id)
467 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 041e797b3c0d2f13.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d26750aab3b6e413.StartupyWGrze:240:8
    |
240 |         destroy() {
241 |             let item = StartupyWGrze.getItemRef(itemId: self.itemId)
242 |             item.incrementNumDestroyed()
243 |             emit Destroyed(id: self.id, itemId: self.itemId, serialNumber: self.serialNumber)
244 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 07ae3130361dc031.appstoretest8_NFT:507:8
    |
507 |         destroy() {
508 |             appstoretest8_NFT.totalSupply = appstoretest8_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 17c087ba03ea66c0.appstoretest8_NFT:507:8
    |
507 |         destroy() {
508 |             appstoretest8_NFT.totalSupply = appstoretest8_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2653a2ead934d457.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> fe437b573d368d6a.TheNFT:96:8
   |
96 |         destroy() {
97 |             emit Destroy(id: self.id)
98 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 57ebb82b792d2ea4.giglabsdemostore_NFT:507:8
    |
507 |         destroy() {
508 |             giglabsdemostore_NFT.totalSupply = giglabsdemostore_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d6f80565193ad727.stFlowToken:98:8
    |
 98 |         destroy() {
 99 |             stFlowToken.totalSupply = stFlowToken.totalSupply - self.balance
100 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 396c0cda3302d8c5.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 3f6bcd9dcacb4920.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 3f6bcd9dcacb4920.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 3f6bcd9dcacb4920.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 3f6bcd9dcacb4920.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3f6bcd9dcacb4920.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9ed65df917da7277.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8f6f0e0987745ac1.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 4477f2cc1decf4a1.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 9c5a398facd490e9.giglabsdemostore_NFT:507:8
    |
507 |         destroy() {
508 |             giglabsdemostore_NFT.totalSupply = giglabsdemostore_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 4c40a9890714c063.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 5424cea5eb4bef23.FairyPuppy:106:4
    |
106 |     destroy() {
107 |       emit Burned(id: self.id, address: self.owner?.address)
108 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 1dd5caae66e2c440.FLOATEventSeries:854:8
    |
854 |         destroy() {
855 |             self.dropTreasury()
856 | 
857 |             destroy self.genericFTPool
858 |             destroy self.genericNFTPool
859 |             destroy self.strategies
860 |         }
    |         ^ kinds: OtherComplexOperation, 
 complex destructor found
   --> 83cc72c39fe90c50.appstoretest5_NFT:507:8
    |
507 |         destroy() {
508 |             appstoretest5_NFT.totalSupply = appstoretest5_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b3ceb5d033f1bdad.appstoretest5_NFT:564:8
    |
564 |         destroy() {
565 |             appstoretest5_NFT.totalSupply = appstoretest5_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 6914e0cba4d7203c.appstoretest5_NFT:507:8
    |
507 |         destroy() {
508 |             appstoretest5_NFT.totalSupply = appstoretest5_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 6afcf2d50a9b7805.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 7094f6f339b058ca.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8a477533ddaaf326.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2da3aed1e1d0a160.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1a84ae20ff039deb.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 83156825fec4fd42.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1e326e1b6521f8fc.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e20d0a327700ea11.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 6ca3f0247792589a.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6ca3f0247792589a.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6ca3f0247792589a.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 6ca3f0247792589a.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 6ca3f0247792589a.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 6ca3f0247792589a.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> bc2692147555df30.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> bc2692147555df30.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> bc2692147555df30.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> bc2692147555df30.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> bc2692147555df30.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f75a5a4ff94c16ca.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f75a5a4ff94c16ca.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> f75a5a4ff94c16ca.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> f75a5a4ff94c16ca.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> f75a5a4ff94c16ca.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 22e9f1c0cd23a9ae.Boulder:148:8
    |
148 |         destroy() {
149 |             Boulder.totalSupply = Boulder.totalSupply - (1 as UInt64)
150 | 
151 |             emit Burned(id: self.id)
152 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 4aa2befa4b5d3098.Mayer:148:8
    |
148 |         destroy() {
149 |             Mayer.totalSupply = Mayer.totalSupply - (1 as UInt64)
150 | 
151 |             emit Burned(id: self.id)
152 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 09e04bdbcccde6ca.Gamisodes:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> a351ca7940789112.giglabsdemostore_NFT:507:8
    |
507 |         destroy() {
508 |             giglabsdemostore_NFT.totalSupply = giglabsdemostore_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b48a679155a68936.DapperSport:541:8
    |
541 |         destroy() {
542 |             emit MomentNFTBurned(id: self.id, editionID: self.editionID, serialNumber: self.serialNumber)
543 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c4979c264aed4da9.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 19828057da4c75ad.PackNFT:127:8
    |
127 |         destroy() {
128 |             let p <- PackNFT.packs.remove(key: self.id) ?? panic("no such pack")
129 |             PackNFT.totalSupply = PackNFT.totalSupply - (1 as UInt64)
130 | 
131 |             emit Burned(id: self.id)
132 |             destroy p
133 |         }
    |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 19828057da4c75ad.Golazos:541:8
    |
541 |         destroy() {
542 |             emit MomentNFTBurned(id: self.id, editionID: self.editionID, serialNumber: self.serialNumber)
543 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 74266bc086680e5e.Mindtrix:364:9
    |
364 |          destroy() {
365 |             // The total supply records how many times an NFT is minted, so it doesn't need to be decreased by one
366 |             // The accurate quantity of existing NFTs can be found in individual Mindtrix Essence.
367 |             // pub event NFTDestroyed(id: UInt64, essenceId: String, showGuid: String, episodeGuid: String, name: String, serial: String)
368 |             emit NFTDestroyed(
369 |                 id: self.id,
370 |                 essenceId: self.data.metadata["essenceId"] ?? "",
371 |                 showGuid: self.data.metadata["showGuid"] ?? "",
372 |                 episodeGuid: self.data.metadata["episodeGuid"] ?? "",
373 |                 nftEdition: self.data.nftEdition ?? 0,
374 |                 name: self.data.metadata["nftName"] ?? "",
375 |                 serial: MindtrixViews.Serials(self.getSerialDic()).str
376 |             )
377 |         }
    |         ^^^^^^^^^^^^^ kinds: EventEmission, 
 complex destructor found
   --> 2a29c5381672f5b3.TestContract1019:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0a441c873523e2b8.appstoretest5_NFT:507:8
    |
507 |         destroy() {
508 |             appstoretest5_NFT.totalSupply = appstoretest5_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 9b16bdcaf7260f19.appstoretest5_NFT:507:8
    |
507 |         destroy() {
508 |             appstoretest5_NFT.totalSupply = appstoretest5_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> ec9dfd64f108d90f.Ophiuchus:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 87ca73a41bb50ad5.Golazos:547:8
    |
547 |         destroy() {
548 |             emit MomentNFTBurned(id: self.id, editionID: self.editionID, serialNumber: self.serialNumber)
549 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 87ca73a41bb50ad5.PackNFT:126:8
    |
126 |         destroy() {
127 |             let p <- PackNFT.packs.remove(key: self.id) ?? panic("no such pack")
128 |             PackNFT.totalSupply = PackNFT.totalSupply - (1 as UInt64)
129 | 
130 |             emit Burned(id: self.id)
131 |             destroy p
132 |         }
    |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> a6cb1295dd115bee.BigMinter:293:8
    |
293 |         destroy() {
294 |             BigMinter.totalSupply = BigMinter.totalSupply - (1 as UInt64)
295 | 
296 |             emit Burned(id: self.id)
297 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c9dfc845ce0a54ee.SeedsTestingTst:265:8
    |
265 |         destroy() {
266 |             SeedsTestingTst.totalSupply = SeedsTestingTst.totalSupply - (1 as UInt64)
267 | 
268 |             emit Burned(id: self.id)
269 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 632ab548330d7f09.EyeSight:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 632ab548330d7f09.Frosty:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> c20990d5e6103866.Lonely_Android:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 7db4d10c78bad30a.DAAM:578:8
    |
578 |         destroy() {
579 |             emit BurnNFT(id: self.id, mid: self.mid, timestamp: getCurrentBlock().timestamp)
580 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> b9c4e3666dbfdf9e.Flowverse:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> b1f0eb936fd43a49.ContractAniq1025:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 732b091273a182f0.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 732b091273a182f0.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 732b091273a182f0.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 732b091273a182f0.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 732b091273a182f0.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 732b091273a182f0.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4ac840054ccc0989.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4ac840054ccc0989.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4ac840054ccc0989.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 4ac840054ccc0989.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 4ac840054ccc0989.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> f1b97c06745f37ad.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 2fbe271d0966a1c1.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2fbe271d0966a1c1.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 2fbe271d0966a1c1.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 2fbe271d0966a1c1.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 2fbe271d0966a1c1.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
  --> 77450c1dbfcf3deb.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 77450c1dbfcf3deb.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 77450c1dbfcf3deb.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 77450c1dbfcf3deb.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 77450c1dbfcf3deb.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> a91523e55d4ff81f.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> a91523e55d4ff81f.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> a91523e55d4ff81f.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> a91523e55d4ff81f.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> a91523e55d4ff81f.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> baef0413eb52d41f.TechMisfits:359:8
    |
359 |         destroy() {
360 |             emit ItemDestroyed(id: self.id)
361 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> baef0413eb52d41f.UmbaDaima:504:8
    |
504 |         destroy() {
505 |             emit ItemDestroyed(id: self.id)
506 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 38880ac5949d7390.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 38880ac5949d7390.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 38880ac5949d7390.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 38880ac5949d7390.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 38880ac5949d7390.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> b7ff7d2e1d4e86a0.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> b7ff7d2e1d4e86a0.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> b7ff7d2e1d4e86a0.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b7ff7d2e1d4e86a0.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> b7ff7d2e1d4e86a0.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> e2fea19be8b760d6.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> e2fea19be8b760d6.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> e2fea19be8b760d6.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> e2fea19be8b760d6.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e2fea19be8b760d6.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> ba05fd6fd3c1d7e5.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ba05fd6fd3c1d7e5.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> ba05fd6fd3c1d7e5.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> ba05fd6fd3c1d7e5.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> ba05fd6fd3c1d7e5.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e0408e51b0b970a7.ShebaHopeGrows:359:8
    |
359 |         destroy() {
360 |             emit ItemDestroyed(id: self.id)
361 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d08d58cc37eaa115.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> d08d58cc37eaa115.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> d08d58cc37eaa115.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> d08d58cc37eaa115.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> d08d58cc37eaa115.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ce6f51fdfcb8f2a6.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> ce6f51fdfcb8f2a6.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> ce6f51fdfcb8f2a6.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> ce6f51fdfcb8f2a6.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ce6f51fdfcb8f2a6.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 52d885bb3d4f7473.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 52d885bb3d4f7473.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 52d885bb3d4f7473.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 52d885bb3d4f7473.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 52d885bb3d4f7473.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> cf4cff7e0d04ee32.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> cf4cff7e0d04ee32.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> cf4cff7e0d04ee32.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> cf4cff7e0d04ee32.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> cf4cff7e0d04ee32.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3fcf12d7cac5907f.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 707f3f4b768f0ccb.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 707f3f4b768f0ccb.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 707f3f4b768f0ccb.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 707f3f4b768f0ccb.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 707f3f4b768f0ccb.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 14a614b713ffe096.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 14a614b713ffe096.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 14a614b713ffe096.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 14a614b713ffe096.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 14a614b713ffe096.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
  --> 222c3b2919b1c91c.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 222c3b2919b1c91c.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 222c3b2919b1c91c.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 222c3b2919b1c91c.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 222c3b2919b1c91c.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1e66a65ea2c60694.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1e66a65ea2c60694.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 1e66a65ea2c60694.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 1e66a65ea2c60694.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 1e66a65ea2c60694.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 507a949626c50f20.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 507a949626c50f20.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 507a949626c50f20.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 507a949626c50f20.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 507a949626c50f20.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 80434b02affc58e9.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 80434b02affc58e9.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 80434b02affc58e9.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 80434b02affc58e9.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 80434b02affc58e9.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7920808941f61c27.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 7920808941f61c27.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 7920808941f61c27.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 7920808941f61c27.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 7920808941f61c27.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 21a1619c469b1b4b.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 21a1619c469b1b4b.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 21a1619c469b1b4b.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 21a1619c469b1b4b.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 21a1619c469b1b4b.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d953a7bdc5e2f7f0.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> d953a7bdc5e2f7f0.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> d953a7bdc5e2f7f0.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> d953a7bdc5e2f7f0.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> d953a7bdc5e2f7f0.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 5619c2a8190b3fb5.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 5619c2a8190b3fb5.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5619c2a8190b3fb5.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 5619c2a8190b3fb5.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 5619c2a8190b3fb5.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
  --> ff7e8847e0317c32.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> ff7e8847e0317c32.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> ff7e8847e0317c32.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ff7e8847e0317c32.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ff7e8847e0317c32.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> a754985187cf9178.son:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 11f501c6b605b2f9.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 11f501c6b605b2f9.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 11f501c6b605b2f9.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 11f501c6b605b2f9.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 11f501c6b605b2f9.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 1a2b78a62e655e03.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 1a2b78a62e655e03.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 1a2b78a62e655e03.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 1a2b78a62e655e03.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1a2b78a62e655e03.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d97420bc1623a598.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> b18b1dc5069a41c7.BYC:518:8
    |
518 |         destroy () {
519 |             emit BarterDestroyed(id: self.uuid)
520 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d1d0d0c82bf1c59.RTLStoreItem:495:8
    |
495 |         destroy() {
496 |             emit ItemDestroyed(id: self.id)
497 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c748d23a9a804eb0.AuctionHouse:327:8
    |
327 |         destroy() {
328 |         pre { self.currentAuctions.length == 0 && self.approveAuctions.length == 0 }
329 |             destroy self.currentAuctions
330 |             destroy self.approveAuctions
331 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
    --> c748d23a9a804eb0.AuctionHouse:989:8
     |
 989 |         destroy() { // Verify no Funds, NFT are NOT in storage, Auction has ended/closed.
 990 |             pre{
 991 |                 self.auctionNFT == nil           : "Illegal Operation: Auction still contains NFT Token ID: ".concat(self.auctionNFT?.metadata!.mid.toString())
 992 |                 self.auctionMetadata == nil      : "Illegal Operation: Auction still contains MetadataID: ".concat(self.auctionMetadata?.mid!.toString())
 993 |                 self.status == false             : "Illegal Operation: Auction is not Finished."
 994 |                 self.auctionVault.balance == 0.0 : "Illegal Operation: Auction Balance is ".concat(self.auctionVault.balance.toString())
 995 |             }
 996 |             // Re-Verify Funds Allocated Properly, since it's empty it should just pass
 997 |             self.returnFunds()
 998 |             self.royalty()
 999 | 
1000 |             destroy self.auctionVault
1001 |             destroy self.auctionNFT
1002 |             destroy self.auctionMetadata
1003 |         }
     |         ^ kinds: OtherComplexOperation, AssertOrCondition, 
 complex destructor found
  --> a10dde51240c1ec7.GomokuIdentity:54:8
   |
54 |         destroy() {
55 |             if self.destroyable == false {
56 |                 panic("You can't destroy this token before setting destroyable to true.")
57 |             }
58 |         }
   |         ^ kinds: IfStatement, PanicCall, 
 complex destructor found
   --> a10dde51240c1ec7.GomokuIdentity:128:8
    |
128 |         destroy() {
129 |             destroy self.ownedIdentityTokenMap
130 |             if self.destroyable == false {
131 |                 panic("Ha Ha! Got you! You can't destory this collection if there are Gomoku Composition!")
132 |             }
133 |         }
    |         ^ kinds: IfStatement, PanicCall, 
 complex destructor found
  --> a10dde51240c1ec7.GomokuResult:70:8
   |
70 |         destroy() {
71 |             if self.destroyable == false {
72 |                 panic("You can't destroy this token before setting destroyable to true.")
73 |             }
74 |         }
   |         ^ kinds: IfStatement, PanicCall, 
 complex destructor found
   --> a10dde51240c1ec7.GomokuResult:144:8
    |
144 |         destroy() {
145 |             destroy self.ownedResultTokenMap
146 |             if self.destroyable == false {
147 |                 panic("Ha Ha! Got you! You can't destory this collection if there are Gomoku ResultToken!")
148 |             }
149 |         }
    |         ^ kinds: IfStatement, PanicCall, 
 complex destructor found
    --> a10dde51240c1ec7.Gomoku:1331:8
     |
1331 |         destroy() {
1332 |             if self.destroyable == false {
1333 |                 panic("You can't destory this composition by yourself!")
1334 |             }
1335 |             destroy self.steps
1336 |         }
     |         ^ kinds: IfStatement, PanicCall, 
 complex destructor found
    --> a10dde51240c1ec7.Gomoku:1402:8
     |
1402 |         destroy() {
1403 |             destroy self.ownedCompositionMap
1404 |             if self.destroyable == false {
1405 |                 panic("Ha Ha! Got you! You can't destory this collection if there are Gomoku Composition!")
1406 |             }
1407 |         }
     |         ^ kinds: IfStatement, PanicCall, 
 complex destructor found
   --> 55b8f4bf1d95e88c.Laser:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> b5f8f9ffbe11bee0.VArt:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 1e286207c3469180.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 1e286207c3469180.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 1e286207c3469180.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 1e286207c3469180.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 1e286207c3469180.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 7d75d288ebe660f4.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 7d75d288ebe660f4.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 7d75d288ebe660f4.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 7d75d288ebe660f4.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 7d75d288ebe660f4.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c5d17676be69bb9a.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c5d17676be69bb9a.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c5d17676be69bb9a.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> c5d17676be69bb9a.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> c5d17676be69bb9a.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> c5d17676be69bb9a.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 03570596ba1365c9.breakingt_NFT:507:8
    |
507 |         destroy() {
508 |             breakingt_NFT.totalSupply = breakingt_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d791dc5f5ac795a6.GigantikEvents_NFT:564:8
    |
564 |         destroy() {
565 |             GigantikEvents_NFT.totalSupply = GigantikEvents_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> a46a2b7bfcf16d82.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> a46a2b7bfcf16d82.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> a46a2b7bfcf16d82.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> a46a2b7bfcf16d82.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> a46a2b7bfcf16d82.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 5fb949aacbaeddb9.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 5fb949aacbaeddb9.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 5fb949aacbaeddb9.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 5fb949aacbaeddb9.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 5fb949aacbaeddb9.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f06b16dfda4d9023.PandaKingdom:106:4
    |
106 |     destroy() {
107 |       emit Burned(id: self.id, address: self.owner?.address)
108 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 92a67428a8ffe23c.FTWToken:44:8
   |
44 |         destroy() {
45 |             if self.balance > 0.0 {
46 |                 FTWToken.totalSupply = FTWToken.totalSupply - self.balance
47 |                 emit TokensBurned(amount: self.balance)
48 |             }
49 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 92a67428a8ffe23c.YDYToken:45:8
   |
45 |         destroy() {
46 |             if self.balance > 0.0 {
47 |                 YDYToken.totalSupply = YDYToken.totalSupply - self.balance
48 |                 emit TokensBurned(amount: self.balance)
49 |             }
50 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> a333f6184300345d.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> a333f6184300345d.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> a333f6184300345d.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> a333f6184300345d.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> a333f6184300345d.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> fd5e1f0da9e3212f.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> fd5e1f0da9e3212f.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> fd5e1f0da9e3212f.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> fd5e1f0da9e3212f.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> fd5e1f0da9e3212f.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6bef960e757d8adb.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 6bef960e757d8adb.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 6bef960e757d8adb.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 6bef960e757d8adb.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 6bef960e757d8adb.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 7a9e432bd36d26d5.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 7a9e432bd36d26d5.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 7a9e432bd36d26d5.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 7a9e432bd36d26d5.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 7a9e432bd36d26d5.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> f8f8e5db161c815d.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> f8f8e5db161c815d.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> f8f8e5db161c815d.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f8f8e5db161c815d.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f8f8e5db161c815d.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cffd9a8306e23a94.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> cffd9a8306e23a94.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> cffd9a8306e23a94.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> cffd9a8306e23a94.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> cffd9a8306e23a94.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b681e84ceea6299e.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b681e84ceea6299e.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> b681e84ceea6299e.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> b681e84ceea6299e.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> b681e84ceea6299e.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 941bd85f6636ec55.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 941bd85f6636ec55.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 941bd85f6636ec55.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 941bd85f6636ec55.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 941bd85f6636ec55.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> decaa77668d8b0a8.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> decaa77668d8b0a8.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> decaa77668d8b0a8.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> decaa77668d8b0a8.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> decaa77668d8b0a8.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> ebd3f8c5c7a05a5a.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ebd3f8c5c7a05a5a.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ebd3f8c5c7a05a5a.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> ebd3f8c5c7a05a5a.StoreFrontAuction:85:8
   |
85 |         destroy() {
86 |             // send the NFT back to auction owner
87 |             self.sendNFT(self.meta.ownerCollectionCap)
88 | 
89 |             // if there's a bidder...
90 |             if let vaultCap = self.meta.recipientVaultCap {
91 |                 // ...send the bid tokens back to the bidder
92 |                 self.sendBidTokens(vaultCap)
93 |             }
94 | 
95 |             destroy self.NFT
96 |             destroy self.bidVault
97 |         }
   |         ^ kinds: OtherComplexOperation, IfStatement, 
 complex destructor found
   --> ebd3f8c5c7a05a5a.StoreFrontAuction:342:8
    |
342 |         destroy() {
343 |             for id in self.auctionItems.keys {
344 |                 self.returnAuctionItemToOwner(id)
345 |             }
346 |             // destroy the empty resources
347 |             destroy self.auctionItems
348 |         }
    |         ^ kinds: LoopStatement, OtherComplexOperation, 
 complex destructor found
   --> 25ed8e5e0b629240.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 25ed8e5e0b629240.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 25ed8e5e0b629240.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b91d6d1a35de19b9.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> b91d6d1a35de19b9.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> b91d6d1a35de19b9.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e637521cf3331a30.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> e637521cf3331a30.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e637521cf3331a30.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 93b0e9a5bc0343af.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 93b0e9a5bc0343af.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 93b0e9a5bc0343af.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> fd34e10df50acfc4.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> fd34e10df50acfc4.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> fd34e10df50acfc4.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f305a4dd215a41fd.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f305a4dd215a41fd.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> f305a4dd215a41fd.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6b8b76833ea500b2.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 6b8b76833ea500b2.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 6b8b76833ea500b2.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 09e8665388e90671.TixologiTickets:552:8
    |
552 |         destroy() {
553 |             emit TicketDestroyed(id: self.id)
554 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3a456bb56e434986.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 3a456bb56e434986.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3a456bb56e434986.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 439ac98956ee30d8.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 439ac98956ee30d8.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 439ac98956ee30d8.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 52acb3b399df11fc.SeedsOfHappinessGenesis:291:8
    |
291 |         destroy() {
292 |             SeedsOfHappinessGenesis.totalSupply = SeedsOfHappinessGenesis.totalSupply - (1 as UInt64)
293 | 
294 |             emit Burned(id: self.id)
295 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d1b0d1ae259a9dfa.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d1b0d1ae259a9dfa.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> d1b0d1ae259a9dfa.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ba9ca54052375567.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> ba9ca54052375567.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> ba9ca54052375567.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> bb85167b7d2e1077.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> bb85167b7d2e1077.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> bb85167b7d2e1077.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> fc1c4a3a2180a92e.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> fc1c4a3a2180a92e.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> fc1c4a3a2180a92e.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1bd439127ac857fb.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1bd439127ac857fb.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 1bd439127ac857fb.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 28766db62a58d796.MetabiliaNFT:252:4
    |
252 |     destroy() {
253 |       emit NFTDestroyed(
254 |         id: self.id,
255 |       )
256 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> aa2c719e00ad4d6c.OverluPackage:99:8
    |
 99 |         destroy (){
100 | 
101 |             emit Destroyed(id: self.id, operator: self.owner?.address)
102 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> aa2c719e00ad4d6c.OverluDNA:99:9
    |
 99 |          destroy (){
100 |             
101 |             // destroy self.dnas
102 |             let typeSupply = OverluDNA.supplyOfTypes[self.typeId]!
103 |             assert(typeSupply > 0 && OverluDNA.currentSupply > 0, message: OverluError.errorEncode(msg: "DNA: type supply should be greater than 0", err: OverluError.ErrorCode.INVALID_PARAMETERS))
104 |             OverluDNA.supplyOfTypes[self.typeId] = typeSupply - UInt64(1)
105 |             OverluDNA.currentSupply = OverluDNA.currentSupply - UInt64(1)
106 | 
107 |             emit Destroyed(id: self.id, typeId: self.typeId, operator: self.owner?.address)
108 |         }
    |         ^^^^^^^^^^^^^ kinds: OtherComplexOperation, AssertOrCondition, EventEmission, 
 complex destructor found
   --> 8354f43fc4f0f451.MintMe:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 13aad23ba8d60cf6.Hexi_Coll_ac2d2c02_6fc1_11ed_8fd3_4851c5d34c30:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 2a80c22b96642829.Test:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0b80e42aaab305f0.MikoSeaMarket:173:8
    |
173 |         destroy () {
174 |             MikoSeaMarket.nftIds.remove(key: self.nftID)
175 |             if self.refId != nil {
176 |                 MikoSeaMarket.refIds.remove(key: self.refId!)
177 |             }
178 |             if !self.purchased {
179 |                 emit OrderCompleted(
180 |                     orderId: self.uuid,
181 |                     purchased: self.purchased,
182 |                     holderAddress: self.holderCap.address,
183 |                     buyerAddress: self.receiverCap?.address,
184 |                     nftID: self.nftID,
185 |                     nftType: self.nftType,
186 |                     price: self.salePrice
187 |                 )
188 |             }
189 |         }
    |         ^ kinds: OtherComplexOperation, IfStatement, EventEmission, 
 complex destructor found
   --> 0b80e42aaab305f0.MikoSeaMarket:355:8
    |
355 |         destroy () {
356 |             destroy self.orders
357 |             emit MikoSeaMarketDestroyed(marketResourceID: self.uuid)
358 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 051ccc1cc4035a46.CryptoLikeToken:82:8
   |
82 |         destroy() {
83 |             if self.balance > 0.0 {
84 |                 CryptoLikeToken.totalSupply = CryptoLikeToken.totalSupply - self.balance
85 |             }
86 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
  --> bfc1ef4bc4d9f162.testCollection:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> d21f56d4bf5391d1.Hexi_Coll_816d9cbb_6fc7_11ed_a1f3_5c80b6845fed:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1a43a9a37b3e4240.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 1a43a9a37b3e4240.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1a43a9a37b3e4240.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 1dae9f6072946097.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 1dae9f6072946097.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1dae9f6072946097.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 848d8db862439fc6.FraggleRock:49:4
   |
49 |     destroy() {
50 |       emit TibleDestroyed(id: self.id)
51 |     }
   |     ^ kinds: EventEmission, 
 complex destructor found
   --> 61b32707be1e33d2.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 61b32707be1e33d2.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 61b32707be1e33d2.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 66ecb2ed2b7ba5e4.NFTStorefront:452:8
    |
452 |         destroy () {
453 |             // If the listing has not been purchased, we regard it as completed here.
454 |             // Otherwise we regard it as completed in purchase().
455 |             // This is because we destroy the listing in Storefront.removeListing()
456 |             // or Storefront.cleanup() .
457 |             // If we change this destructor, revisit those functions.
458 |             if !self.details.purchased {
459 |                 emit ListingCompleted(
460 |                     listingResourceID: self.uuid,
461 |                     storefrontResourceID: self.details.storefrontID,
462 |                     purchased: self.details.purchased,
463 |                     nftType: self.details.nftType
464 |                 )
465 |             }
466 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 66ecb2ed2b7ba5e4.NFTStorefront:677:8
    |
677 |         destroy () {
678 |             destroy self.listings
679 | 
680 |             // Let event consumers know that this storefront will no longer exist
681 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
682 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 66ecb2ed2b7ba5e4.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> bc0b1ae1f2d2ae1f.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8dabdc2b71b2ee60.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 057775d339e11fb5.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 11e99c46d3c1d178.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d67f4d56640c4a48.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 8abcbf9c3bcc3ae6.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> aa1848d0949da952.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> de7a5daf9df48c65.Poop:119:8
    |
119 |         destroy() {
120 |             Poop.totalSupply = Poop.totalSupply - self.balance
121 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> de7a5daf9df48c65.Inbox:109:8
    |
109 |         destroy() {
110 |             pre {
111 |                 self.mails.length == 0: "Can't destroy: mails are left in the inbox"
112 |             }
113 |             destroy self.mails
114 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> de7a5daf9df48c65.EmptyPotionBottle:119:8
    |
119 |         destroy() {
120 |             EmptyPotionBottle.totalSupply = EmptyPotionBottle.totalSupply - self.balance
121 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> de7a5daf9df48c65.Pack:182:8
    |
182 |         destroy() {
183 |             assert(self.fungibleTokens.length == 0, message: "Can't destroy Pack with fungible tokens within")
184 |             assert(self.beast.keys.length == 0, message: "Can't destroy Pack with Beasts within")
185 |             destroy self.fungibleTokens
186 |             destroy self.beast
187 |         }
    |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> de7a5daf9df48c65.Sushi:119:8
    |
119 |         destroy() {
120 |             Sushi.totalSupply = Sushi.totalSupply - self.balance
121 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> de7a5daf9df48c65.BasicBeasts:407:8
    |
407 |         destroy() {
408 |             emit BeastDestroyed(id: self.id, serialNumber: self.serialNumber, beastTemplateID: self.beastTemplate.beastTemplateID)
409 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> adf8dcc78920950d.NiftoryDapperMainnet:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 46457f680657a8de.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 7cba6f98c393e94d.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 5db3585263eac4e7.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 72b7e7647598711f.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d0bcefdf1e67ea85.HWGarageTokenV2:185:8
    |
185 |         destroy() {
186 |             emit Burn(id: self.id)
187 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d0bcefdf1e67ea85.HWGarageCard:156:8
    |
156 |         destroy() {
157 |             emit Burn(id: self.id)
158 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d0bcefdf1e67ea85.HWGarageCardV2:193:8
    |
193 |         destroy() {
194 |             emit Burn(id: self.id)
195 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d0bcefdf1e67ea85.HWGaragePack:170:8
    |
170 |         destroy() {
171 |             emit Burn(id: self.id)
172 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d0bcefdf1e67ea85.HWGaragePackV2:192:8
    |
192 |         destroy() {
193 |             emit Burn(id: self.id)
194 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 34f8f67936d14606.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 6670649f173088c8.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 4d0aeab32001f786.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 85faeb810f60aac0.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2541a589a67f6eb0.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 81b817b74c78761d.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 5f4da03554851654.SwapPair:97:8
   |
97 |         destroy() {
98 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> d35d9bfea15a99d6.SwapPair:97:8
   |
97 |         destroy() {
98 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 6e4f1e2abdb23c78.TokndSwaychain:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 711e651815be40fc.ContractAniq1207:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 970eabf6eb637993.SGKCLDRAAAA:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 74fe011459426bc2.SwapPair:97:8
   |
97 |         destroy() {
98 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> f61f40376863eeb5.Wallet:146:8
    |
146 |         destroy() {
147 |             if self.balance > 0.0 {
148 |                 Wallet.totalSupply = Wallet.totalSupply - self.balance
149 |             }
150 |         }
    |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
   --> 5eb12ad3d5a99945.NFTStorefront:317:8
    |
317 |         destroy () {
318 |             // If the listing has not been purchased, we regard it as completed here.
319 |             // Otherwise we regard it as completed in purchase().
320 |             // This is because we destroy the listing in Storefront.removeListing()
321 |             // or Storefront.cleanup() .
322 |             // If we change this destructor, revisit those functions.
323 |             if !self.details.purchased {
324 |                 emit ListingCompleted(
325 |                     listingResourceID: self.uuid,
326 |                     storefrontResourceID: self.details.storefrontID,
327 |                     purchased: self.details.purchased
328 |                 )
329 |             }
330 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 5eb12ad3d5a99945.NFTStorefront:495:8
    |
495 |         destroy () {
496 |             destroy self.listings
497 | 
498 |             // Let event consumers know that this storefront will no longer exist
499 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
500 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5eb12ad3d5a99945.KeeprNFTStorefront:317:8
    |
317 |         destroy () {
318 |             // If the listing has not been purchased, we regard it as completed here.
319 |             // Otherwise we regard it as completed in purchase().
320 |             // This is because we destroy the listing in Storefront.removeListing()
321 |             // or Storefront.cleanup() .
322 |             // If we change this destructor, revisit those functions.
323 |             if !self.details.purchased {
324 |                 emit ListingCompleted(
325 |                     listingResourceID: self.uuid,
326 |                     storefrontResourceID: self.details.storefrontID,
327 |                     purchased: self.details.purchased
328 |                 )
329 |             }
330 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 5eb12ad3d5a99945.KeeprNFTStorefront:495:8
    |
495 |         destroy () {
496 |             destroy self.listings
497 | 
498 |             // Let event consumers know that this storefront will no longer exist
499 |             emit StorefrontDestroyed(storefrontResourceID: self.uuid)
500 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1a518837997dcb87.ifeelslick:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> d540c2c09cc08180.dinosteam:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 936bdcb98fe497ef.SwaychainToknd:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 73fde5a976a8d412.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 70d460a972f408e0.SGKCLDRAAAB:204:8
    |
204 |         destroy() {
205 |             emit CollectibleDestroyed(collectibleID: self.id)
206 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f38fadaba79009cc.MessageCard:179:8
    |
179 |         destroy() {
180 |             emit Destroyed(id: self.id)
181 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f38fadaba79009cc.MessageCard:285:8
    |
285 |         destroy() {
286 |             emit TemplateDestroyed(templateId: self.templateId, creator: self.creator, name: self.name)
287 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 374c0cd3028e31b8.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 374c0cd3028e31b8.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 374c0cd3028e31b8.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 374c0cd3028e31b8.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 374c0cd3028e31b8.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 374c0cd3028e31b8.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0f8d3495fb3e8d4b.GigDapper_NFT:507:8
    |
507 |         destroy() {
508 |             GigDapper_NFT.totalSupply = GigDapper_NFT.totalSupply - (1 as UInt64)
509 |             emit NFTDestroyed(id: self.id)
510 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 3cdbb3d569211ff3.NFTStorefrontV2:801:4
    |
801 | 				destroy () {
802 | 						destroy self.listings
803 | 
804 | 						// Let event consumers know that this storefront will no longer exist
805 | 						emit StorefrontDestroyed(storefrontResourceID: self.uuid)
806 | 				}
    | 				^ kinds: EventEmission, 
 complex destructor found
  --> 80ace84fda3500fd.TestNFT1:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4aec40272c01a94e.FlowtyTestNFT:212:8
    |
212 |         destroy() {
213 |             destroy self.ownedNFTs
214 |             emit CollectionDestroyed(id: self.uuid)
215 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 01b517856567ffe2.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 8b1191f2c2df7e7a.MusicPeaksSocialToken:250:8
    |
250 |         destroy() {
251 |             // If the FLOATEvent owner decided to unlink their public reference
252 |             // for some reason (heavily recommend against it), their records
253 |             // of who owns the MusicPeaksSocialToken is going to be messed up. But that is their
254 |             // fault. We shouldn't let that prevent the user from deleting the MusicPeaksSocialToken.
255 |             if let floatEvent: &FLOATEvent{FLOATEventPublic} = self.getEventMetadata() {
256 |                 floatEvent.updateFLOATHome(id: self.id, serial: self.serial, owner: nil)
257 |             }
258 |             emit FLOATDestroyed(
259 |                 id: self.id,
260 |                 eventHost: self.eventHost,
261 |                 eventId: self.eventId,
262 |                 eventImage: self.eventImage,
263 |                 serial: self.serial
264 |             )
265 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 8b1191f2c2df7e7a.MusicPeaksSocialToken:768:8
    |
768 |         destroy() {
769 |             emit FLOATEventDestroyed(eventId: self.eventId, host: self.host, name: self.name)
770 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8b1191f2c2df7e7a.MusicPeaksMembershipToken:250:8
    |
250 |         destroy() {
251 |             // If the FLOATEvent owner decided to unlink their public reference
252 |             // for some reason (heavily recommend against it), their records
253 |             // of who owns the MusicPeaksMembershipToken is going to be messed up. But that is their
254 |             // fault. We shouldn't let that prevent the user from deleting the MusicPeaksMembershipToken.
255 |             if let floatEvent: &FLOATEvent{FLOATEventPublic} = self.getEventMetadata() {
256 |                 floatEvent.updateFLOATHome(id: self.id, serial: self.serial, owner: nil)
257 |             }
258 |             emit FLOATDestroyed(
259 |                 id: self.id,
260 |                 eventHost: self.eventHost,
261 |                 eventId: self.eventId,
262 |                 eventImage: self.eventImage,
263 |                 serial: self.serial
264 |             )
265 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> 8b1191f2c2df7e7a.MusicPeaksMembershipToken:768:8
    |
768 |         destroy() {
769 |             emit FLOATEventDestroyed(eventId: self.eventId, host: self.host, name: self.name)
770 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> a02c28dc0aa50c18.MusicPeaksMembershipToken:250:8
    |
250 |         destroy() {
251 |             // If the FLOATEvent owner decided to unlink their public reference
252 |             // for some reason (heavily recommend against it), their records
253 |             // of who owns the MusicPeaksMembershipToken is going to be messed up. But that is their
254 |             // fault. We shouldn't let that prevent the user from deleting the MusicPeaksMembershipToken.
255 |             if let floatEvent: &FLOATEvent{FLOATEventPublic} = self.getEventMetadata() {
256 |                 floatEvent.updateFLOATHome(id: self.id, serial: self.serial, owner: nil)
257 |             }
258 |             emit FLOATDestroyed(
259 |                 id: self.id,
260 |                 eventHost: self.eventHost,
261 |                 eventId: self.eventId,
262 |                 eventImage: self.eventImage,
263 |                 serial: self.serial
264 |             )
265 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> a02c28dc0aa50c18.MusicPeaksMembershipToken:777:8
    |
777 |         destroy() {
778 |             emit FLOATEventDestroyed(eventId: self.eventId, host: self.host, name: self.name)
779 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f06e369c5860067a.OnFlowBr:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 49caeb6e48c046c5.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> faf6de204d055763.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 9d5b31b0ba72ce2b.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d909a860fc03a80e.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> d425846cfe2e6cdc.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d425846cfe2e6cdc.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d425846cfe2e6cdc.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> d425846cfe2e6cdc.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> d425846cfe2e6cdc.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> d425846cfe2e6cdc.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3c0b57eed46f9277.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 114b0a7b4fad41a9.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 87463edc18cd3a3e.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 0d6cd6ae41e1192c.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 50b047cb8dc6637d.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 3206df1262640a25.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> c467cbdf44afa9eb.MusicPeaksAttendanceToken:266:8
    |
266 |         destroy() {
267 |             // If the FLOATEvent owner decided to unlink their public reference
268 |             // for some reason (heavily recommend against it), their records
269 |             // of who owns the MusicPeaksAttendanceToken is going to be messed up. But that is their
270 |             // fault. We shouldn't let that prevent the user from deleting the MusicPeaksAttendanceToken.
271 |             if let floatEvent: &FLOATEvent{FLOATEventPublic} = self.getEventMetadata() {
272 |                 floatEvent.updateFLOATHome(id: self.id, serial: self.serial, owner: nil)
273 |             }
274 |             emit FLOATDestroyed(
275 |                 id: self.id,
276 |                 eventHost: self.eventHost,
277 |                 eventId: self.eventId,
278 |                 eventImage: self.eventImage,
279 |                 serial: self.serial
280 |             )
281 |         }
    |         ^ kinds: IfStatement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> c467cbdf44afa9eb.MusicPeaksAttendanceToken:835:8
    |
835 |         destroy() {
836 |             emit FLOATEventDestroyed(eventId: self.eventId, host: self.host, name: self.name)
837 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0ef658a163cc7138.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> de18835e9ce9b361.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> a7d78d6adf033f94.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> b488ab05b3ffb048.StoreFront:247:4
    |
247 |     destroy() {
248 |       StoreFront.totalSupply = StoreFront.totalSupply - 1
249 |       emit NFTDestroyed(nftId: self.id)
250 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 305eecbfb7e5ac3e.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 305eecbfb7e5ac3e.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 305eecbfb7e5ac3e.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 305eecbfb7e5ac3e.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 305eecbfb7e5ac3e.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 305eecbfb7e5ac3e.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> f02b15e11eb3715b.BWAYX_NFT:564:8
    |
564 |         destroy() {
565 |             BWAYX_NFT.totalSupply = BWAYX_NFT.totalSupply - (1 as UInt64)
566 |             emit NFTDestroyed(id: self.id)
567 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 80e1ebc3c112a633.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> f0898323d9a73670.POPEYE:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> 26a9c09cde94ca6a.Flover_Town:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3836e3173428cd71.Ron_Kamonohashi_Deranged_Detective:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3c9e63822c614a3a.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3c9e63822c614a3a.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3c9e63822c614a3a.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 3c9e63822c614a3a.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 3c9e63822c614a3a.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 3c9e63822c614a3a.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> fb5ef64a28c10293.FlowMonsters:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1e3f7e1256805674.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1e3f7e1256805674.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 1e3f7e1256805674.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 1e3f7e1256805674.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 1e3f7e1256805674.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 1e3f7e1256805674.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 17dfc02de921ecf1.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 17dfc02de921ecf1.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 17dfc02de921ecf1.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 17dfc02de921ecf1.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 17dfc02de921ecf1.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 17dfc02de921ecf1.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> 32a6af84f2f54476.MelodyTicket:92:8
   |
92 |         destroy (){
93 |             let metadata = self.getMetadata()
94 |             let status = (metadata["status"] as? UInt8?)!
95 |             let owner = (metadata["owner"] as? Address?)!
96 |             assert(status! > 1, message: MelodyError.errorEncode(msg: "Cannot destory ticket while it is activing", err: MelodyError.ErrorCode.WRONG_LIFE_CYCLE_STATE))
97 |             emit TicketDestoryed(id: self.id, owner: owner)
98 |         }
   |         ^ kinds: OtherComplexOperation, AssertOrCondition, EventEmission, 
 complex destructor found
   --> 32a6af84f2f54476.Melody:355:8
    |
355 |         destroy (){
356 |             pre {
357 |                 self.status == PaymentStatus.COMPLETE && self.status == PaymentStatus.CANCELED : MelodyError.errorEncode(msg: "Cannot destroy active payment", err: MelodyError.ErrorCode.WRONG_LIFE_CYCLE_STATE)
358 |                 self.vault.balance > 0.0 : MelodyError.errorEncode(msg: "Please withdraw the remaining funds", err: MelodyError.ErrorCode.WRONG_LIFE_CYCLE_STATE)
359 |             }
360 | 
361 |             emit PaymentDestroyed(paymentId: self.id, ticketId: self.ticket?.id)
362 | 
363 |             destroy self.vault
364 |             destroy self.ticket
365 | 
366 | 
367 |         }
    |         ^ kinds: EventEmission, AssertOrCondition, 
 complex destructor found
   --> 92035309379c112f.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 92035309379c112f.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 92035309379c112f.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 92035309379c112f.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 92035309379c112f.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 92035309379c112f.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> ab14be0e47a1a39a.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ab14be0e47a1a39a.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ab14be0e47a1a39a.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> ab14be0e47a1a39a.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> ab14be0e47a1a39a.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> ab14be0e47a1a39a.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> cae576d5ee656626.DeFox:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> a439bc35955add50.urusei_yatsura_mao:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9ba6ce4bceeedc8b.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9ba6ce4bceeedc8b.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9ba6ce4bceeedc8b.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9ba6ce4bceeedc8b.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9ba6ce4bceeedc8b.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9ba6ce4bceeedc8b.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> ff9826021170ada2.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ff9826021170ada2.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ff9826021170ada2.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> ff9826021170ada2.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> ff9826021170ada2.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> ff9826021170ada2.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8749944bf61c00b6.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8749944bf61c00b6.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8749944bf61c00b6.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 8749944bf61c00b6.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 8749944bf61c00b6.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 8749944bf61c00b6.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> acc7266a1817c632.kmcl2000:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> acac9fa5e5f583c1.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> acac9fa5e5f583c1.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> acac9fa5e5f583c1.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> acac9fa5e5f583c1.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> acac9fa5e5f583c1.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> acac9fa5e5f583c1.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> c53035e5c6d294b0.NewApp:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 1af680ec54d41dc6.SGKCLDRpuniru:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2b5858abc085393b.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> fd1dcba2a0bacf49.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> fd1dcba2a0bacf49.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> fd1dcba2a0bacf49.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> fd1dcba2a0bacf49.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> fd1dcba2a0bacf49.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> fd1dcba2a0bacf49.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> c697310927af41d7.aikondapp:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 4ba5947a0f1852c0.NFTStorefront:320:8
    |
320 |         destroy () {
321 |             // If the listing has not been purchased, we regard it as completed here.
322 |             // Otherwise we regard it as completed in purchase().
323 |             // This is because we destroy the listing in Storefront.removeListing()
324 |             // or Storefront.cleanup() .
325 |             // If we change this destructor, revisit those functions.
326 | 
327 |             if !self.details.purchased {
328 |                 emit ListingCompleted(
329 |                     id: self.details.id,
330 |                     nftID: self.details.nftID,
331 |                     nftType: self.details.nftType,
332 |                     paymentVaultType: self.details.paymentVaultType,
333 |                     price: self.details.price,
334 |                     expiry: self.details.expiry,
335 |                     purchased: self.details.purchased
336 |                 )
337 |             }
338 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> 4ba5947a0f1852c0.NFTStorefront:606:8
    |
606 |         destroy () {
607 |             destroy self.listings
608 | 
609 |             // Let event consumers know that this storefront will no longer exist
610 |             emit StorefrontDestroyed()
611 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 4ba5947a0f1852c0.MemeToken:104:8
    |
104 |         destroy() {
105 |             if self.balance > 0.0 {
106 |                 MemeToken.totalSupply = MemeToken.totalSupply - self.balance
107 |             }
108 |         }
    |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
   --> 27f2dabc047b133c.Laho:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 2b877dcf5d9bfb23.lcube:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 165daadd2a9437c6.Rumble:90:8
   |
90 |         destroy() {
91 |             if self.balance > 0.0 {
92 |                 Rumble.totalSupply = Rumble.totalSupply - self.balance
93 |             }
94 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
   --> 00e2e940bc621543.FormulaOne:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 5257f1455ed366fe.Magnetiq:696:8
    |
696 |         destroy() {
697 |             emit TokensDestroyed(id: self.id)
698 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f05c16172e99567b.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f05c16172e99567b.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f05c16172e99567b.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> f05c16172e99567b.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> f05c16172e99567b.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> f05c16172e99567b.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> f90e0b010df7581f.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f90e0b010df7581f.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f90e0b010df7581f.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> f90e0b010df7581f.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> f90e0b010df7581f.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> f90e0b010df7581f.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 12017c739390fa34.blockmatic:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 72cfcb2593d9e321.EatTheBeat:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 8da5308d889ef997.BreakTickets:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 9b43f6978d554717.EventTickets:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> ed569525ddedddf7.ClioDerma:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 892f4a6efd38a1f2.Team:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 025df6b1c8b88533.AYUSH:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 1409938251bc8f52.psk:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 85e84e343817fd0c.myapp:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> f49e75409f91e7b1.Dny1:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> 078f3716ca07719a.Rumble:90:8
   |
90 |         destroy() {
91 |             if self.balance > 0.0 {
92 |                 Rumble.totalSupply = Rumble.totalSupply - self.balance
93 |             }
94 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, 
 complex destructor found
   --> 9d2038b424f1f784.Web3DCT:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 8e15e0db14e496b3.FanxNFT:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 2772aa34edded534.rojanscontract:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> d808fc6a3b28bc4e.Gigantik_NFT:565:8
    |
565 |         destroy() {
566 |             Gigantik_NFT.totalSupply = Gigantik_NFT.totalSupply - (1 as UInt64)
567 |             emit NFTDestroyed(id: self.id)
568 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> ae5ecfa9ec85c139.SGKCLDR_the_national_gallery_london:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cba9e8026c5e2f78.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cba9e8026c5e2f78.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cba9e8026c5e2f78.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> cba9e8026c5e2f78.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> cba9e8026c5e2f78.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> cba9e8026c5e2f78.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d4cb4460f280fbe.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d4cb4460f280fbe.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d4cb4460f280fbe.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9d4cb4460f280fbe.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9d4cb4460f280fbe.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9d4cb4460f280fbe.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
  --> 01323907cf0026cd.Muze:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 10cd6dce8c318356.Trust:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
  --> ca24acbbcf76c736.SwapPair:97:8
   |
97 |         destroy() {
98 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 549042b567cf81f6.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 549042b567cf81f6.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 549042b567cf81f6.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 549042b567cf81f6.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 549042b567cf81f6.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 549042b567cf81f6.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> daa7edf5ff7b80ab.guiguikuru:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 375e7c0b2890c3a9.SerialExperimentsLain25th:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 811dde817e58a876.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 075bb45e0f1716a5.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 075bb45e0f1716a5.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 075bb45e0f1716a5.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 075bb45e0f1716a5.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 075bb45e0f1716a5.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 075bb45e0f1716a5.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> d714ab2d9943c4a5.SadboiNFT:273:4
    |
273 |     destroy() {
274 |       emit NFTDestroyed(
275 |         id: self.id,
276 |       )
277 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 479030c8c97e8c5d.TheMuzeum_NFT:565:8
    |
565 |         destroy() {
566 |             TheMuzeum_NFT.totalSupply = TheMuzeum_NFT.totalSupply - (1 as UInt64)
567 |             emit NFTDestroyed(id: self.id)
568 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 9fa431bc127036d4.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9fa431bc127036d4.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9fa431bc127036d4.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9fa431bc127036d4.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9fa431bc127036d4.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 9fa431bc127036d4.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> abe5a2bf47ce5bf3.aiSportsMinter:175:4
    |
175 |     destroy() {
176 |       destroy self.items
177 |       aiSportsMinter.totalBurned = aiSportsMinter.totalBurned + UInt64(1)
178 |       emit Burn(id: self.id)
179 |     }
    |     ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> f55fa028c084700e.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f55fa028c084700e.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> f55fa028c084700e.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> f55fa028c084700e.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> f55fa028c084700e.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> f55fa028c084700e.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d263cb333909bd1.BloomlyNFT:523:8
    |
523 |         destroy(){
524 |             emit NFTDestroyed(id: self.id, owner: self.owner?.address)
525 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 9d263cb333909bd1.BloomlyNFT:592:8
    |
592 |         destroy () {
593 |             destroy self.ownedNFTs
594 |             emit CollectionDestroyed(owner: self.owner?.address)
595 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> dfdf75887c9149d9.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> dfdf75887c9149d9.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> dfdf75887c9149d9.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> dfdf75887c9149d9.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> dfdf75887c9149d9.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> dfdf75887c9149d9.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 325a101f507b24f0.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 325a101f507b24f0.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 325a101f507b24f0.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 325a101f507b24f0.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 325a101f507b24f0.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 325a101f507b24f0.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 22649f209b30d336.Girlsinbootswithbeer:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 3ecd2df06be82939.BeerRun:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> ec55c6f3dae179c8.DSSCollection:425:8
    |
425 |         destroy() {
426 |             DSSCollection.totalSupply = DSSCollection.totalSupply - 1
427 |             emit CollectionNFTBurned(id: self.id)
428 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 58a6553ec31666e4.Capsuletest:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 8c84f31b9a0a71f5.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8c84f31b9a0a71f5.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 8c84f31b9a0a71f5.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> 8c84f31b9a0a71f5.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 8c84f31b9a0a71f5.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> 8c84f31b9a0a71f5.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> d31c80dddb9d6d82.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d31c80dddb9d6d82.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> d31c80dddb9d6d82.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> d31c80dddb9d6d82.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> d31c80dddb9d6d82.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> d31c80dddb9d6d82.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> a2d9c752d7b5e8c0.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> a2d9c752d7b5e8c0.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> a2d9c752d7b5e8c0.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> a2d9c752d7b5e8c0.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> a2d9c752d7b5e8c0.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> a2d9c752d7b5e8c0.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> 99367552a1c6ec30.new:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> b8b01ca6d3ffe311.SGKCLDR_sjmook_bp_tn:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> cfa4d9caf109c93e.gigdev_NFT:565:8
    |
565 |         destroy() {
566 |             gigdev_NFT.totalSupply = gigdev_NFT.totalSupply - (1 as UInt64)
567 |             emit NFTDestroyed(id: self.id)
568 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> 0d1bac322b7bd0f7.SwapPair:97:8
   |
97 |         destroy() {
98 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> e18217ad21a64b4c.TenantService:583:8
    |
583 |         destroy() {
584 |             emit ArchetypeDestroyed(self.id)
585 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e18217ad21a64b4c.TenantService:774:8
    |
774 |         destroy() {
775 |             emit ArtifactDestroyed(self.id)
776 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e18217ad21a64b4c.TenantService:926:8
    |
926 |         destroy() {
927 |             emit SetDestroyed(self.id)
928 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
    --> e18217ad21a64b4c.TenantService:1090:8
     |
1090 |         destroy() {
1091 |             emit PrintDestroyed(self.id)
1092 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> e18217ad21a64b4c.TenantService:1258:8
     |
1258 |         destroy() {
1259 |             emit FaucetDestroyed(self.id)
1260 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
    --> e18217ad21a64b4c.TenantService:1420:8
     |
1420 |         destroy() {
1421 |             emit NFTDestroyed(self.id)
1422 |         }
     |         ^ kinds: EventEmission, 
 complex destructor found
   --> d370ae493b8acc86.Planarias:128:8
    |
128 |         destroy() {
129 |             emit Die(name: self.name)
130 |             Planarias.population = Planarias.population - 1
131 |             if Planarias.population == 0 {
132 |                 emit End()
133 |             }
134 |         }
    |         ^ kinds: EventEmission, OtherComplexOperation, IfStatement, 
 complex destructor found
   --> 2a55fae690758563.SGKCLDR_stoneart_k:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 3ee7ea4af5232868.NFTProviderAggregator:369:8
    |
369 |         destroy() {
370 |             for collectionUUID in self.supplierAddedCollectionUUIDs.keys {
371 |                 // Check collectionUUID is present in the parent Aggregator resource's nftProviderCapabilities's
372 |                 // dictionary in case the manager already removed the capability
373 |                 if self.getCollectionUUIDs().contains(collectionUUID) {
374 |                     self.removeNFTProviderCapability(collectionUUID: collectionUUID)
375 |                 }
376 |             }
377 |         }
    |         ^ kinds: LoopStatement, IfStatement, OtherComplexOperation, 
 complex destructor found
  --> 8e3322f3451fcae8.SwapPair:97:8
   |
97 |         destroy() {
98 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
99 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 09fc279789ab0288.DapperUtilityCoin:81:8
   |
81 |         destroy() {
82 |             DapperUtilityCoin.totalSupply = DapperUtilityCoin.totalSupply - self.balance
83 |         }
   |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ca5c31c0c03e11be.Sportbit:122:8
    |
122 |         destroy() {
123 |             emit Destroyed(id: self.id, templateId: self.templateId)
124 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ca5c31c0c03e11be.Sportvatar:213:8
    |
213 |         destroy() {
214 |             destroy self.accessories
215 |             destroy self.background
216 |             emit Destroyed(id: self.id)
217 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 0604424c190bb8c6.SportsCast:350:8
    |
350 |         destroy() {
351 |             SportsCast.totalSupply = SportsCast.totalSupply - (1 as UInt64)
352 | 
353 |             // Update the burn count for the NFT's edition
354 |             let edition = self.getEdition()
355 | 
356 |             edition.incrementBurned()
357 | 
358 |             SportsCast.editions[edition.id] = edition
359 | 
360 |             emit Burned(id: self.id)
361 |         }
    |         ^ kinds: TotalSupplyDecrement, OtherComplexOperation, EventEmission, 
 complex destructor found
   --> ba28ffda0d656ad9.RecollectionBinder:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 8706fb2cb8e5b4e9.BlockchainOracle:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> e5bf4d436ca23932.BBxBarbiePack:180:8
    |
180 |         destroy() {
181 |             emit Burn(id: self.id)
182 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e5bf4d436ca23932.BBxBarbieCard:217:8
    |
217 |         destroy() {
218 |             emit Burn(id: self.id)
219 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> e5bf4d436ca23932.BBxBarbieToken:175:8
    |
175 |         destroy() {
176 |             emit Burn(id: self.id)
177 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> efb6d159519b5b8f.FTWToken:44:8
   |
44 |         destroy() {
45 |             if self.balance > 0.0 {
46 |                 FTWToken.totalSupply = FTWToken.totalSupply - self.balance
47 |                 emit TokensBurned(amount: self.balance)
48 |             }
49 |         }
   |         ^ kinds: IfStatement, TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> d97b262cbf2bd436.HeartFirstAcademy:83:8
   |
83 |         destroy() {
84 |             if (self.balance > 0.0) {
85 |                 emit TokensBurned(amount: self.balance)
86 |                 HeartFirstAcademy.totalSupply = HeartFirstAcademy.totalSupply - self.balance
87 |             }
88 |         }
   |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 0cf4408fe91f7d39.YDYMainnet:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 38637fc170038589.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> f1b196bee25b3ede.WATCHTOWER:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> f1b196bee25b3ede.SPIN:64:8
   |
64 |         destroy() {
65 |             emit Destroy(id: self.id)
66 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> e217638793f1e461.TobiraNeko:57:8
   |
57 |         destroy() {
58 |             emit Destroy(id: self.id)
59 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
  --> 0a2fbb92a8ae5c6d.Sk8tibles:49:4
   |
49 |     destroy() {
50 |       emit TibleDestroyed(id: self.id)
51 |     }
   |     ^ kinds: EventEmission, 
 complex destructor found
  --> eec024c36d5431d1.ChainLinkFlowToken:52:10
   |
52 |           destroy() {
53 |               ChainLinkFlowToken.totalSupply = ChainLinkFlowToken.totalSupply - self.balance
54 |           }
   |           ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> eec024c36d5431d1.ChainlinkFlowToken3:52:10
   |
52 |           destroy() {
53 |               ChainlinkFlowToken3.totalSupply = ChainlinkFlowToken3.totalSupply - self.balance
54 |           }
   |           ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> eec024c36d5431d1.ChainlinkFlowToken2:52:10
   |
52 |           destroy() {
53 |               ChainlinkFlowToken2.totalSupply = ChainlinkFlowToken2.totalSupply - self.balance
54 |           }
   |           ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 090967d01ac84f05.PAIPEPE:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
    --> 577a3c409c5dcb5e.Toucans:1047:4
     |
1047 |     destroy() {
1048 |       pre {
1049 |         false: "Disabled for now."
1050 |       }
1051 |       destroy self.treasury
1052 |       destroy self.minter
1053 |       destroy self.overflow
1054 |       destroy self.multiSignManager
1055 |       destroy self.additions
1056 |     }
     |     ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 078a8129525775dd.GreenBitcoin:110:8
    |
110 |         destroy() {
111 |             emit TokensBurned(amount: self.balance)
112 |             GreenBitcoin.totalSupply = GreenBitcoin.totalSupply - self.balance
113 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> 078a8129525775dd.GummyBear:116:8
    |
116 |         destroy() {
117 |             if (self.balance > 0.0) {
118 |                 emit TokensBurned(amount: self.balance)
119 |                 GummyBear.totalSupply = GummyBear.totalSupply - self.balance
120 |             }
121 |         }
    |         ^ kinds: IfStatement, EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> c62683804969427d.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 37166bde6029381e.SGKCLDR_conan:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> 2c6e551576dfddb4.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> a96bab234490fa61.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 10f1406b94467da7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> a855e495c1c9a6c9.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 48ff88b4ccb47359.Duckcoin:116:8
    |
116 |         destroy() {
117 |             emit TokensBurned(amount: self.balance)
118 |             Duckcoin.totalSupply = Duckcoin.totalSupply - self.balance
119 |         }
    |         ^ kinds: EventEmission, TotalSupplyDecrement, 
 complex destructor found
   --> bfb26bb8adf90399.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> de97f4b86ab282a0.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> c6cfb151ff031094.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 5754491b3cd95293.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 0cc82e3bf67cb40b.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> b451983bf6c95210.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 6ef1e8dccb9effd8.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 3918288f58dbf15f.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 503621e6e73352cf.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 72579b531b164a4b.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 281cf6e06f5f898b.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> d8570581084af378.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 14bc0af67ad1c5ff.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> 139955095e70c88f.PeaceToken:52:10
   |
52 |           destroy() {
53 |               PeaceToken.totalSupply = PeaceToken.totalSupply - self.balance
54 |           }
   |           ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 685426bad5df2f77.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> e600ffd2adb0c6d3.AlphaNFTV1:76:8
   |
76 |         destroy(){
77 |             emit NFTDestroyed(id: self.id)
78 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> 5b31da7d8814cf21.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> a902069300eac59f.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 558ef1a8a2d0e392.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> ae261ea3854063f7.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> dda02cd4192d6464.chiharasan:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c353b9d685ec427d.SwapPair:102:8
    |
102 |         destroy() {
103 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
104 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 34f57c74eb531a59.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 6e4a5a3ecbff4b4a.FlowVerse:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> b620a67f858c222e.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 3de0b9892cc3b20e.DatSlowFlow:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 2e5be00af9f7daac.UntoldPerksNFT:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 145e4a676452c671.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> e06a203a98ba7633.UFC_FAN_NFT:560:8
    |
560 |         destroy() {
561 |             UFC_FAN_NFT.totalSupply = UFC_FAN_NFT.totalSupply - (1 as UInt64)
562 |             emit NFTDestroyed(id: self.id)
563 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> e06a203a98ba7633.StrikeNow:327:4
    |
327 |     destroy() {
328 |       StrikeNow.totalSupply = StrikeNow.totalSupply - 1
329 |       emit NFTDestroyed(id: self.id)
330 |     }
    |     ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> f6784230d221f17f.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 123cb47fe122f6e3.ScoreToken:140:8
    |
140 |         destroy() {
141 |             ScoreToken.destroyTotalSupply(orderedDictionary: <-self.dailyBalances)
142 |             ScoreToken.totalSupply = ScoreToken.totalSupply - self.balance
143 |         }
    |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, 
 complex destructor found
   --> 123cb47fe122f6e3.MoxyToken:105:8
    |
105 |         destroy() {
106 |             MoxyToken.totalSupply = MoxyToken.totalSupply - self.balance
107 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 123cb47fe122f6e3.MoxyVaultToken:221:8
    |
221 |         destroy() {
222 |             destroy self.dailyBalances
223 |             MoxyVaultToken.totalSupply = MoxyVaultToken.totalSupply - self.balance
224 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 123cb47fe122f6e3.PlayToken:122:8
    |
122 |         destroy() {
123 |             // Updating total supply registered daily
124 |             PlayToken.destroyTotalSupply(orderedDictionary: <-self.dailyBalances)
125 |             PlayToken.totalSupply = PlayToken.totalSupply - self.balance
126 |         }
    |         ^ kinds: OtherComplexOperation, TotalSupplyDecrement, 
 complex destructor found
   --> 123cb47fe122f6e3.ColdStorage:114:4
    |
114 |     destroy (){
115 |       pre {
116 |         self.pendingVault.balance == 0.0 as UFix64
117 |       }
118 |       destroy self.pendingVault
119 |     }
    |     ^ kinds: AssertOrCondition, 
 complex destructor found
   --> b48e244310334193.miatech_NFT:565:8
    |
565 |         destroy() {
566 |             miatech_NFT.totalSupply = miatech_NFT.totalSupply - (1 as UInt64)
567 |             emit NFTDestroyed(id: self.id)
568 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 2e3e46b6a5d27dba.SGKCLDR_destro016:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> ca59ff6bb4287d65.SGKCLDR_jormungand:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> b910337b18bbb1a6.MyToken:52:10
   |
52 |           destroy() {
53 |               MyToken.totalSupply = MyToken.totalSupply - self.balance
54 |           }
   |           ^ kinds: TotalSupplyDecrement, 
 complex destructor found
  --> b910337b18bbb1a6.TestToken:52:10
   |
52 |           destroy() {
53 |               TestToken.totalSupply = TestToken.totalSupply - self.balance
54 |           }
   |           ^ kinds: TotalSupplyDecrement, 
 complex destructor found
 --> 23b08a725bc2533d.NeverEndingStory:4:8
  |
4 |         destroy() {
5 |             panic("The Nothing")
6 |         }
  |         ^ kinds: PanicCall, 
 complex destructor found
  --> 23b08a725bc2533d.Metabolism:11:8
   |
11 |         destroy() {
12 |             assert(self.is_dead, message: "Not dead yet.")
13 |         }
   |         ^ kinds: AssertOrCondition, 
 complex destructor found
   --> 9d9cb1f525c43b3d.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 492ecb50ee3a1f8f.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 2c352afaf13916c4.UntoldTest:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 77b8a61de1d0aeef.Swap:291:8
    |
291 |         destroy () {
292 |             if !self.details.filled {
293 |                 emit OrderCanceled(
294 |                     orderID: self.uuid,
295 |                     nftType: self.details.nftType,
296 |                     nftUUID: self.details.nftUUID,
297 |                     nftID: self.details.nftID,
298 |                     currency: self.details.currency,
299 |                     price: self.details.price,
300 |                     expiry: self.details.expiry
301 |                 )
302 |             }
303 |         }
    |         ^ kinds: IfStatement, EventEmission, 
 complex destructor found
   --> a06c38beec9cf0e8.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 71e7a5122a2f0817.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 30e8a35bbca1b810.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 4d22665b4318e514.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 276b231280fc3c36.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> c827986d7157c2c1.GigantikDemo_NFT:565:8
    |
565 |         destroy() {
566 |             GigantikDemo_NFT.totalSupply = GigantikDemo_NFT.totalSupply - (1 as UInt64)
567 |             emit NFTDestroyed(id: self.id)
568 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
  --> ecb0408a4ab2329d.Merchandise:65:8
   |
65 |         destroy() {
66 |             emit MerchandiseDestroyed(id: self.id)
67 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> ecb0408a4ab2329d.Merchandise:152:8
    |
152 |         destroy() {
153 |             let collectionLength = self.ownedNFTs.length
154 |             destroy self.ownedNFTs
155 |             emit CollectionDestroyed(length: collectionLength)
156 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> ecb0408a4ab2329d.EventTickets:65:8
   |
65 |         destroy() {
66 |             emit TicketDestroyed(id: self.id)
67 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> ecb0408a4ab2329d.EventTickets:167:8
    |
167 |         destroy() {
168 |             let collectionLength = self.ownedNFTs.length
169 |             destroy self.ownedNFTs
170 |             emit CollectionDestroyed(length: collectionLength)
171 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> ecb0408a4ab2329d.Collectibles:61:8
   |
61 |         destroy() {
62 |             emit CollectibleDestroyed(id: self.id)
63 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> ecb0408a4ab2329d.Collectibles:148:8
    |
148 |         destroy() {
149 |             let collectionLength = self.ownedNFTs.length
150 |             destroy self.ownedNFTs
151 |             emit CollectionDestroyed(length: collectionLength)
152 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> ff622d5afb6063a0.SimpliFlow:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> ab062fa1a1653f76.wwc_NFT:565:8
    |
565 |         destroy() {
566 |             wwc_NFT.totalSupply = wwc_NFT.totalSupply - (1 as UInt64)
567 |             emit NFTDestroyed(id: self.id)
568 |         }
    |         ^ kinds: TotalSupplyDecrement, EventEmission, 
 complex destructor found
   --> 07676b2fa2054cdb.oshiro_robots:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
   --> c532e7ab40e456e8.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 891fd363c37646bf.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> 9ec30639d0e81173.Crayon_Shinchan_2023:200:8
    |
200 |         destroy() {
201 |             emit CollectibleDestroyed(collectibleID: self.id)
202 |         }
    |         ^ kinds: EventEmission, 
 complex destructor found
  --> d8f6dd312265bd2c.EventTickets:65:8
   |
65 |         destroy() {
66 |             emit TicketDestroyed(id: self.id)
67 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> d8f6dd312265bd2c.EventTickets:167:8
    |
167 |         destroy() {
168 |             let collectionLength = self.ownedNFTs.length
169 |             destroy self.ownedNFTs
170 |             emit CollectionDestroyed(length: collectionLength)
171 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> d8f6dd312265bd2c.Collectibles:61:8
   |
61 |         destroy() {
62 |             emit CollectibleDestroyed(id: self.id)
63 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> d8f6dd312265bd2c.Collectibles:148:8
    |
148 |         destroy() {
149 |             let collectionLength = self.ownedNFTs.length
150 |             destroy self.ownedNFTs
151 |             emit CollectionDestroyed(length: collectionLength)
152 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
  --> d8f6dd312265bd2c.Merchandise:65:8
   |
65 |         destroy() {
66 |             emit MerchandiseDestroyed(id: self.id)
67 |         }
   |         ^ kinds: EventEmission, 
 complex destructor found
   --> d8f6dd312265bd2c.Merchandise:152:8
    |
152 |         destroy() {
153 |             let collectionLength = self.ownedNFTs.length
154 |             destroy self.ownedNFTs
155 |             emit CollectionDestroyed(length: collectionLength)
156 |         }
    |         ^ kinds: OtherComplexOperation, EventEmission, 
 complex destructor found
   --> a1b752e984ae384c.SwapPair:101:8
    |
101 |         destroy() {
102 |             SwapPair.totalSupply = SwapPair.totalSupply - self.balance
103 |         }
    |         ^ kinds: TotalSupplyDecrement, 
 complex destructor found
   --> f3682c0ef7e4f2e6.MomentableAI:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
 complex destructor found
   --> 6b91adebfde2bec2.MomentableArt:180:4
    |
180 |     destroy() {
181 |       emit NFTBurned(
182 |         setId: self.setId,
183 |         templateId: self.templateId,
184 |         serial: self.serial
185 |       )
186 |     }
    |     ^ kinds: EventEmission, 
